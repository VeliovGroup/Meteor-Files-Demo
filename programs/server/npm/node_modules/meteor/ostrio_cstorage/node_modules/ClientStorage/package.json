{
  "_args": [
    [
      {
        "raw": "ClientStorage@2.1.3",
        "scope": null,
        "escapedName": "ClientStorage",
        "name": "ClientStorage",
        "rawSpec": "2.1.3",
        "spec": "2.1.3",
        "type": "version"
      },
      "/Users/drdimitru/Sites/npm-client-storage/.npm/package-new-19sod6s"
    ]
  ],
  "_from": "ClientStorage@2.1.3",
  "_id": "ClientStorage@2.1.3",
  "_inCache": true,
  "_location": "/ClientStorage",
  "_nodeVersion": "4.8.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/ClientStorage-2.1.3.tgz_1494996644225_0.7375566586852074"
  },
  "_npmUser": {
    "name": "dr.dimitru",
    "email": "ceo@veliov.com"
  },
  "_npmVersion": "4.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ClientStorage@2.1.3",
    "scope": null,
    "escapedName": "ClientStorage",
    "name": "ClientStorage",
    "rawSpec": "2.1.3",
    "spec": "2.1.3",
    "type": "version"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/ClientStorage/-/ClientStorage-2.1.3.tgz",
  "_shasum": "fddc5ffbbe348e19da766e2ffc37f793c7babf76",
  "_shrinkwrap": null,
  "_spec": "ClientStorage@2.1.3",
  "_where": "/Users/drdimitru/Sites/npm-client-storage/.npm/package-new-19sod6s",
  "author": {
    "name": "Dmitriy A.",
    "url": "https://veliovgroup.com"
  },
  "bugs": {
    "url": "https://github.com/VeliovGroup/Client-Storage/issues"
  },
  "dependencies": {},
  "description": "Bulletproof persistent browser storage, works with disabled Cookies and/or localStorage",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "fddc5ffbbe348e19da766e2ffc37f793c7babf76",
    "tarball": "https://registry.npmjs.org/ClientStorage/-/ClientStorage-2.1.3.tgz"
  },
  "gitHead": "9956a322b5977a905d0eb4a4ced52f97fcc3310e",
  "homepage": "https://github.com/VeliovGroup/Client-Storage",
  "keywords": [
    "browser",
    "persistent",
    "bulletproof",
    "browser",
    "storage",
    "localStorage",
    "local storage",
    "cookies",
    "disabled cookies",
    "client",
    "meteor",
    "meteorjs"
  ],
  "license": "BSD-3-Clause",
  "main": "./client-storage.js",
  "maintainers": [
    {
      "name": "dr.dimitru",
      "email": "ceo@veliov.com"
    }
  ],
  "name": "ClientStorage",
  "optionalDependencies": {},
  "readme": "Persistent Client (Browser) Storage\n========\n\n - Bulletproof persistent Client storage;\n - Support for Unicode values and keys;\n - Works in browser with disabled `localStorage` and `cookies`;\n - __100%__ tests coverage.\n\nInstall:\n========\n```shell\nnpm install --save ClientStorage\n```\n\nInstall Meteor:\n========\n```shell\n# Via Atmosphere\nmeteor add ostrio:cstorage\n```\n\n```shell\n# Via NPM\nmeteor npm install --save ClientStorage\n```\n\nRequire:\n========\n```jsx\nvar ClientStorage = require('ClientStorage').ClientStorage;\n```\n\nES6 Import (Meteor):\n========\n```jsx\nimport { ClientStorage } from 'meteor/ostrio:cstorage';\n```\n\nUsage:\n========\n#### Get\n - `ClientStorage.get('key')` - Read a record. If the key doesn't exist a null value will be returned.\n\n#### Set\n - `ClientStorage.set('key', value)` - Create/overwrite a value in storage.\n\n#### Remove\n - `ClientStorage.remove('key')` - Remove a record.\n\n#### Has\n - `ClientStorage.has('key')` - Check whether a record exists, returns a boolean value.\n\n#### Keys\n - `ClientStorage.keys()` - Returns an array of all storage keys.\n\n#### Empty\n - `ClientStorage.empty()` - Empty storage (remove all key/value pairs). __Use with caution! (*May remove cookies which weren't set by you*)__.\n\nAlternate usage:\n========\n#### Use `cookies` only\nTo use `cookies` as a driver for `ClientStorage` create new instance of `clientStorage` (*camel-case, first letter __lower-case__*)\n```js\nvar clientStorage  = require('ClientStorage').clientStorage;\nvar csCookies = new clientStorage('cookies');\n```\n\nor in ES6 (Meteor):\n```jsx\nimport { clientStorage } from 'meteor/ostrio:cstorage';\nconst csLocalStorage = new clientStorage('cookies');\n```\n\n#### Use `localStorage` only\nTo use `localStorage` as a driver for `ClientStorage` create new instance of `clientStorage` (*camel-case, first letter __lower-case__*):\n```js\nvar clientStorage  = require('ClientStorage').clientStorage;\nvar csLocalStorage = new clientStorage('localStorage');\n```\n\nor in ES6 (Meteor):\n```jsx\nimport { clientStorage } from 'meteor/ostrio:cstorage';\nconst csLocalStorage = new clientStorage('localStorage');\n```\n\n__Note:__ *All instances shares same cookies and localStorage records!*\n\nExample:\n=========\n```javascript\nClientStorage.set('locale', 'en'); // true\nClientStorage.set('country', 'usa'); // true\nClientStorage.set('gender', 'male'); // true\n\nClientStorage.get('gender'); // male\n\nClientStorage.has('locale'); // true\nClientStorage.has('city'); // false\n\nClientStorage.keys(); // ['locale', 'country', 'gender']\n\nClientStorage.remove('locale'); // true\nClientStorage.get('locale'); // undefined\n\nClientStorage.keys(); // ['country', 'gender']\n\nClientStorage.empty(); // true\nClientStorage.keys(); // []\n\nClientStorage.empty(); // false\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/VeliovGroup/Client-Storage.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "tags": [
    "browser",
    "persistent",
    "bulletproof",
    "browser",
    "storage",
    "localStorage",
    "local storage",
    "cookies",
    "disabled cookies",
    "client",
    "meteor",
    "meteorjs"
  ],
  "version": "2.1.3"
}
