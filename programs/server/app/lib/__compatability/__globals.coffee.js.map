{"version":3,"sources":["meteor://ðŸ’»app/lib/__compatability/__globals.coffee"],"names":[],"mappings":";;;;;;;;;AAAA,IAAC,YAAD,GAAe,EAAf;;AAAA,IACC,KAAD,GACE;AAAA,QAAU,iBAAV;AAAA,EACA,UAAU,SADV;AAAA,EAEA,MAAM,aAFN;CAFF;;AAMA,IAAG,MAAM,CAAC,QAAV;AACE,MAAmC,cAAiB,CAAC,GAAd,CAAkB,QAAlB,CAAJ,IAAmC,EAAK,CAAC,OAAF,CAAU,aAAa,CAAC,GAAd,CAAkB,QAAlB,CAAV,CAA1E;AAAA,iBAAa,CAAC,GAAd,CAAkB,QAAlB,EAA4B,EAA5B;GAAA;AAAA,EACA,IAAI,CAAC,MAAL,GAAkB,gBAAY,aAAa,CAAC,GAAd,CAAkB,QAAlB,CAAZ,CADlB;AAAA,EAEA,MAAM,CAAC,OAAP,CAAe;AACb,iBAAa,CAAC,GAAd,CAAkB,QAAlB,EAA4B,IAAI,CAAC,MAAM,CAAC,GAAZ,EAA5B,EADa;EAAA,CAAf,CAFA;AAMA,oBAAgE,CAAC,GAAd,CAAkB,iBAAlB,CAAnD;AAAA,iBAAa,CAAC,GAAd,CAAkB,iBAAlB,EAAqC,KAArC;GANA;AAAA,EAOA,QAAQ,CAAC,cAAT,CAAwB,UAAxB,EAAoC,SAAC,IAAD;;MAAC,OAAO;KAAM;WAAA,SAAS,IAAT,EAAd;EAAA,CAApC,CAPA;AAAA,EAQA,QAAQ,CAAC,cAAT,CAAwB,SAAxB,EAAmC,SAAC,QAAD;AACjC;;MADkC,WAAW;KAC7C;AAAA,YAAQ,QAAQ,CAAC,KAAT,CAAe,GAAf,CAAR;AACA,QAAe,KAAK,CAAC,MAAN,GAAe,CAA9B;AAAA,WAAK,CAAC,GAAN;KADA;AAEA,WAAO,KAAK,CAAC,IAAN,CAAW,GAAX,CAAP,CAHiC;EAAA,CAAnC,CARA;AAAA,EAaA,MAAM,CAAC,UAAP,CACE;AAAA,eAAW,SAAC,IAAD;aAAW,IAAI,CAAC,aAAL,CAAmB,IAAnB,CAAwB,CAAC,MAApC;IAAA,CAAX;AAAA,IACA,UAAc,UAAM,CAAC,QAAP,EADd;AAAA,IAEA,KAAK,IAFL;AAAA,IAGA,QAAQ,IAHR;AAAA,IAIA,QAAQ,KAJR;AAAA,IAKA,UAAU,KALV;AAAA,IAMA,UAAU,IANV;AAAA,IAOA,YAAY,IAPZ;AAAA,IAQA,aAAa,KARb;GADF,CAbA,CADF;CANA","file":"/lib/__compatability/__globals.coffee.js","sourcesContent":["@Collections = {}\n@_app = \n  subs: new SubsManager()\n  storeTTL: 259200000\n  NOOP: -> return\n\nif Meteor.isClient\n  ClientStorage.set('blamed', []) if not ClientStorage.has('blamed') or not _.isArray ClientStorage.get('blamed')\n  _app.blamed = new ReactiveVar ClientStorage.get 'blamed'\n  Meteor.autorun ->\n    ClientStorage.set 'blamed', _app.blamed.get()\n    return\n\n  ClientStorage.set('uploadTransport', 'ddp') unless ClientStorage.has 'uploadTransport'\n  Template.registerHelper 'filesize', (size = 0) -> filesize size\n  Template.registerHelper 'extless', (filename = '') ->\n    parts = filename.split '.'\n    parts.pop() if parts.length > 1\n    return parts.join '.'\n\n  marked.setOptions\n    highlight: (code) ->  hljs.highlightAuto(code).value\n    renderer: new marked.Renderer()\n    gfm: true\n    tables: true\n    breaks: false\n    pedantic: false\n    sanitize: true\n    smartLists: true\n    smartypants: false"]}