{"version":3,"sources":["meteor://ðŸ’»app/lib/files.collection.coffee"],"names":[],"mappings":";;;;;;;;;AAAA,WAAW,CAAC,KAAZ,GAAwB,UAAM,CAAC,KAAP,CACtB;AAAA,SAAkB,KAAlB;AAAA,EACA,UAAkB,KADlB;AAAA,EAEA,WAAkB,OAAK,IAFvB;AAAA,EAGA,aAAkB,kCAHlB;AAAA,EAIA,gBAAkB,eAJlB;AAAA,EAKA,iBAAkB,KALlB;AAAA,EAMA,gBAAkB;AAAG,QAAG,IAAC,KAAI,CAAC,IAAN,IAAc,SAAS,EAAT,GAAc,GAA/B;aAAwC,KAAxC;KAAA;aAAkD,oDAAiD,CAAC,SAAS,IAAC,KAAI,CAAC,IAAf,CAAD,EAAnG;KAAH;EAAA,CANlB;AAAA,EAOA,kBAAkB,SAAC,OAAD;AAChB;AAAA,0CAAU,CAAE,KAAK,CAAC,kBAAf,KAA2B,MAA9B;AACE,iBAAW,CAAC,KAAK,CAAC,UAAU,CAAC,MAA7B,CAAoC,OAAO,CAAC,GAA5C,EAAiD;AAAA,cAAM;AAAA,4BAAkB,CAAlB;SAAN;OAAjD,EADF;KAAA;AAEA,WAAO,IAAP,CAHgB;EAAA,CAPlB;CADsB,CAAxB;;AAaA,IAAG,MAAM,CAAC,QAAV;AACE,aAAW,CAAC,KAAK,CAAC,UAAU,CAAC,IAA7B,CACE;AAAA,YAAQ;aAAG,KAAH;IAAA,CAAR;AAAA,IACA,QAAQ;aAAG,KAAH;IAAA,CADR;AAAA,IAEA,QAAQ;aAAG,KAAH;IAAA,CAFR;GADF;AAAA,EAKA,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,YAA7B,CAA0C;AAAA,IAAC,iBAAiB,CAAlB;GAA1C,EAAgE;AAAA,IAAC,oBAAoB,CAArB;AAAA,IAAwB,YAAY,IAApC;GAAhE,CALA;AAAA,EAUA,MAAM,CAAC,OAAP,CAAe,QAAf,EAAyB,SAAC,IAAD;;MAAC,OAAO;KAC/B;AAAA,UAAM,IAAN,EAAY,MAAZ;WACA,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,IAA7B,CAAkC,EAAlC,EAEE;AAAA,aAAO,IAAP;AAAA,MACA,MAAM;AAAA,2BAAmB,EAAnB;OADN;AAAA,MAEA,QACE;AAAA,aAAK,CAAL;AAAA,QACA,MAAM,CADN;AAAA,QAEA,MAAM,CAFN;AAAA,QAGA,MAAM,CAHN;AAAA,QAIA,SAAS,CAJT;AAAA,QAKA,SAAS,CALT;AAAA,QAMA,SAAS,CANT;OAHF;KAFF,EAFuB;EAAA,CAAzB,CAVA;AAAA,EAyBA,MAAM,CAAC,OAAP,CAAe,MAAf,EAAuB,SAAC,GAAD;AACrB,UAAM,GAAN,EAAW,MAAX;WACA,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,IAA7B,CAAkC,GAAlC,EAFqB;EAAA,CAAvB,CAzBA;AAAA,EA6BA,MAAM,CAAC,OAAP,CACE;AAAA,mBAAe;aAAG,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,IAA7B,CAAkC,EAAlC,CAAqC,CAAC,KAAtC,GAAH;IAAA,CAAf;GADF,CA7BA,CADF;CAbA","file":"/lib/files.collection.coffee.js","sourcesContent":["Collections.files = new Meteor.Files \n  debug:            false\n  throttle:         false\n  chunkSize:        1024*1024\n  storagePath:      'assets/app/uploads/uploadedFiles'\n  collectionName:   'uploadedFiles'\n  allowClientCode:  false\n  onBeforeUpload:   -> if @file.size <= 100000 * 10 * 128 then true else \"Max. file size is 128MB you've tried to upload #{filesize(@file.size)}\"\n  downloadCallback: (fileObj) -> \n    if @params?.query.download is 'true'\n      Collections.files.collection.update fileObj._id, $inc: 'meta.downloads': 1\n    return true\n\nif Meteor.isServer\n  Collections.files.collection.deny\n    insert: -> true\n    update: -> true\n    remove: -> true\n\n  Collections.files.collection._ensureIndex {'meta.expireAt': 1}, {expireAfterSeconds: 0, background: true}\n  \n  # Remove all files on server load/reload, useful while testing/development\n  # Meteor.startup -> Collections.files.remove {}\n\n  Meteor.publish 'latest', (take = 50)->\n    check take, Number\n    Collections.files.collection.find {}\n    ,\n      limit: take\n      sort: 'meta.created_at': -1\n      fields:\n        _id: 1\n        name: 1\n        size: 1\n        meta: 1\n        isVideo: 1\n        isAudio: 1\n        isImage: 1\n\n  Meteor.publish 'file', (_id)->\n    check _id, String\n    Collections.files.collection.find _id\n\n  Meteor.methods\n    'filesLenght': -> Collections.files.collection.find({}).count()"]}