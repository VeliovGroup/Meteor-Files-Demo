{"version":3,"sources":["meteor://ðŸ’»app/imports/lib/core.js","meteor://ðŸ’»app/imports/server/files.collection.js","meteor://ðŸ’»app/imports/server/image-processing.js","meteor://ðŸ’»app/imports/server/methods.js","meteor://ðŸ’»app/imports/server/publications.js","meteor://ðŸ’»app/imports/server/service-configurations.js","meteor://ðŸ’»app/imports/server/spiderable.js","meteor://ðŸ’»app/server/core.js"],"names":["module","export","_app","Collections","NOOP","_","watch","require","v","Meteor","Random","filesize","FilesCollection","useDropBox","useS3","client","sendToStorage","fs","S3","stream","request","Dropbox","bound","bindEnvironment","callback","process","env","DROPBOX","settings","dropbox","JSON","parse","s3","s3Conf","dbConf","key","secret","token","Client","bucket","region","secretAccessKey","accessKeyId","sslEnabled","httpOptions","timeout","agent","files","chunkSize","storagePath","collectionName","allowClientCode","fileObj","meta","secured","userId","onBeforeRemove","cursor","res","map","file","isString","indexOf","onBeforeUpload","size","downloadCallback","params","query","download","collection","update","_id","$inc","interceptDownload","http","fileRef","version","path","versions","pipeFrom","serve","url","headers","pick","pipePath","opts","Bucket","Key","range","vRef","clone","array","split","start","parseInt","end","isNaN","Range","fileColl","getObject","error","console","response","finished","httpResponse","replace","dataStream","PassThrough","data","Body","denyClient","on","_fileRef","makeUrl","stat","triesUrl","long","downloadHack","xml","setTimeout","upd","$set","updError","unlink","findOne","writeToDB","triesSend","writeFile","extension","readFile","triesRead","each","filePath","id","putObject","StorageClass","createReadStream","ContentType","type","test","createThumbnails","_origRemove","remove","search","find","forEach","deleteObject","call","setInterval","$lte","Date","check","gm","cb","Object","isLast","finish","exists","Error","image","sizes","preview","width","thumbnail40","square","features","i","height","name","copyPaste","copy","fsCopyError","colUpdError","keys","length","img","quality","define","autoOrient","noProfile","strip","dither","interlace","filter","updateAndSave","upNSaveError","fsStatError","gmSizeError","imgInfo","resize","write","x","y","widthRatio","heightRatio","widthNew","heightNew","crop","methods","filesLenght","userOnly","Boolean","selector","$or","$lt","count","unblame","String","blame","changeAccess","unlisted","changePrivacy","getServiceConfiguration","sc","publish","take","Number","limit","sort","fields","isPDF","isText","isJSON","isVideo","isAudio","isImage","_collectionName","_downloadRoute","ServiceConfiguration","configurations","ACCOUNTS_METEOR_ID","ACCOUNTS_METEOR_SEC","meteor","upsert","service","clientId","loginStyle","ACCOUNTS_GITHUB_ID","ACCOUNTS_GITHUB_SEC","github","ACCOUNTS_TWITTER_ID","ACCOUNTS_TWITTER_SEC","twitter","consumerKey","ACCOUNTS_FACEBOOK_ID","ACCOUNTS_FACEBOOK_SEC","facebook","appId"],"mappings":"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","file":"/app.js","sourcesContent":["const Collections = {};\nconst _app = { NOOP(){} };\n\nexport { _app, Collections };\n","import { _ }                 from 'meteor/underscore';\nimport { Meteor }            from 'meteor/meteor';\nimport { Random }            from 'meteor/random';\nimport { filesize }          from 'meteor/mrt:filesize';\nimport { FilesCollection }   from 'meteor/ostrio:files';\nimport { _app, Collections } from '/imports/lib/core.js';\n\n// DropBox usage:\n// Read: https://github.com/VeliovGroup/Meteor-Files/wiki/DropBox-Integration\n// env.var example: DROPBOX='{\"dropbox\":{\"key\": \"xxx\", \"secret\": \"xxx\", \"token\": \"xxx\"}}'\nlet useDropBox = false;\n\n// AWS:S3 usage:\n// Read: https://github.com/VeliovGroup/Meteor-Files/wiki/AWS-S3-Integration\n// env.var example: S3='{\"s3\":{\"key\": \"xxx\", \"secret\": \"xxx\", \"bucket\": \"xxx\", \"region\": \"xxx\"\"}}'\nlet useS3 = false;\nlet client;\nlet sendToStorage;\n\nconst fs      = require('fs-extra');\nconst S3      = require('aws-sdk/clients/s3');\nconst stream  = require('stream');\nconst request = require('request');\nconst Dropbox = require('dropbox');\nconst bound   = Meteor.bindEnvironment((callback) => {\n  return callback();\n});\n\nif (process.env.DROPBOX) {\n  Meteor.settings.dropbox = JSON.parse(process.env.DROPBOX).dropbox;\n} else if (process.env.S3) {\n  Meteor.settings.s3 = JSON.parse(process.env.S3).s3;\n}\n\nconst s3Conf = Meteor.settings.s3 || {};\nconst dbConf = Meteor.settings.dropbox || {};\n\nif (dbConf && dbConf.key && dbConf.secret && dbConf.token) {\n  useDropBox = true;\n  client     = new Dropbox.Client({\n    key: dbConf.key,\n    secret: dbConf.secret,\n    token: dbConf.token\n  });\n} else if (s3Conf && s3Conf.key && s3Conf.secret && s3Conf.bucket && s3Conf.region) {\n  useS3  = true;\n  client = new S3({\n    secretAccessKey: s3Conf.secret,\n    accessKeyId: s3Conf.key,\n    region: s3Conf.region,\n    sslEnabled: false,\n    httpOptions: {\n      timeout: 6000,\n      agent: false\n    }\n  });\n}\n\nCollections.files = new FilesCollection({\n  // debug: true,\n  // throttle: false,\n  chunkSize: 1024 * 768,\n  storagePath: 'assets/app/uploads/uploadedFiles',\n  collectionName: 'uploadedFiles',\n  allowClientCode: true,\n  protected(fileObj) {\n    if (fileObj) {\n      if (!(fileObj.meta && fileObj.meta.secured)) {\n        return true;\n      } else if ((fileObj.meta && fileObj.meta.secured === true) && this.userId === fileObj.userId) {\n        return true;\n      }\n    }\n    return false;\n  },\n  onBeforeRemove(cursor) {\n    const res = cursor.map((file) => {\n      if (file && file.userId && _.isString(file.userId)) {\n        return file.userId === this.userId;\n      }\n      return false;\n    });\n    return !~res.indexOf(false);\n  },\n  onBeforeUpload() {\n    if (this.file.size <= 1024 * 1024 * 128) {\n      return true;\n    }\n    return \"Max. file size is 128MB you've tried to upload \" + (filesize(this.file.size));\n  },\n  downloadCallback(fileObj) {\n    if (this.params && this.params.query && this.params.query.download === 'true') {\n      Collections.files.collection.update(fileObj._id, {\n        $inc: {\n          'meta.downloads': 1\n        }\n      }, _app.NOOP);\n    }\n    return true;\n  },\n  interceptDownload(http, fileRef, version) {\n    let path;\n    if (useDropBox) {\n      path = (fileRef && fileRef.versions && fileRef.versions[version] && fileRef.versions[version].meta && fileRef.versions[version].meta.pipeFrom) ? fileRef.versions[version].meta.pipeFrom : void 0;\n      if (path) {\n        // If file is successfully moved to Storage\n        // We will pipe request to Storage\n        // So, original link will stay always secure\n\n        // To force ?play and ?download parameters\n        // and to keep original file name, content-type,\n        // content-disposition and cache-control\n        // we're using low-level .serve() method\n        this.serve(http, fileRef, fileRef.versions[version], version, request({\n          url: path,\n          headers: _.pick(http.request.headers, 'range', 'cache-control', 'connection')\n        }));\n        return true;\n      }\n      // While file is not yet uploaded to Storage\n      // We will serve file from FS\n      return false;\n    } else if (useS3) {\n      path = (fileRef && fileRef.versions && fileRef.versions[version] && fileRef.versions[version].meta && fileRef.versions[version].meta.pipePath) ? fileRef.versions[version].meta.pipePath : void 0;\n      if (path) {\n        // If file is successfully moved to Storage\n        // We will pipe request to Storage\n        // So, original link will stay always secure\n\n        // To force ?play and ?download parameters\n        // and to keep original file name, content-type,\n        // content-disposition and cache-control\n        // we're using low-level .serve() method\n        const opts = {\n          Bucket: s3Conf.bucket,\n          Key: path\n        };\n\n        if (http.request.headers.range) {\n          const vRef  = fileRef.versions[version];\n          let range   = _.clone(http.request.headers.range);\n          const array = range.split(/bytes=([0-9]*)-([0-9]*)/);\n          const start = parseInt(array[1]);\n          let end     = parseInt(array[2]);\n          if (isNaN(end)) {\n            // Request data from AWS:S3 by small chunks\n            end       = (start + this.chunkSize) - 1;\n            if (end >= vRef.size) {\n              end     = vRef.size - 1;\n            }\n          }\n          opts.Range   = `bytes=${start}-${end}`;\n          http.request.headers.range = `bytes=${start}-${end}`;\n        }\n\n        const fileColl = this;\n        client.getObject(opts, function (error) {\n          if (error) {\n            console.error(error);\n            if (!http.response.finished) {\n              http.response.end();\n            }\n          } else {\n            if (http.request.headers.range && this.httpResponse.headers['content-range']) {\n              // Set proper range header in according to what is returned from AWS:S3\n              http.request.headers.range = this.httpResponse.headers['content-range'].split('/')[0].replace('bytes ', 'bytes=');\n            }\n\n            const dataStream = new stream.PassThrough();\n            fileColl.serve(http, fileRef, fileRef.versions[version], version, dataStream);\n            dataStream.end(this.data.Body);\n          }\n        });\n\n        return true;\n      }\n      // While file is not yet uploaded to Storage\n      // We will serve file from FS\n      return false;\n    }\n    return false;\n  }\n});\n\nCollections.files.denyClient();\nCollections.files.on('afterUpload', function(_fileRef) {\n  if (useDropBox) {\n    const makeUrl = (stat, fileRef, version, triesUrl = 0) => {\n      client.makeUrl(stat.path, {\n        long: true,\n        downloadHack: true\n      }, (error, xml) => {\n        bound(() => {\n          // Store downloadable link in file's meta object\n          if (error) {\n            if (triesUrl < 10) {\n              Meteor.setTimeout(() => {\n                makeUrl(stat, fileRef, version, ++triesUrl);\n              }, 2048);\n            } else {\n              console.error(error, {\n                triesUrl: triesUrl\n              });\n            }\n          } else if (xml) {\n            const upd = { $set: {} };\n            upd['$set']['versions.' + version + '.meta.pipeFrom'] = xml.url;\n            upd['$set']['versions.' + version + '.meta.pipePath'] = stat.path;\n            this.collection.update({\n              _id: fileRef._id\n            }, upd, (updError) => {\n              if (updError) {\n                console.error(updError);\n              } else {\n                // Unlink original files from FS\n                // after successful upload to DropBox\n                this.unlink(this.collection.findOne(fileRef._id), version);\n              }\n            });\n          } else {\n            if (triesUrl < 10) {\n              Meteor.setTimeout(() => {\n                // Generate downloadable link\n                makeUrl(stat, fileRef, version, ++triesUrl);\n              }, 2048);\n            } else {\n              console.error(\"client.makeUrl doesn't returns xml\", {\n                triesUrl: triesUrl\n              });\n            }\n          }\n        });\n      });\n    };\n\n    const writeToDB = (fileRef, version, data, triesSend = 0) => {\n      // DropBox already uses random URLs\n      // No need to use random file names\n      client.writeFile(fileRef._id + '-' + version + '.' + fileRef.extension, data, (error, stat) => {\n        bound(() => {\n          if (error) {\n            if (triesSend < 10) {\n              Meteor.setTimeout(() => {\n                // Write file to DropBox\n                writeToDB(fileRef, version, data, ++triesSend);\n              }, 2048);\n            } else {\n              console.error(error, {\n                triesSend: triesSend\n              });\n            }\n          } else {\n            makeUrl(stat, fileRef, version);\n          }\n        });\n      });\n    };\n\n    const readFile = (fileRef, vRef, version, triesRead = 0) => {\n      fs.readFile(vRef.path, (error, data) => {\n        bound(() => {\n          if (error) {\n            if (triesRead < 10) {\n              readFile(fileRef, vRef, version, ++triesRead);\n            } else {\n              console.error(error);\n            }\n          } else {\n            writeToDB(fileRef, version, data);\n          }\n        });\n      });\n    };\n\n    sendToStorage = (fileRef) => {\n      _.each(fileRef.versions, (vRef, version) => {\n        readFile(fileRef, vRef, version);\n      });\n    };\n  } else if (useS3) {\n    sendToStorage = (fileRef) => {\n      _.each(fileRef.versions, (vRef, version) => {\n        // We use Random.id() instead of real file's _id\n        // to secure files from reverse engineering\n        // As after viewing this code it will be easy\n        // to get access to unlisted and protected files\n        const filePath = 'files/' + (Random.id()) + '-' + version + '.' + fileRef.extension;\n\n        client.putObject({\n          StorageClass: 'STANDARD',\n          Bucket: s3Conf.bucket,\n          Key: filePath,\n          Body: fs.createReadStream(vRef.path),\n          ContentType: vRef.type,\n        }, (error) => {\n          bound(() => {\n            if (error) {\n              console.error(error);\n            } else {\n              const upd = { $set: {} };\n              upd['$set']['versions.' + version + '.meta.pipePath'] = filePath;\n              this.collection.update({\n                _id: fileRef._id\n              }, upd, (updError) => {\n                if (updError) {\n                  console.error(updError);\n                } else {\n                  // Unlink original file from FS\n                  // after successful upload to AWS:S3\n                  this.unlink(this.collection.findOne(fileRef._id), version);\n                }\n              });\n            }\n          });\n        });\n      });\n    };\n  }\n\n  if (/png|jpe?g/i.test(_fileRef.extension || '')) {\n    Meteor.setTimeout( () => {\n      _app.createThumbnails(this, _fileRef, (error) => {\n        if (error) {\n          console.error(error);\n        }\n\n        if (useDropBox || useS3) {\n          sendToStorage(this.collection.findOne(_fileRef._id));\n        }\n      });\n    }, 1024);\n  } else {\n    if (useDropBox || useS3) {\n      sendToStorage(_fileRef);\n    }\n  }\n});\n\n// This line now commented due to Heroku usage\n// Collections.files.collection._ensureIndex {'meta.expireAt': 1}, {expireAfterSeconds: 0, background: true}\n\n// Intercept FileCollection's remove method\n// to remove file from DropBox or AWS S3\nif (useDropBox || useS3) {\n  const _origRemove = Collections.files.remove;\n  Collections.files.remove = function(search) {\n    const cursor = this.collection.find(search);\n    cursor.forEach((fileRef) => {\n      _.each(fileRef.versions, (vRef) => {\n        if (vRef && vRef.meta && vRef.meta.pipePath != null) {\n          if (useDropBox) {\n            // DropBox usage:\n            client.remove(vRef.meta.pipePath, (error) => {\n              bound(() => {\n                if (error) {\n                  console.error(error);\n                }\n              });\n            });\n          } else {\n            // AWS:S3 usage:\n            client.deleteObject({\n              Bucket: s3Conf.bucket,\n              Key: vRef.meta.pipePath,\n            }, (error) => {\n              bound(() => {\n                if (error) {\n                  console.error(error);\n                }\n              });\n            });\n          }\n        }\n      });\n    });\n    // Call original method\n    _origRemove.call(this, search);\n  };\n}\n\n// Remove all files on server load/reload, useful while testing/development\n// Meteor.startup -> Collections.files.remove {}\n\n// Remove files along with MongoDB records two minutes before expiration date\n// If we have 'expireAfterSeconds' index on 'meta.expireAt' field,\n// it won't remove files themselves.\nMeteor.setInterval(() => {\n  Collections.files.remove({\n    'meta.expireAt': {\n      $lte: new Date(+new Date() + 120000)\n    }\n  }, _app.NOOP);\n}, 120000);\n","import { _ }      from 'meteor/underscore';\nimport { _app }   from '/imports/lib/core.js';\nimport { check }  from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport fs from 'fs-extra';\nimport gm from 'gm';\n//Some platforms may bundle ImageMagick into their tools (like Heroku). In this case you may use GraphicsMagick as Imagemagick in this way:\n//npm install gm --save and then where you use it:\n//const gm = require('gm');\n//const im = gm.subClass({ imageMagick: true });\n//Please note that GM was considered slightly faster than IM so before you chose convenience over performance read the latest news about it.\n//https://mazira.com/blog/comparing-speed-imagemagick-graphicsmagick\n\nconst bound = Meteor.bindEnvironment((callback) => {\n  return callback();\n});\n\n_app.createThumbnails = (collection, fileRef, cb) => {\n  check(fileRef, Object);\n\n  let isLast = false;\n  const finish = (error) => {\n    bound(() => {\n      if (error) {\n        console.error('[_app.createThumbnails] [finish]', error);\n        cb && cb (error);\n      } else {\n        if (isLast) {\n          cb && cb(void 0, fileRef);\n        }\n      }\n      return true;\n    });\n  };\n\n  fs.exists(fileRef.path, (exists) => {\n    bound(() => {\n      if (!exists) {\n        throw new Meteor.Error('File ' + fileRef.path + ' not found in [createThumbnails] Method');\n      }\n      const image = gm(fileRef.path);\n      const sizes = {\n        preview: {\n          width: 400\n        },\n        thumbnail40: {\n          width: 40,\n          square: true\n        }\n      };\n\n      image.size((error, features) => {\n        bound(() => {\n          if (error) {\n            console.error('[_app.createThumbnails] [_.each sizes]', error);\n            finish(new Meteor.Error('[_app.createThumbnails] [_.each sizes]', error));\n            return;\n          }\n\n          let i = 0;\n          collection.collection.update(fileRef._id, {\n            $set: {\n              'meta.width': features.width,\n              'meta.height': features.height,\n              'versions.original.meta.width': features.width,\n              'versions.original.meta.height': features.height\n            }\n          }, _app.NOOP);\n\n          _.each(sizes, (size, name) => {\n            const path = (collection.storagePath(fileRef)) + '/' + name + '-' + fileRef._id + '.' + fileRef.extension;\n            const copyPaste = () => {\n              fs.copy(fileRef.path, path, (fsCopyError) => {\n                bound(() => {\n                  if (fsCopyError) {\n                    console.error('[_app.createThumbnails] [_.each sizes] [fs.copy]', fsCopyError);\n                    finish(fsCopyError);\n                    return;\n                  }\n\n                  const upd = { $set: {} };\n                  upd['$set']['versions.' + name] = {\n                    path: path,\n                    size: fileRef.size,\n                    type: fileRef.type,\n                    extension: fileRef.extension,\n                    meta: {\n                      width: features.width,\n                      height: features.height\n                    }\n                  };\n\n                  collection.collection.update(fileRef._id, upd, (colUpdError) => {\n                    ++i;\n                    if (i === Object.keys(sizes).length) {\n                      isLast = true;\n                    }\n                    finish(colUpdError);\n                  });\n                });\n              });\n            };\n\n            if (/png|jpe?g/i.test(fileRef.extension)) {\n              const img = gm(fileRef.path)\n                .quality(70)\n                .define('filter:support=2')\n                .define('jpeg:fancy-upsampling=false')\n                .define('jpeg:fancy-upsampling=off')\n                .define('png:compression-filter=5')\n                .define('png:compression-level=9')\n                .define('png:compression-strategy=1')\n                .define('png:exclude-chunk=all')\n                .autoOrient()\n                .noProfile()\n                .strip()\n                .dither(false)\n                .interlace('Line')\n                .filter('Triangle');\n\n              const updateAndSave = (upNSaveError) => {\n                bound(() => {\n                  if (upNSaveError) {\n                    console.error('[_app.createThumbnails] [_.each sizes] [img.resize]', upNSaveError);\n                    finish(upNSaveError);\n                    return;\n                  }\n                  fs.stat(path, (fsStatError, stat) => {\n                    bound(() => {\n                      if (fsStatError) {\n                        console.error('[_app.createThumbnails] [_.each sizes] [img.resize] [fs.stat]', fsStatError);\n                        finish(fsStatError);\n                        return;\n                      }\n\n                      gm(path).size((gmSizeError, imgInfo) => {\n                        bound(() => {\n                          if (gmSizeError) {\n                            console.error('[_app.createThumbnails] [_.each sizes] [img.resize] [fs.stat] [gm(path).size]', gmSizeError);\n                            finish(gmSizeError);\n                            return;\n                          }\n                          const upd = { $set: {} };\n                          upd['$set']['versions.' + name] = {\n                            path: path,\n                            size: stat.size,\n                            type: fileRef.type,\n                            extension: fileRef.extension,\n                            name: fileRef.name,\n                            meta: {\n                              width: imgInfo.width,\n                              height: imgInfo.height\n                            }\n                          };\n\n                          collection.collection.update(fileRef._id, upd, (colUpdError) => {\n                            ++i;\n                            if (i === Object.keys(sizes).length) {\n                              isLast = true;\n                            }\n                            finish(colUpdError);\n                          });\n                        });\n                      });\n                    });\n                  });\n                });\n              };\n\n              if (!size.square) {\n                if (features.width > size.width) {\n                  img.resize(size.width).interlace('Line').write(path, updateAndSave);\n                } else {\n                  copyPaste();\n                }\n              } else {\n                let x = 0;\n                let y = 0;\n                const widthRatio  = features.width / size.width;\n                const heightRatio = features.height / size.width;\n                let widthNew      = size.width;\n                let heightNew     = size.width;\n\n                if (heightRatio < widthRatio) {\n                  widthNew = (size.width * features.width) / features.height;\n                  x = (widthNew - size.width) / 2;\n                }\n\n                if (heightRatio > widthRatio) {\n                  heightNew = (size.width * features.height) / features.width;\n                  y = (heightNew - size.width) / 2;\n                }\n\n                img\n                  .resize(widthNew, heightNew)\n                  .crop(size.width, size.width, x, y)\n                  .interlace('Line')\n                  .write(path, updateAndSave);\n              }\n            } else {\n              copyPaste();\n            }\n          });\n        });\n      });\n    });\n  });\n  return true;\n};\n","import { check }             from 'meteor/check';\nimport { Meteor }            from 'meteor/meteor';\nimport { _app, Collections } from '/imports/lib/core.js';\n\nMeteor.methods({\n  filesLenght(userOnly = false) {\n    check(userOnly, Boolean);\n\n    let selector;\n    if (userOnly && this.userId) {\n      selector = {\n        userId: this.userId\n      };\n    } else if (this.userId) {\n      selector = {\n        $or: [\n          {\n            'meta.unlisted': false,\n            'meta.secured': false,\n            'meta.blamed': {\n              $lt: 3\n            }\n          }, {\n            userId: this.userId,\n            'meta.blamed': {\n              $lt: 3\n            }\n          }\n        ]\n      };\n    } else {\n      selector = {\n        'meta.unlisted': false,\n        'meta.secured': false,\n        'meta.blamed': {\n          $lt: 3\n        }\n      };\n    }\n    return Collections.files.find(selector).count();\n  },\n  unblame(_id) {\n    check(_id, String);\n    Collections.files.update({\n      _id: _id\n    }, {\n      $inc: {\n        'meta.blamed': -1\n      }\n    }, _app.NOOP);\n    return true;\n  },\n  blame(_id) {\n    check(_id, String);\n    Collections.files.update({\n      _id: _id\n    }, {\n      $inc: {\n        'meta.blamed': 1\n      }\n    }, _app.NOOP);\n    return true;\n  },\n  changeAccess(_id) {\n    check(_id, String);\n    if (Meteor.userId()) {\n      const file = Collections.files.findOne({\n        _id: _id,\n        userId: Meteor.userId()\n      });\n\n      if (file) {\n        Collections.files.update(_id, {\n          $set: {\n            'meta.unlisted': file.meta.unlisted ? false : true\n          }\n        }, _app.NOOP);\n        return true;\n      }\n    }\n    throw new Meteor.Error(401, 'Access denied!');\n  },\n  changePrivacy(_id) {\n    check(_id, String);\n    if (Meteor.userId()) {\n      const file = Collections.files.findOne({\n        _id: _id,\n        userId: Meteor.userId()\n      });\n\n      if (file) {\n        Collections.files.update(_id, {\n          $set: {\n            'meta.unlisted': true,\n            'meta.secured': file.meta.secured ? false : true\n          }\n        }, _app.NOOP);\n        return true;\n      }\n    }\n    throw new Meteor.Error(401, 'Access denied!');\n  },\n  getServiceConfiguration() {\n    return _app.sc;\n  }\n});\n","import { check }       from 'meteor/check';\nimport { Meteor }      from 'meteor/meteor';\nimport { Collections } from '/imports/lib/core.js';\n\nMeteor.publish('latest', function(take = 10, userOnly = false) {\n  check(take, Number);\n  check(userOnly, Boolean);\n\n  let selector;\n  if (userOnly && this.userId) {\n    selector = {\n      userId: this.userId\n    };\n  } else if (this.userId) {\n    selector = {\n      $or: [\n        {\n          'meta.unlisted': false,\n          'meta.secured': false,\n          'meta.blamed': {\n            $lt: 3\n          }\n        }, {\n          userId: this.userId,\n          'meta.blamed': {\n            $lt: 3\n          }\n        }\n      ]\n    };\n  } else {\n    selector = {\n      'meta.unlisted': false,\n      'meta.secured': false,\n      'meta.blamed': {\n        $lt: 3\n      }\n    };\n  }\n\n  return Collections.files.find(selector, {\n    limit: take,\n    sort: {\n      'meta.created_at': -1\n    },\n    fields: {\n      _id: 1,\n      name: 1,\n      size: 1,\n      meta: 1,\n      type: 1,\n      isPDF: 1,\n      isText: 1,\n      isJSON: 1,\n      isVideo: 1,\n      isAudio: 1,\n      isImage: 1,\n      userId: 1,\n      'versions.thumbnail40.extension': 1,\n      'versions.preview.extension': 1,\n      extension: 1,\n      _collectionName: 1,\n      _downloadRoute: 1\n    }\n  }).cursor;\n});\n\nMeteor.publish('file', function(_id) {\n  check(_id, String);\n  return Collections.files.find({\n    $or: [\n      {\n        _id: _id,\n        'meta.secured': false\n      }, {\n        _id: _id,\n        'meta.secured': true,\n        userId: this.userId\n      }\n    ]\n  }, {\n    fields: {\n      _id: 1,\n      name: 1,\n      size: 1,\n      type: 1,\n      meta: 1,\n      isPDF: 1,\n      isText: 1,\n      isJSON: 1,\n      isVideo: 1,\n      isAudio: 1,\n      isImage: 1,\n      extension: 1,\n      'versions.preview.extension': 1,\n      _collectionName: 1,\n      _downloadRoute: 1\n    }\n  }).cursor;\n});\n","import { _app }                 from '/imports/lib/core.js';\nimport { ServiceConfiguration } from 'meteor/service-configuration';\n\n_app.sc = {};\nServiceConfiguration.configurations.remove({});\n\nif (process.env.ACCOUNTS_METEOR_ID && process.env.ACCOUNTS_METEOR_SEC) {\n  _app.sc.meteor = true;\n  ServiceConfiguration.configurations.upsert({\n    service: 'meteor-developer'\n  }, {\n    $set: {\n      secret: process.env.ACCOUNTS_METEOR_SEC,\n      clientId: process.env.ACCOUNTS_METEOR_ID,\n      loginStyle: 'redirect'\n    }\n  });\n}\n\nif (process.env.ACCOUNTS_GITHUB_ID && process.env.ACCOUNTS_GITHUB_SEC) {\n  _app.sc.github = true;\n  ServiceConfiguration.configurations.upsert({\n    service: 'github'\n  }, {\n    $set: {\n      secret: process.env.ACCOUNTS_GITHUB_SEC,\n      clientId: process.env.ACCOUNTS_GITHUB_ID,\n      loginStyle: 'redirect'\n    }\n  });\n}\n\nif (process.env.ACCOUNTS_TWITTER_ID && process.env.ACCOUNTS_TWITTER_SEC) {\n  _app.sc.twitter = true;\n  ServiceConfiguration.configurations.upsert({\n    service: 'twitter'\n  }, {\n    $set: {\n      loginStyle: 'redirect',\n      secret: process.env.ACCOUNTS_TWITTER_SEC,\n      consumerKey: process.env.ACCOUNTS_TWITTER_ID\n    }\n  });\n}\n\nif (process.env.ACCOUNTS_FACEBOOK_ID && process.env.ACCOUNTS_FACEBOOK_SEC) {\n  _app.sc.facebook = true;\n  ServiceConfiguration.configurations.upsert({\n    service: 'facebook'\n  }, {\n    $set: {\n      secret: process.env.ACCOUNTS_FACEBOOK_SEC,\n      appId: process.env.ACCOUNTS_FACEBOOK_ID,\n      loginStyle: 'redirect'\n    }\n  });\n}\n","// import { WebApp } from 'meteor/webapp';\n// import Spiderable from 'meteor/ostrio:spiderable-middleware';\n//\n// WebApp.connectHandlers.use(new Spiderable({\n//   rootURL: 'https://files.veliov.com',\n//   serviceURL: 'https://render.ostr.io',\n//   auth: 'xxx:yyy'\n// }));\n","import '/imports/server/files.collection.js';\nimport '/imports/server/image-processing.js';\nimport '/imports/server/methods.js';\nimport '/imports/server/publications.js';\nimport '/imports/server/service-configurations.js';\nimport '/imports/server/spiderable.js';\n"]}