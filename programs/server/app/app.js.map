{"version":3,"sources":["meteor://ðŸ’»app/lib/__compatability/__globals.js","meteor://ðŸ’»app/lib/files.collection.js","meteor://ðŸ’»app/server/image-processing.js","meteor://ðŸ’»app/server/service-configurations.js","meteor://ðŸ’»app/server/spiderable.js"],"names":["Collections","_app","NOOP","Package","Meteor","isClient","window","IS_RENDERED","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","ClientStorage","has","_","isArray","get","set","isBoolean","_el","$","on","e","preventDefault","stopPropagation","target","uf","document","getElementById","className","indexOf","replace","subs","SubsManager","blamed","ReactiveVar","unlist","secured","uploads","userOnly","storeTTL","currentUrl","absoluteUrl","FlowRouter","current","path","location","pathname","split","storeTTLUser","showProjectInfo","serviceConfiguration","call","error","console","autorun","Template","registerHelper","string","size","filesize","filename","parts","length","pop","join","time","isString","isNumber","Date","toISOString","_404","onRendered","_layout","helpers","events","marked","setOptions","highlight","code","hljs","highlightAuto","value","renderer","Renderer","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","startup","attr","FPS","FPSMeter","ui","reactive","start","regStop","click","isRunning","stop","useDropBox","useS3","Request","bound","fs","client","sendToStorage","isServer","process","env","DROPBOX","settings","dropbox","JSON","parse","S3","s3","key","secret","token","Dropbox","Npm","require","Client","bucket","region","cfdomain","NODE_TLS_REJECT_UNAUTHORIZED","knox","createClient","bindEnvironment","files","FilesCollection","storagePath","collectionName","allowClientCode","fileObj","meta","userId","onBeforeRemove","cursor","res","map","file","onBeforeUpload","downloadCallback","params","query","download","collection","update","_id","$inc","interceptDownload","http","fileRef","version","versions","pipeFrom","serve","url","headers","pick","request","denyClient","makeUrl","stat","triesUrl","long","downloadHack","xml","upd","$set","unlink","findOne","writeToDB","data","triesSend","writeFile","extension","readFile","vRef","triesRead","each","filePath","Random","id","putFile","test","createThumbnails","_origRemove","remove","search","find","forEach","pipePath","deleteFile","setInterval","$lte","publish","take","check","Number","Boolean","selector","$or","$lt","limit","sort","fields","name","type","isPDF","isText","isJSON","isVideo","isAudio","isImage","_collectionName","_downloadRoute","String","methods","filesLenght","count","unblame","blame","changeAccess","unlisted","Error","changePrivacy","gm","cb","Object","isLast","finish","exists","log","image","sizes","preview","width","thumbnail40","square","features","i","height","copyPaste","copy","fsCopyError","colUpdError","keys","img","define","autoOrient","noProfile","strip","dither","filter","updateAndSave","upNSaveError","fsStatError","gmSizeError","imgInfo","resize","interlace","write","x","y","widthRatio","heightRatio","widthNew","heightNew","crop","_sc","ServiceConfiguration","configurations","ACCOUNTS_METEOR_ID","ACCOUNTS_METEOR_SEC","meteor","upsert","service","clientId","loginStyle","ACCOUNTS_GITHUB_ID","ACCOUNTS_GITHUB_SEC","github","ACCOUNTS_TWITTER_ID","ACCOUNTS_TWITTER_SEC","twitter","consumerKey","ACCOUNTS_FACEBOOK_ID","ACCOUNTS_FACEBOOK_SEC","facebook","appId","getServiceConfiguration"],"mappings":"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","file":"/app.js","sourcesContent":["Collections = {};\n_app = { NOOP(){} };\n\nPackage['kadira:flow-router'] = Package['ostrio:flow-router-extra'];\n\nif (Meteor.isClient) {\n  window.IS_RENDERED = false;\n  if (!window.requestAnimFrame) {\n    window.requestAnimFrame = (() => {\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {\n        window.setTimeout(callback, 1000 / 60);\n      };\n    })();\n  }\n  if (!ClientStorage.has('blamed') || !_.isArray(ClientStorage.get('blamed'))) {\n    ClientStorage.set('blamed', []);\n  }\n  if (!ClientStorage.has('unlist') || !_.isBoolean(ClientStorage.get('unlist'))) {\n    ClientStorage.set('unlist', true);\n  }\n  if (!ClientStorage.has('secured') || !_.isBoolean(ClientStorage.get('secured'))) {\n    ClientStorage.set('secured', false);\n  }\n  if (!ClientStorage.has('userOnly') || !_.isBoolean(ClientStorage.get('userOnly'))) {\n    ClientStorage.set('userOnly', false);\n  }\n\n  let _el = null;\n  $(window).on('dragenter dragover', (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    _el = e.target;\n    const uf = document.getElementById('uploadFile');\n    if (!~uf.className.indexOf('file-over')) {\n      uf.className += ' file-over';\n    }\n    return false;\n  });\n\n  $(window).on('dragleave', (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (_el === e.target) {\n      const uf = document.getElementById('uploadFile');\n      if (!!~uf.className.indexOf('file-over')) {\n        uf.className = uf.className.replace(' file-over', '');\n      }\n    }\n    return false;\n  });\n\n  $(window).on('drop', (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const uf = document.getElementById('uploadFile');\n    if (!!~uf.className.indexOf('file-over')) {\n      uf.className = uf.className.replace(' file-over', '');\n    }\n    return false;\n  });\n\n  _app.subs     = new SubsManager();\n  _app.blamed   = new ReactiveVar(ClientStorage.get('blamed'));\n  _app.unlist   = new ReactiveVar(ClientStorage.get('unlist'));\n  _app.secured  = new ReactiveVar(ClientStorage.get('secured'));\n  _app.uploads  = new ReactiveVar(false);\n  _app.userOnly = new ReactiveVar(ClientStorage.get('userOnly'));\n  _app.storeTTL = 86400000;\n  _app.currentUrl = () => {\n    return Meteor.absoluteUrl((FlowRouter.current().path || document.location.pathname).replace(/^\\//g, '')).split('?')[0].split('#')[0].replace('!', '');\n  };\n  _app.storeTTLUser = 432000000;\n  _app.showProjectInfo = new ReactiveVar(false);\n  _app.serviceConfiguration = new ReactiveVar({});\n\n  Meteor.call('getServiceConfiguration', (error, serviceConfiguration) => {\n    if (error) {\n      console.error(error);\n    } else {\n      _app.serviceConfiguration.set(serviceConfiguration);\n    }\n  });\n\n  Meteor.autorun(() => {\n    ClientStorage.set('blamed', _app.blamed.get());\n  });\n\n  Meteor.autorun(() => {\n    ClientStorage.set('unlist', _app.unlist.get());\n  });\n\n  Meteor.autorun(() => {\n    ClientStorage.set('secured', _app.secured.get());\n  });\n\n  Meteor.autorun(() => {\n    ClientStorage.set('userOnly', _app.userOnly.get());\n  });\n\n  if (!ClientStorage.has('uploadTransport')) {\n    ClientStorage.set('uploadTransport', 'ddp');\n  }\n\n  Template.registerHelper('urlCurrent', () => {\n    return _app.currentUrl();\n  });\n\n  Template.registerHelper('url', (string = null) => {\n    return Meteor.absoluteUrl(string);\n  });\n\n  Template.registerHelper('filesize', (size = 0) => {\n    return filesize(size);\n  });\n\n  Template.registerHelper('extless', (filename = '') => {\n    const parts = filename.split('.');\n    if (parts.length > 1) {\n      parts.pop();\n    }\n    return parts.join('.');\n  });\n\n  Template.registerHelper('DateToISO', (time = 0) => {\n    if (_.isString(time) || _.isNumber(time)) {\n      time = new Date(time);\n    }\n    return time.toISOString();\n  });\n\n  Template._404.onRendered(function() {\n    window.IS_RENDERED = true;\n  });\n\n  Template._layout.helpers({\n    showProjectInfo() {\n      return _app.showProjectInfo.get();\n    }\n  });\n  Template._layout.events({\n    'click [data-show-project-info]'(e) {\n      e.preventDefault();\n      _app.showProjectInfo.set(!_app.showProjectInfo.get());\n      return false;\n    }\n  });\n  marked.setOptions({\n    highlight(code) {\n      return hljs.highlightAuto(code).value;\n    },\n    renderer: new marked.Renderer(),\n    gfm: true,\n    tables: true,\n    breaks: false,\n    pedantic: false,\n    sanitize: true,\n    smartLists: true,\n    smartypants: false\n  });\n\n  Meteor.startup(() => {\n    $('html').attr('itemscope', '');\n    $('html').attr('itemtype', 'http://schema.org/WebPage');\n    $('html').attr('xmlns:og', 'http://ogp.me/ns#');\n    $('html').attr('xml:lang', 'en');\n    $('html').attr('lang', 'en');\n\n    const FPS = new FPSMeter({\n      ui: true,\n      reactive: false\n    });\n\n    FPS.start();\n    const regStop = () => {\n      $('#__FPSMeter').click(() => {\n        if (FPS.isRunning) {\n          FPS.isRunning = false;\n        } else {\n          FPS.stop();\n          window.requestAnimFrame(() => {\n            FPS.start();\n            regStop();\n          });\n        }\n      });\n    };\n\n    regStop();\n  });\n}\n","// DropBox usage:\n// Read: https://github.com/VeliovGroup/Meteor-Files/wiki/DropBox-Integration\n// env.var example: DROPBOX='{\"dropbox\":{\"key\": \"xxx\", \"secret\": \"xxx\", \"token\": \"xxx\"}}'\nlet useDropBox = false;\n\n// AWS:S3 usage:\n// Read: https://github.com/Lepozepo/S3#create-your-amazon-s3\n// Read: https://github.com/VeliovGroup/Meteor-Files/wiki/AWS-S3-Integration\n// Create and attach CloudFront to S3 bucket: https://console.aws.amazon.com/cloudfront/\n\n// env.var example: S3='{\"s3\":{\"key\": \"xxx\", \"secret\": \"xxx\", \"bucket\": \"xxx\", \"region\": \"xxx\", \"cfdomain\": \"https://xxx.cloudfront.net\"}}'\nlet useS3 = false;\n\nlet Request, bound, fs, client, sendToStorage;\n\nif (Meteor.isServer) {\n  if (process.env.DROPBOX != null) {\n    Meteor.settings.dropbox = JSON.parse(process.env.DROPBOX).dropbox;\n  } else if (process.env.S3 != null) {\n    Meteor.settings.s3 = JSON.parse(process.env.S3).s3;\n  }\n\n  if (Meteor.settings.dropbox && Meteor.settings.dropbox.key && Meteor.settings.dropbox.secret && Meteor.settings.dropbox.token) {\n    useDropBox    = true;\n    const Dropbox = Npm.require('dropbox');\n    fs            = Npm.require('fs');\n\n    client = new Dropbox.Client({\n      key: Meteor.settings.dropbox.key,\n      secret: Meteor.settings.dropbox.secret,\n      token: Meteor.settings.dropbox.token\n    });\n  } else if (Meteor.settings.s3 && Meteor.settings.s3.key && Meteor.settings.s3.secret && Meteor.settings.s3.bucket && Meteor.settings.s3.region && Meteor.settings.s3.cfdomain) {\n    // Fix CloudFront certificate issue\n    // Read: https://github.com/chilts/awssum/issues/164\n    process.env.NODE_TLS_REJECT_UNAUTHORIZED = 0;\n    useS3      = true;\n    const knox = Npm.require('knox');\n\n    client = knox.createClient({\n      key: Meteor.settings.s3.key,\n      secret: Meteor.settings.s3.secret,\n      bucket: Meteor.settings.s3.bucket,\n      region: Meteor.settings.s3.region\n    });\n\n    // Normalize cfdomain\n    Meteor.settings.s3.cfdomain = Meteor.settings.s3.cfdomain.replace(/\\/+$/, '');\n  }\n\n  if (useS3 || useDropBox) {\n    Request = Npm.require('request');\n    bound   = Meteor.bindEnvironment(function(callback) {\n      return callback();\n    });\n  }\n}\n\nCollections.files = new FilesCollection({\n  // debug: true,\n  // throttle: false,\n  // chunkSize: 1024*1024,\n  storagePath: 'assets/app/uploads/uploadedFiles',\n  collectionName: 'uploadedFiles',\n  allowClientCode: true,\n  protected(fileObj) {\n    if (fileObj) {\n      if (!(fileObj.meta && fileObj.meta.secured)) {\n        return true;\n      } else if ((fileObj.meta && fileObj.meta.secured === true) && this.userId === fileObj.userId) {\n        return true;\n      }\n    }\n    return false;\n  },\n  onBeforeRemove(cursor) {\n    const res = cursor.map((file) => {\n      if (file && file.userId && _.isString(file.userId)) {\n        return file.userId === this.userId;\n      }\n      return false;\n    });\n    return !~res.indexOf(false);\n  },\n  onBeforeUpload() {\n    if (this.file.size <= 1024 * 1024 * 128) {\n      return true;\n    }\n    return \"Max. file size is 128MB you've tried to upload \" + (filesize(this.file.size));\n  },\n  downloadCallback(fileObj) {\n    if (this.params && this.params.query && this.params.query.download === 'true') {\n      Collections.files.collection.update(fileObj._id, {\n        $inc: {\n          'meta.downloads': 1\n        }\n      });\n    }\n    return true;\n  },\n  interceptDownload(http, fileRef, version) {\n    if (useDropBox || useS3) {\n      const path = (fileRef && fileRef.versions && fileRef.versions[version] && fileRef.versions[version].meta && fileRef.versions[version].meta.pipeFrom) ? fileRef.versions[version].meta.pipeFrom : void 0;\n      if (path) {\n        // If file is successfully moved to Storage\n        // We will pipe request to Storage\n        // So, original link will stay always secure\n\n        // To force ?play and ?download parameters\n        // and to keep original file name, content-type,\n        // content-disposition and cache-control\n        // we're using low-level .serve() method\n        this.serve(http, fileRef, fileRef.versions[version], version, Request({\n          url: path,\n          headers: _.pick(http.request.headers, 'range', 'accept-language', 'accept', 'cache-control', 'pragma', 'connection', 'upgrade-insecure-requests', 'user-agent')\n        }));\n        return true;\n      }\n      // While file is not yet uploaded to Storage\n      // We will serve file from FS\n      return false;\n    }\n    return false;\n  }\n});\n\nif (Meteor.isServer) {\n  Collections.files.denyClient();\n  Collections.files.on('afterUpload', function(fileRef) {\n    if (useDropBox) {\n      const makeUrl = (stat, fileRef, version, triesUrl = 0) => {\n        client.makeUrl(stat.path, {\n          long: true,\n          downloadHack: true\n        }, (error, xml) => {\n          bound(() => {\n            // Store downloadable link in file's meta object\n            if (error) {\n              if (triesUrl < 10) {\n                Meteor.setTimeout(() => {\n                  makeUrl(stat, fileRef, version, ++triesUrl);\n                }, 2048);\n              } else {\n                console.error(error, {\n                  triesUrl: triesUrl\n                });\n              }\n            } else if (xml) {\n              const upd = { $set: {} };\n              upd['$set']['versions.' + version + '.meta.pipeFrom'] = xml.url;\n              upd['$set']['versions.' + version + '.meta.pipePath'] = stat.path;\n              this.collection.update({\n                _id: fileRef._id\n              }, upd, (error) => {\n                if (error) {\n                  console.error(error);\n                } else {\n                  // Unlink original files from FS\n                  // after successful upload to DropBox\n                  this.unlink(this.collection.findOne(fileRef._id), version);\n                }\n              });\n            } else {\n              if (triesUrl < 10) {\n                Meteor.setTimeout(() => {\n                  // Generate downloadable link\n                  makeUrl(stat, fileRef, version, ++triesUrl);\n                }, 2048);\n              } else {\n                console.error(\"client.makeUrl doesn't returns xml\", {\n                  triesUrl: triesUrl\n                });\n              }\n            }\n          });\n        });\n      };\n\n      const writeToDB = (fileRef, version, data, triesSend = 0) => {\n        // DropBox already uses random URLs\n        // No need to use random file names\n        client.writeFile(fileRef._id + '-' + version + '.' + fileRef.extension, data, (error, stat) => {\n          bound(() => {\n            if (error) {\n              if (triesSend < 10) {\n                Meteor.setTimeout(() => {\n                  // Write file to DropBox\n                  writeToDB(fileRef, version, data, ++triesSend);\n                }, 2048);\n              } else {\n                console.error(error, {\n                  triesSend: triesSend\n                });\n              }\n            } else {\n              makeUrl(stat, fileRef, version);\n            }\n          });\n        });\n      };\n\n      const readFile = (fileRef, vRef, version, triesRead = 0) => {\n        fs.readFile(vRef.path, (error, data) => {\n          bound(() => {\n            if (error) {\n              if (triesRead < 10) {\n                readFile(fileRef, vRef, version, ++triesRead);\n              } else {\n                console.error(error);\n              }\n            } else {\n              writeToDB(fileRef, version, data);\n            }\n          });\n        });\n      };\n\n      sendToStorage = (fileRef) => {\n        _.each(fileRef.versions, (vRef, version) => {\n          readFile(fileRef, vRef, version);\n        });\n      };\n    } else if (useS3) {\n      sendToStorage = (fileRef) => {\n        _.each(fileRef.versions, (vRef, version) => {\n          // We use Random.id() instead of real file's _id\n          // to secure files from reverse engineering\n          // As after viewing this code it will be easy\n          // to get access to unlisted and protected files\n          const filePath = 'files/' + (Random.id()) + '-' + version + '.' + fileRef.extension;\n          client.putFile(vRef.path, filePath, (error) => {\n            bound(() => {\n              if (error) {\n                console.error(error);\n              } else {\n                const upd = { $set: {} };\n                upd['$set']['versions.' + version + '.meta.pipeFrom'] = Meteor.settings.s3.cfdomain + '/' + filePath;\n                upd['$set']['versions.' + version + '.meta.pipePath'] = filePath;\n                this.collection.update({\n                  _id: fileRef._id\n                }, upd, (error) => {\n                  if (error) {\n                    console.error(error);\n                  } else {\n                    // Unlink original files from FS\n                    // after successful upload to AWS:S3\n                    this.unlink(this.collection.findOne(fileRef._id), version);\n                  }\n                });\n              }\n            });\n          });\n        });\n      };\n    }\n\n    if (/png|jpe?g/i.test(fileRef.extension || '')) {\n      _app.createThumbnails(this, fileRef, (fileRef, error) => {\n        if (error) {\n          console.error(error);\n        }\n        if (useDropBox || useS3) {\n          sendToStorage(this.collection.findOne(fileRef._id));\n        }\n      });\n    } else {\n      if (useDropBox || useS3) {\n        sendToStorage(fileRef);\n      }\n    }\n  });\n\n  // This line now commented due to Heroku usage\n  // Collections.files.collection._ensureIndex {'meta.expireAt': 1}, {expireAfterSeconds: 0, background: true}\n\n  // Intercept FileCollection's remove method\n  // to remove file from DropBox or AWS S3\n  if (useDropBox || useS3) {\n    _origRemove = Collections.files.remove;\n    Collections.files.remove = function(search) {\n      const cursor = this.collection.find(search);\n      cursor.forEach((fileRef) => {\n        _.each(fileRef.versions, (vRef) => {\n          if (vRef && vRef.meta && vRef.meta.pipePath != null) {\n            if (useDropBox) {\n              // DropBox usage:\n              client.remove(vRef.meta.pipePath, (error) => {\n                bound(() => {\n                  if (error) {\n                    console.error(error);\n                  }\n                });\n              });\n            } else {\n              // AWS:S3 usage:\n              client.deleteFile(vRef.meta.pipePath, (error) => {\n                bound(() => {\n                  if (error) {\n                    console.error(error);\n                  }\n                });\n              });\n            }\n          }\n        });\n      });\n      // Call original method\n      _origRemove.call(this, search);\n    };\n  }\n\n  // Remove all files on server load/reload, useful while testing/development\n  // Meteor.startup -> Collections.files.remove {}\n\n  // Remove files along with MongoDB records two minutes before expiration date\n  // If we have 'expireAfterSeconds' index on 'meta.expireAt' field,\n  // it won't remove files themselves.\n  Meteor.setInterval(() => {\n    Collections.files.remove({\n      'meta.expireAt': {\n        $lte: new Date(+new Date() + 120000)\n      }\n    }, _app.NOOP);\n  }, 120000);\n\n  Meteor.publish('latest', function(take = 10, userOnly = false) {\n    check(take, Number);\n    check(userOnly, Boolean);\n\n    let selector;\n    if (userOnly && this.userId) {\n      selector = {\n        userId: this.userId\n      };\n    } else {\n      selector = {\n        $or: [\n          {\n            'meta.unlisted': false,\n            'meta.secured': false,\n            'meta.blamed': {\n              $lt: 3\n            }\n          }, {\n            userId: this.userId\n          }\n        ]\n      };\n    }\n\n    return Collections.files.find(selector, {\n      limit: take,\n      sort: {\n        'meta.created_at': -1\n      },\n      fields: {\n        _id: 1,\n        name: 1,\n        size: 1,\n        meta: 1,\n        type: 1,\n        isPDF: 1,\n        isText: 1,\n        isJSON: 1,\n        isVideo: 1,\n        isAudio: 1,\n        isImage: 1,\n        userId: 1,\n        'versions.thumbnail40.extension': 1,\n        'versions.preview.extension': 1,\n        extension: 1,\n        _collectionName: 1,\n        _downloadRoute: 1\n      }\n    }).cursor;\n  });\n\n  Meteor.publish('file', function(_id) {\n    check(_id, String);\n    return Collections.files.find({\n      $or: [\n        {\n          _id: _id,\n          'meta.secured': false\n        }, {\n          _id: _id,\n          'meta.secured': true,\n          userId: this.userId\n        }\n      ]\n    }, {\n      fields: {\n        _id: 1,\n        name: 1,\n        size: 1,\n        type: 1,\n        meta: 1,\n        isPDF: 1,\n        isText: 1,\n        isJSON: 1,\n        isVideo: 1,\n        isAudio: 1,\n        isImage: 1,\n        extension: 1,\n        'versions.preview.extension': 1,\n        _collectionName: 1,\n        _downloadRoute: 1\n      }\n    }).cursor;\n  });\n\n  Meteor.methods({\n    filesLenght(userOnly = false) {\n      check(userOnly, Boolean);\n\n      let selector;\n      if (userOnly && this.userId) {\n        selector = {\n          userId: this.userId\n        };\n      } else {\n        selector = {\n          $or: [\n            {\n              'meta.unlisted': false,\n              'meta.secured': false,\n              'meta.blamed': {\n                $lt: 3\n              }\n            }, {\n              userId: this.userId\n            }\n          ]\n        };\n      }\n      return Collections.files.find(selector).count();\n    },\n    unblame(_id) {\n      check(_id, String);\n      Collections.files.update({\n        _id: _id\n      }, {\n        $inc: {\n          'meta.blamed': -1\n        }\n      }, _app.NOOP);\n      return true;\n    },\n    blame(_id) {\n      check(_id, String);\n      Collections.files.update({\n        _id: _id\n      }, {\n        $inc: {\n          'meta.blamed': 1\n        }\n      }, _app.NOOP);\n      return true;\n    },\n    changeAccess(_id) {\n      check(_id, String);\n      if (Meteor.userId()) {\n        const file = Collections.files.findOne({\n          _id: _id,\n          userId: Meteor.userId()\n        });\n\n        if (file) {\n          Collections.files.update(_id, {\n            $set: {\n              'meta.unlisted': file.meta.unlisted ? false : true\n            }\n          }, _app.NOOP);\n          return true;\n        }\n      }\n      throw new Meteor.Error(401, 'Access denied!');\n    },\n    changePrivacy(_id) {\n      check(_id, String);\n      if (Meteor.userId()) {\n        const file = Collections.files.findOne({\n          _id: _id,\n          userId: Meteor.userId()\n        });\n\n        if (file) {\n          Collections.files.update(_id, {\n            $set: {\n              'meta.unlisted': true,\n              'meta.secured': file.meta.secured ? false : true\n            }\n          }, _app.NOOP);\n          return true;\n        }\n      }\n      throw new Meteor.Error(401, 'Access denied!');\n    }\n  });\n}\n","const bound = Meteor.bindEnvironment(function(callback) {\n  return callback();\n});\n\nconst fs = Npm.require('fs-extra');\nconst gm = Npm.require('gm');\n\n_app.createThumbnails = (collection, fileRef, cb) => {\n  check(fileRef, Object);\n\n  let isLast = false;\n  const finish = (error) => {\n    bound(() => {\n      if (error) {\n        console.error('[_app.createThumbnails] [finish]', error);\n        cb && cb (void 0, error);\n      } else {\n        if (isLast) {\n          cb && cb(fileRef);\n        }\n      }\n      return true;\n    });\n  };\n\n  fs.exists(fileRef.path, (exists) => {\n    bound(() => {\n      if (!exists) {\n        throw Meteor.log.error('File ' + fileRef.path + ' not found in [createThumbnails] Method');\n      }\n      const image = gm(fileRef.path);\n      const sizes = {\n        preview: {\n          width: 400\n        },\n        thumbnail40: {\n          width: 40,\n          square: true\n        }\n      };\n\n      image.size(function(error, features) {\n        bound(() => {\n          if (error) {\n            console.error('[_app.createThumbnails] [_.each sizes]');\n            console.error(error);\n            return finish(Meteor.Error('[_app.createThumbnails] [_.each sizes]', error));\n          }\n\n          let i = 0;\n          collection.collection.update(fileRef._id, {\n            $set: {\n              'meta.width': features.width,\n              'meta.height': features.height\n            }\n          }, _app.NOOP);\n\n          _.each(sizes, (size, name) => {\n            const path = (collection.storagePath(fileRef)) + '/' + name + '-' + fileRef._id + '.' + fileRef.extension;\n            const copyPaste = () => {\n              fs.copy(fileRef.path, path, (fsCopyError) => {\n                bound(() => {\n                  if (fsCopyError) {\n                    console.error('[_app.createThumbnails] [_.each sizes] [fs.copy]', fsCopyError);\n                    return finish(fsCopyError);\n                  }\n\n                  const upd = { $set: {} };\n                  upd['$set']['versions.' + name] = {\n                    path: path,\n                    size: fileRef.size,\n                    type: fileRef.type,\n                    extension: fileRef.extension,\n                    meta: {\n                      width: features.width,\n                      height: features.height\n                    }\n                  };\n                  collection.collection.update(fileRef._id, upd, (colUpdError) => {\n                    ++i;\n                    if (i === Object.keys(sizes).length) {\n                      isLast = true;\n                    }\n                    finish(colUpdError);\n                  });\n                });\n              });\n            };\n\n            if (/png|jpe?g/i.test(fileRef.extension)) {\n              const img = gm(fileRef.path)\n                .define('filter:support=2')\n                .define('jpeg:fancy-upsampling=false')\n                .define('jpeg:fancy-upsampling=off')\n                .define('png:compression-filter=5')\n                .define('png:compression-level=9')\n                .define('png:compression-strategy=1')\n                .define('png:exclude-chunk=all')\n                .autoOrient()\n                .noProfile()\n                .strip()\n                .dither(false)\n                .filter('Triangle');\n\n              const updateAndSave = (upNSaveError) => {\n                bound(() => {\n                  if (upNSaveError) {\n                    console.error('[_app.createThumbnails] [_.each sizes] [img.resize]', upNSaveError);\n                    return finish(upNSaveError);\n                  }\n                  fs.stat(path, (fsStatError, stat) => {\n                    if (fsStatError) {\n                      console.error('[_app.createThumbnails] [_.each sizes] [img.resize] [fs.stat]', fsStatError);\n                      return finish(fsStatError);\n                    }\n                    bound(() => {\n                      gm(path).size((gmSizeError, imgInfo) => {\n                        bound(() => {\n                          if (gmSizeError) {\n                            console.error('[_app.createThumbnails] [_.each sizes] [img.resize] [fs.stat] [gm(path).size]', gmSizeError);\n                            return finish(gmSizeError);\n                          }\n                          const upd = { $set: {} };\n                          upd['$set']['versions.' + name] = {\n                            path: path,\n                            size: stat.size,\n                            type: fileRef.type,\n                            extension: fileRef.extension,\n                            meta: {\n                              width: imgInfo.width,\n                              height: imgInfo.height\n                            }\n                          };\n\n                          collection.collection.update(fileRef._id, upd, (colUpdError) => {\n                            ++i;\n                            if (i === Object.keys(sizes).length) {\n                              isLast = true;\n                            }\n                            finish(colUpdError);\n                          });\n                        });\n                      });\n                    });\n                  });\n                });\n              };\n\n              if (!size.square) {\n                if (features.width > size.width) {\n                  img.resize(size.width).interlace('Line').write(path, updateAndSave);\n                } else {\n                  copyPaste();\n                }\n              } else {\n                let x = 0;\n                let y = 0;\n                const widthRatio  = features.width / size.width;\n                const heightRatio = features.height / size.width;\n                let widthNew      = size.width;\n                let heightNew     = size.width;\n\n                if (heightRatio < widthRatio) {\n                  widthNew = (size.width * features.width) / features.height;\n                  x = (widthNew - size.width) / 2;\n                }\n\n                if (heightRatio > widthRatio) {\n                  heightNew = (size.width * features.height) / features.width;\n                  y = (heightNew - size.width) / 2;\n                }\n\n                img\n                  .resize(widthNew, heightNew)\n                  .crop(size.width, size.width, x, y)\n                  .interlace('Line')\n                  .write(path, updateAndSave);\n              }\n            } else {\n              copyPaste();\n            }\n          });\n        });\n      });\n    });\n  });\n  return true;\n};\n","const _sc = {};\nServiceConfiguration.configurations.remove({});\n\nif (process.env.ACCOUNTS_METEOR_ID && process.env.ACCOUNTS_METEOR_SEC) {\n  _sc.meteor = true;\n  ServiceConfiguration.configurations.upsert({\n    service: 'meteor-developer'\n  }, {\n    $set: {\n      secret: process.env.ACCOUNTS_METEOR_SEC,\n      clientId: process.env.ACCOUNTS_METEOR_ID,\n      loginStyle: 'redirect'\n    }\n  });\n}\n\nif (process.env.ACCOUNTS_GITHUB_ID && process.env.ACCOUNTS_GITHUB_SEC) {\n  _sc.github = true;\n  ServiceConfiguration.configurations.upsert({\n    service: 'github'\n  }, {\n    $set: {\n      secret: process.env.ACCOUNTS_GITHUB_SEC,\n      clientId: process.env.ACCOUNTS_GITHUB_ID,\n      loginStyle: 'redirect'\n    }\n  });\n}\n\nif (process.env.ACCOUNTS_TWITTER_ID && process.env.ACCOUNTS_TWITTER_SEC) {\n  _sc.twitter = true;\n  ServiceConfiguration.configurations.upsert({\n    service: 'twitter'\n  }, {\n    $set: {\n      loginStyle: 'redirect',\n      secret: process.env.ACCOUNTS_TWITTER_SEC,\n      consumerKey: process.env.ACCOUNTS_TWITTER_ID\n    }\n  });\n}\n\nif (process.env.ACCOUNTS_FACEBOOK_ID && process.env.ACCOUNTS_FACEBOOK_SEC) {\n  _sc.facebook = true;\n  ServiceConfiguration.configurations.upsert({\n    service: 'facebook'\n  }, {\n    $set: {\n      secret: process.env.ACCOUNTS_FACEBOOK_SEC,\n      appId: process.env.ACCOUNTS_FACEBOOK_ID,\n      loginStyle: 'redirect'\n    }\n  });\n}\n\nMeteor.methods({\n  getServiceConfiguration() {\n    return _sc;\n  }\n});\n","// WebApp.connectHandlers.use(new Spiderable({\n//   rootURL: 'https://files.veliov.com',\n//   serviceURL: 'https://render.ostr.io',\n//   auth: 'xxx:yyy'\n// }));"]}