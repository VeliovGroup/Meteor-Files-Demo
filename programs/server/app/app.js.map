{"version":3,"sources":["meteor://ðŸ’»app/lib/__compatability/__globals.coffee","meteor://ðŸ’»app/lib/files.collection.coffee","meteor://ðŸ’»app/lib/router.coffee","meteor://ðŸ’»app/lib/routes.coffee"],"names":[],"mappings":";;;;;;;;;AAAA,IAAC,YAAD,GAAe,EAAf;;AAAA,IACC,KAAD,GACE;AAAA,QAAU,iBAAV;AAAA,EACA,UAAU,SADV;CAFF;;AAKA,IAAG,MAAM,CAAC,QAAV;AACE,UAAQ,CAAC,cAAT,CAAwB,UAAxB,EAAoC,SAAC,IAAD;WAAU,SAAS,IAAT,EAAV;EAAA,CAApC,EADF;CALA;;AAQA,IAAG,MAAM,CAAC,QAAV;AACE,QAAM,CAAC,WAAP,CAAmB;WACjB,WAAW,CAAC,KAAK,CAAC,MAAlB,CAAyB;AAAA,uBAAiB;AAAA,cAAU,SAAK,CAAC,EAAC,SAAF,IAAc,QAAQ,CAA3B,CAAV;OAAjB;KAAzB,EADiB;EAAA,CAAnB,EAGE,KAHF,EADF;CARA;;;;;;;;;;;;;ACAA,WAAW,CAAC,KAAZ,GAAwB,UAAM,CAAC,KAAP,CACtB;AAAA,SAAkB,KAAlB;AAAA,EACA,UAAkB,MAAI,GAAJ,GAAQ,EAD1B;AAAA,EAEA,WAAkB,MAAI,GAAJ,GAAQ,CAF1B;AAAA,EAGA,aAAkB,kCAHlB;AAAA,EAIA,gBAAkB,eAJlB;AAAA,EAKA,iBAAkB,KALlB;AAAA,EAMA,gBAAkB;AAAG,QAAG,IAAC,KAAD,IAAS,SAAS,EAAT,GAAc,GAA1B;aAAmC,KAAnC;KAAA;aAA6C,oDAAiD,CAAC,SAAS,IAAC,KAAV,CAAD,EAA9F;KAAH;EAAA,CANlB;AAAA,EAOA,kBAAkB,SAAC,OAAD;AAChB;AAAA,0CAAU,CAAE,KAAK,CAAC,kBAAf,KAA2B,MAA9B;aACE,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,MAA7B,CAAoC,OAAO,CAAC,GAA5C,EAAiD;AAAA,cAAM;AAAA,4BAAkB,CAAlB;SAAN;OAAjD,EADF;KADgB;EAAA,CAPlB;CADsB,CAAxB;;AAYA,IAAG,MAAM,CAAC,QAAV;AACE,aAAW,CAAC,KAAK,CAAC,UAAU,CAAC,IAA7B,CACE;AAAA,YAAQ;aAAG,KAAH;IAAA,CAAR;AAAA,IACA,QAAQ;aAAG,KAAH;IAAA,CADR;AAAA,IAEA,QAAQ;aAAG,KAAH;IAAA,CAFR;GADF;AAAA,EAKA,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,YAA7B,CAA0C;AAAA,IAAC,iBAAiB,CAAlB;GAA1C,EAAgE;AAAA,IAAC,oBAAoB,CAArB;AAAA,IAAwB,YAAY,IAApC;GAAhE,CALA;AAAA,EAOA,MAAM,CAAC,OAAP,CAAe;WAAG,WAAW,CAAC,KAAK,CAAC,MAAlB,CAAyB,EAAzB,EAAH;EAAA,CAAf,CAPA;AAAA,EASA,MAAM,CAAC,OAAP,CAAe,QAAf,EAAyB,SAAC,IAAD;;MAAC,OAAO;KAC/B;AAAA,UAAM,IAAN,EAAY,MAAZ;WACA,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,IAA7B,CAAkC,EAAlC,EAEE;AAAA,aAAO,IAAP;AAAA,MACA,MAAM;AAAA,2BAAmB,EAAnB;OADN;AAAA,MAEA,QACE;AAAA,aAAK,CAAL;AAAA,QACA,MAAM,CADN;AAAA,QAEA,MAAM,CAFN;AAAA,QAGA,MAAM,CAHN;AAAA,QAIA,SAAS,CAJT;AAAA,QAKA,SAAS,CALT;AAAA,QAMA,SAAS,CANT;OAHF;KAFF,EAFuB;EAAA,CAAzB,CATA;AAAA,EAwBA,MAAM,CAAC,OAAP,CAAe,MAAf,EAAuB,SAAC,GAAD;AACrB,UAAM,GAAN,EAAW,MAAX;WACA,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,IAA7B,CAAkC,GAAlC,EAFqB;EAAA,CAAvB,CAxBA;AAAA,EA4BA,MAAM,CAAC,OAAP,CACE;AAAA,mBAAe;aAAG,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,IAA7B,CAAkC,EAAlC,CAAqC,CAAC,KAAtC,GAAH;IAAA,CAAf;GADF,CA5BA,CADF;CAZA;;;;;;;;;;;;;ACAA,MAAM,CAAC,aAAP,CAAqB;AACnB,MAAsC,IAAC,MAAD,EAAtC;WAAA,MAAM,CAAC,oBAAP,GAA8B,KAA9B;GADmB;AAAA,CAArB;;AAAA,MAGM,CAAC,SAAP,CACE;AAAA,kBAAgB,SAAhB;AAAA,EACA,iBAAiB,UADjB;AAAA,EAEA,kBAAkB,MAFlB;AAAA,EAGA,OAAO,6BAHP;CADF,CAHA;;AAAA,MASM,CAAC,MAAP,CAAc,cAAd,EAA8B;AAAA,oBAAkB,MAAM,CAAC,OAAO,CAAC,gBAAjC;CAA9B,CATA;;;;;;;;;;;;;ACAA,MAAM,CAAC,GAAP,CAAW;AACT,MAAC,MAAD,CAAO,OAAP,EACE;AAAA,cAAU,OAAV;AAAA,IACA,MAAM,GADN;AAAA,IAEA,QAAQ;aAAG,IAAI,CAAC,IAAI,CAAC,SAAV,CAAoB,QAApB,EAA8B,EAA9B,EAAH;IAAA,CAFR;GADF;SAKA,IAAC,MAAD,CAAO,MAAP,EACE;AAAA,cAAU,MAAV;AAAA,IACA,MAAM,OADN;AAAA,IAEA,QAAQ;aAAG,IAAI,CAAC,IAAI,CAAC,SAAV,CAAoB,MAApB,EAA4B,IAAC,OAAM,CAAC,GAApC,EAAH;IAAA,CAFR;AAAA,IAGA,MAAM;aAAG,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,OAA7B,CAAqC,IAAC,OAAM,CAAC,GAA7C,EAAH;IAAA,CAHN;AAAA,IAIA,OAAO;AACL;AAAA,aAAO,IAAC,KAAD,EAAP;AACA,UAAoC,IAAC,OAAM,CAAC,GAAR,IAAgB,IAApD;AAAA,eAAO,gBAAc,IAAI,CAAC,IAA1B;OAFK;IAAA,CAJP;GADF,EANS;AAAA,CAAX","file":"/app.js","sourcesContent":["@Collections = {}\n@_app = \n  subs: new SubsManager()\n  storeTTL: 259200000\n\nif Meteor.isClient\n  Template.registerHelper 'filesize', (size) -> filesize size\n\nif Meteor.isServer\n  Meteor.setInterval ->\n    Collections.files.remove 'meta.expireAt': $lte: new Date((+new Date) + 60000 * 2)\n  ,\n    60000","Collections.files = new Meteor.Files \n  debug:            false\n  throttle:         256*256*64\n  chunkSize:        256*256*4\n  storagePath:      'assets/app/uploads/uploadedFiles'\n  collectionName:   'uploadedFiles'\n  allowClientCode:  false\n  onBeforeUpload:   -> if @size <= 100000 * 10 * 128 then true else \"Max. file size is 128MB you've tried to upload #{filesize(@size)}\"\n  downloadCallback: (fileObj) -> \n    if @params?.query.download is 'true'\n      Collections.files.collection.update fileObj._id, $inc: 'meta.downloads': 1\n\nif Meteor.isServer\n  Collections.files.collection.deny\n    insert: -> true\n    update: -> true\n    remove: -> true\n\n  Collections.files.collection._ensureIndex {'meta.expireAt': 1}, {expireAfterSeconds: 0, background: true}\n\n  Meteor.startup -> Collections.files.remove {}\n\n  Meteor.publish 'latest', (take = 50)->\n    check take, Number\n    Collections.files.collection.find {}\n    ,\n      limit: take\n      sort: 'meta.created_at': -1\n      fields:\n        _id: 1\n        name: 1\n        type: 1\n        meta: 1\n        isVideo: 1\n        isAudio: 1\n        isImage: 1\n\n  Meteor.publish 'file', (_id)->\n    check _id, String\n    Collections.files.collection.find _id\n\n  Meteor.methods\n    'filesLenght': -> Collections.files.collection.find({}).count()","Router.onAfterAction -> \n  Meteor.isReadyForSpiderable = true if @ready()\n\nRouter.configure\n  layoutTemplate: '_layout'\n  loadingTemplate: '_loading'\n  notFoundTemplate: '_404'\n  title: 'Temporary free file storage'\n\nRouter.plugin 'dataNotFound', notFoundTemplate: Router.options.notFoundTemplate","Router.map ->\n  @route 'index',\n    template: 'index'\n    path: '/'\n    waitOn: -> _app.subs.subscribe 'latest', 50\n\n  @route 'file',\n    template: 'file'\n    path: '/:_id'\n    waitOn: -> _app.subs.subscribe 'file', @params._id\n    data: -> Collections.files.collection.findOne @params._id\n    title: -> \n      file = @data()\n      return \"View File: #{file.name}\" if @params._id and file"]}