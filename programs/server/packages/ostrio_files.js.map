{"version":3,"sources":["meteor://ðŸ’»app/packages/ostrio_files/server.coffee","meteor://ðŸ’»app/server.coffee.js","meteor://ðŸ’»app/packages/ostrio_files/core.coffee","meteor://ðŸ’»app/core.coffee.js","meteor://ðŸ’»app/cursor.coffee.js","meteor://ðŸ’»app/packages/ostrio_files/cursor.coffee","meteor://ðŸ’»app/lib.coffee.js","meteor://ðŸ’»app/packages/ostrio_files/lib.coffee","meteor://ðŸ’»app/packages/ostrio_files/write-stream.coffee","meteor://ðŸ’»app/write-stream.coffee.js"],"names":["module","export","FilesCollection","Cookies","watch","require","v","writeStream","FilesCollectionCore","fixJSONParse","fixJSONStringify","formatFleURL","fs","nodeQs","events","request","Throttle","fileType","nodePath","NOOP","bound","Meteor","bindEnvironment","callback","prototype","__proto__","_","extend","EventEmitter","config","_iwcz","_methods","_preCollectionCursor","cookie","self","storagePath","call","ddp","collection","collectionName","downloadRoute","schema","chunkSize","namingFunction","debug","onbeforeunloadMessage","permissions","parentDirPermissions","allowClientCode","onBeforeUpload","onInitiateUpload","integrityCheck","strict","downloadCallback","cacheControl","responseHeaders","throttle","onAfterUpload","onAfterRemove","interceptDownload","onBeforeRemove","continueUploadTTL","_debug","console","info","apply","arguments","Math","floor","Error","Mongo","Collection","filesCollection","_name","check","String","replace","sep","isString","sp","normalize","parseInt","_currentUploads","responseCode","fileRef","versionRef","headers","size","type","mkdirs","mode","error","Boolean","Match","OneOf","Number","Function","Object","_preCollection","_ensureIndex","createdAt","expireAfterSeconds","background","find","fields","_id","isFinished","observe","changed","doc","remove","removed","ref","stop","end","abort","_createStream","path","opts","fileLength","_continueUpload","contUpld","ref1","file","aborted","ended","findOne","name","isVideo","isAudio","isImage","isText","isJSON","isPDF","extension","optional","_storagePath","_downloadRoute","_collectionName","meta","blackbox","userId","updatedAt","Date","versions","Any","_checkAccess","http","rc","result","text","user","_getUser","isFunction","params","isNumber","response","headersSent","writeHead","length","finished","_methodNames","_Abort","_Write","_Start","_Remove","on","_handleUpload","_finishUpload","WebApp","connectHandlers","use","next","_file","body","handleError","uri","uris","version","_parsedUrl","indexOf","method","warn","JSON","stringify","data","e","ref2","ref3","server","sessions","fileId","eof","Buffer","from","binData","error1","chunkId","_prepareUpload","emit","parse","___s","clone","maxLength","insert","omit","returnMeta","uploadRoute","substring","split","query","download","selector","cursor","userFuncs","users","count","FSName","Optional","unblock","wrapAsync","bind","unlink","methods","transport","base","ctx","extensionWithDot","fileName","isUploadAllowed","_getFileName","_getExt","ext","_dataToSchema","cb","chmod","_getMimeType","_updateFileTypes","update","$set","write","fileData","br","buf","fd","mime","openSync","readSync","close","slice","mtok","has","get","buffer","proceedAfterUpload","stream","isBoolean","Random","id","createWriteStream","flags","load","url","pathParts","storeResult","stat","stats","original","pipe","addFile","isFile","docs","files","forEach","fetch","deny","rules","allow","denyClient","allowClient","isEmpty","each","vRef","_404","originalUrl","isObject","statErr","responseType","serve","readableStream","force200","array","dispositionEncoding","dispositionName","dispositionType","key","partiral","reqRange","start","streamErrorHandler","take","value","encodeURI","setHeader","range","isNaN","play","toString","createReadStream","bps","chunksize","Files","FilesCursor","FileCursor","pop","toLowerCase","test","ds","options","link","_fileRef","_collection","property","_selector","_current","hasNext","hasPrevious","previous","first","last","context","map","current","callbacks","observeChanges","obj","i","j","len","isArray","isDate","root","__meteor_runtime_config__","ROOT_URL","fdCache","writtenChunks","ensureFile","efError","open","oError","num","chunk","written","setTimeout","ceil"],"mappings":"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","file":"/packages/ostrio_files.js","sourcesContent":["`import { Cookies } from 'meteor/ostrio:cookies'`\n`import { writeStream } from './write-stream.coffee'`\n`import { FilesCollectionCore } from './core.coffee'`\n`import { fixJSONParse, fixJSONStringify, formatFleURL } from './lib.coffee'`\n\n###\n@summary Require NPM packages\n###\n`import fs       from 'fs-extra'`\n`import nodeQs   from 'querystring'`\n`import events   from 'events'`\n`import request  from 'request'`\n`import Throttle from 'throttle'`\n`import fileType from 'file-type'`\n`import nodePath from 'path'`\n\n###\n@var {Object} bound - Meteor.bindEnvironment (Fiber wrapper)\n###\nbound = Meteor.bindEnvironment (callback) -> return callback()\nNOOP  = -> return\n\n###\n@locus Anywhere\n@class FilesCollection\n@param config           {Object}   - [Both]   Configuration object with next properties:\n@param config.debug     {Boolean}  - [Both]   Turn on/of debugging and extra logging\n@param config.schema    {Object}   - [Both]   Collection Schema\n@param config.public    {Boolean}  - [Both]   Store files in folder accessible for proxy servers, for limits, and more - read docs\n@param config.strict    {Boolean}  - [Server] Strict mode for partial content, if is `true` server will return `416` response code, when `range` is not specified, otherwise server return `206`\n@param config.protected {Function} - [Both]   If `true` - files will be served only to authorized users, if `function()` - you're able to check visitor's permissions in your own way function's context has:\n  - `request` - On server only\n  - `response` - On server only\n  - `user()`\n  - `userId`\n@param config.chunkSize      {Number}  - [Both] Upload chunk size, default: 524288 bytes (0,5 Mb)\n@param config.permissions    {Number}  - [Server] Permissions which will be set to uploaded files (octal), like: `511` or `0o755`. Default: 0644\n@param config.parentDirPermissions {Number}  - [Server] Permissions which will be set to parent directory of uploaded files (octal), like: `611` or `0o777`. Default: 0755\n@param config.storagePath    {String|Function}  - [Server] Storage path on file system\n@param config.cacheControl   {String}  - [Server] Default `Cache-Control` header\n@param config.responseHeaders {Object|Function} - [Server] Custom response headers, if function is passed, must return Object\n@param config.throttle       {Number}  - [Server] bps throttle threshold\n@param config.downloadRoute  {String}  - [Both]   Server Route used to retrieve files\n@param config.collection     {Mongo.Collection} - [Both] Mongo Collection Instance\n@param config.collectionName {String}  - [Both]   Collection name\n@param config.namingFunction {Function}- [Both]   Function which returns `String`\n@param config.integrityCheck {Boolean} - [Server] Check file's integrity before serving to users\n@param config.onAfterUpload  {Function}- [Server] Called right after file is ready on FS. Use to transfer file somewhere else, or do other thing with file directly\n@param config.onAfterRemove  {Function} - [Server] Called right after file is removed. Removed objects is passed to callback\n@param config.continueUploadTTL {Number} - [Server] Time in seconds, during upload may be continued, default 3 hours (10800 seconds)\n@param config.onBeforeUpload {Function}- [Both]   Function which executes on server after receiving each chunk and on client right before beginning upload. Function context is `File` - so you are able to check for extension, mime-type, size and etc.\nreturn `true` to continue\nreturn `false` or `String` to abort upload\n@param config.onInitiateUpload {Function} - [Server] Function which executes on server right before upload is begin and right after `onBeforeUpload` hook. This hook is fully asynchronous.\n@param config.onBeforeRemove {Function} - [Server] Executes before removing file on server, so you can check permissions. Return `true` to allow action and `false` to deny.\n@param config.allowClientCode  {Boolean}  - [Both]   Allow to run `remove` from client\n@param config.downloadCallback {Function} - [Server] Callback triggered each time file is requested, return truthy value to continue download, or falsy to abort\n@param config.interceptDownload {Function} - [Server] Intercept download request, so you can serve file from third-party resource, arguments {http: {request: {...}, response: {...}}, fileRef: {...}}\n@summary Create new instance of FilesCollection\n###\nclass FilesCollection\n  __proto__: do -> _.extend events.EventEmitter.prototype, FilesCollectionCore.prototype\n  constructor: (config) ->\n    events.EventEmitter.call @\n    {storagePath, @ddp, @collection, @collectionName, @downloadRoute, @schema, @chunkSize, @namingFunction, @debug, @onbeforeunloadMessage, @permissions, @parentDirPermissions, @allowClientCode, @onBeforeUpload, @onInitiateUpload, @integrityCheck, @protected, @public, @strict, @downloadCallback, @cacheControl, @responseHeaders, @throttle, @onAfterUpload, @onAfterRemove, @interceptDownload, @onBeforeRemove, @continueUploadTTL} = config if config\n\n    self        = @\n    cookie      = new Cookies()\n    @debug     ?= false\n    @_debug     = ->\n      console.info.apply undefined, arguments if self.debug\n    @public    ?= false\n    @protected ?= false\n    @chunkSize ?= 1024*512\n    @chunkSize  = Math.floor(@chunkSize / 8) * 8\n\n    if @public and not @downloadRoute\n      throw new Meteor.Error 500, \"[FilesCollection.#{@collectionName}]: \\\"downloadRoute\\\" must be precisely provided on \\\"public\\\" collections! Note: \\\"downloadRoute\\\" must be equal or be inside of your web/proxy-server (relative) root.\"\n\n    @collection        ?= new Mongo.Collection @collectionName\n    @collection.filesCollection = @\n    @collectionName    ?= @collection._name\n    check @collectionName, String\n    @downloadRoute     ?= '/cdn/storage'\n    @downloadRoute      = @downloadRoute.replace /\\/$/, ''\n    @collectionName    ?= 'MeteorUploadFiles'\n    @namingFunction    ?= false\n    @onBeforeUpload    ?= false\n    @allowClientCode   ?= true\n    @ddp               ?= Meteor\n    @onInitiateUpload  ?= false\n    @interceptDownload ?= false\n    storagePath        ?= -> \"assets#{nodePath.sep}app#{nodePath.sep}uploads#{nodePath.sep}#{@collectionName}\"\n\n    if _.isString storagePath\n      @storagePath = -> storagePath\n    else\n      @storagePath = ->\n        sp = storagePath.apply @, arguments\n        unless _.isString sp\n          throw new Meteor.Error 400, \"[FilesCollection.#{self.collectionName}] \\\"storagePath\\\" function must return a String!\"\n        sp = sp.replace /\\/$/, ''\n        return nodePath.normalize(sp)\n\n    @strict            ?= true\n    @throttle          ?= false\n    @permissions       ?= parseInt('644', 8)\n    @parentDirPermissions ?= parseInt('755', 8)\n    @cacheControl      ?= 'public, max-age=31536000, s-maxage=31536000'\n    @onAfterUpload     ?= false\n    @onAfterRemove     ?= false\n    @onBeforeRemove    ?= false\n    @integrityCheck    ?= true\n    @_currentUploads   ?= {}\n    @downloadCallback  ?= false\n    @continueUploadTTL ?= 10800\n    @responseHeaders   ?= (responseCode, fileRef, versionRef) ->\n      headers = {}\n      switch responseCode\n        when '206'\n          headers['Pragma']            = 'private'\n          headers['Trailer']           = 'expires'\n          headers['Transfer-Encoding'] = 'chunked'\n        when '400'\n          headers['Cache-Control']     = 'no-cache'\n        when '416'\n          headers['Content-Range']     = \"bytes */#{versionRef.size}\"\n\n      headers['Connection']    = 'keep-alive'\n      headers['Content-Type']  = versionRef.type or 'application/octet-stream'\n      headers['Accept-Ranges'] = 'bytes'\n      return headers\n\n    if @public and not storagePath\n      throw new Meteor.Error 500, \"[FilesCollection.#{@collectionName}] \\\"storagePath\\\" must be set on \\\"public\\\" collections! Note: \\\"storagePath\\\" must be equal on be inside of your web/proxy-server (absolute) root.\"\n\n    @_debug '[FilesCollection.storagePath] Set to:', @storagePath({})\n\n    fs.mkdirs @storagePath({}), {mode: @parentDirPermissions}, (error) ->\n      if error\n        throw new Meteor.Error 401, \"[FilesCollection.#{self.collectionName}] Path \\\"#{self.storagePath({})}\\\" is not writable!\", error\n      return\n\n    check @strict, Boolean\n    check @throttle, Match.OneOf false, Number\n    check @permissions, Number\n    check @storagePath, Function\n    check @cacheControl, String\n    check @onAfterRemove, Match.OneOf false, Function\n    check @onAfterUpload, Match.OneOf false, Function\n    check @integrityCheck, Boolean\n    check @onBeforeRemove, Match.OneOf false, Function\n    check @downloadCallback, Match.OneOf false, Function\n    check @interceptDownload, Match.OneOf false, Function\n    check @continueUploadTTL, Number\n    check @responseHeaders, Match.OneOf Object, Function\n\n    @_preCollection = new Mongo.Collection '__pre_' + @collectionName\n    @_preCollection._ensureIndex {createdAt: 1}, {expireAfterSeconds: @continueUploadTTL, background: true}\n    _preCollectionCursor = @_preCollection.find {}, {\n      fields:\n        _id: 1\n        isFinished: 1\n    }\n    _preCollectionCursor.observe\n      changed: (doc) ->\n        if doc.isFinished\n          self._debug \"[FilesCollection] [_preCollectionCursor.observe] [changed]: #{doc._id}\"\n          self._preCollection.remove {_id: doc._id}, NOOP\n        return\n      removed: (doc) ->\n        # Free memory after upload is done\n        # Or if upload is unfinished\n        self._debug \"[FilesCollection] [_preCollectionCursor.observe] [removed]: #{doc._id}\"\n        if self._currentUploads?[doc._id]\n          self._currentUploads[doc._id].stop()\n          self._currentUploads[doc._id].end()\n\n          unless doc.isFinished\n            self._debug \"[FilesCollection] [_preCollectionCursor.observe] [removeUnfinishedUpload]: #{doc._id}\"\n            self._currentUploads[doc._id].abort()\n\n          delete self._currentUploads[doc._id]\n        return\n\n    @_createStream = (_id, path, opts) ->\n      return self._currentUploads[_id] = new writeStream path, opts.fileLength, opts, self.permissions\n\n    # This little function allows to continue upload\n    # even after server is restarted (*not on dev-stage*)\n    _iwcz = 0\n    @_continueUpload = (_id) ->\n      if self._currentUploads?[_id]?.file\n        if not self._currentUploads[_id].aborted and not self._currentUploads[_id].ended\n          return self._currentUploads[_id].file\n        else\n          self._createStream _id, self._currentUploads[_id].file.file.path, self._currentUploads[_id].file\n          return self._currentUploads[_id].file\n      else\n        contUpld = self._preCollection.findOne {_id}\n        if contUpld\n          self._createStream _id, contUpld.file.path, contUpld\n          return self._currentUploads[_id].file\n        return false\n\n    if not @schema\n      @schema =\n        size: type: Number\n        name: type: String\n        type: type: String\n        path: type: String\n        isVideo: type: Boolean\n        isAudio: type: Boolean\n        isImage: type: Boolean\n        isText: type: Boolean\n        isJSON: type: Boolean\n        isPDF: type: Boolean\n        extension:\n          type: String\n          optional: true\n        _storagePath: type: String\n        _downloadRoute: type: String\n        _collectionName: type: String\n        public:\n          type: Boolean\n          optional: true\n        meta:\n          type: Object\n          blackbox: true\n          optional: true\n        userId:\n          type: String\n          optional: true\n        updatedAt:\n          type: Date\n          optional: true\n        versions:\n          type: Object\n          blackbox: true\n\n    check @debug, Boolean\n    check @schema, Object\n    check @public, Boolean\n    check @protected, Match.OneOf Boolean, Function\n    check @chunkSize, Number\n    check @downloadRoute, String\n    check @namingFunction, Match.OneOf false, Function\n    check @onBeforeUpload, Match.OneOf false, Function\n    check @onInitiateUpload, Match.OneOf false, Function\n    check @allowClientCode, Boolean\n    check @ddp, Match.Any\n\n    if @public and @protected\n      throw new Meteor.Error 500, \"[FilesCollection.#{@collectionName}]: Files can not be public and protected at the same time!\"\n\n    @_checkAccess = (http) ->\n      if self.protected\n        {user, userId} = self._getUser http\n\n        if _.isFunction self.protected\n          if http?.params?._id\n            fileRef = self.collection.findOne http.params._id\n\n          result = if http then self.protected.call(_.extend(http, {user, userId}), (fileRef or null)) else self.protected.call {user, userId}, (fileRef or null)\n        else\n          result = !!userId\n\n        if (http and result is true) or not http\n          return true\n        else\n          rc = if _.isNumber(result) then result else 401\n          self._debug '[FilesCollection._checkAccess] WARN: Access denied!'\n          if http\n            text = 'Access denied!'\n            if !http.response.headersSent\n              http.response.writeHead rc,\n                'Content-Length': text.length\n                'Content-Type':   'text/plain'\n            if !http.response.finished\n              http.response.end text\n          return false\n      else\n        return true\n\n    @_methodNames =\n      _Abort:  \"_FilesCollectionAbort_#{@collectionName}\"\n      _Write:  \"_FilesCollectionWrite_#{@collectionName}\"\n      _Start:  \"_FilesCollectionStart_#{@collectionName}\"\n      _Remove: \"_FilesCollectionRemove_#{@collectionName}\"\n\n    @on '_handleUpload', @_handleUpload\n    @on '_finishUpload', @_finishUpload\n\n    WebApp.connectHandlers.use (request, response, next) ->\n      if !!~request._parsedUrl.path.indexOf \"#{self.downloadRoute}/#{self.collectionName}/__upload\"\n        if request.method is 'POST'\n\n          handleError = (error) ->\n            console.warn \"[FilesCollection] [Upload] [HTTP] Exception:\", error\n            if !response.headersSent\n              response.writeHead 500\n            if !response.finished\n              response.end JSON.stringify {error}\n            return\n\n          body = ''\n          request.on 'data', (data) -> bound ->\n            body += data\n            return\n\n          request.on 'end', -> bound ->\n            try\n              if request.headers['x-mtok'] and Meteor.server.sessions?[request.headers['x-mtok']]\n                user = userId: Meteor.server.sessions[request.headers['x-mtok']]?.userId\n              else\n                user = self._getUser {request, response}\n\n              unless request.headers['x-start'] is '1'\n                opts = fileId: request.headers['x-fileid']\n                if request.headers['x-eof'] is '1'\n                  opts.eof = true\n                else\n                  if typeof Buffer.from is 'function'\n                    try\n                      opts.binData = Buffer.from body, 'base64'\n                    catch e\n                      opts.binData = new Buffer body, 'base64'\n                  else\n                    opts.binData = new Buffer body, 'base64'\n                  opts.chunkId = parseInt request.headers['x-chunkid']\n\n                _continueUpload = self._continueUpload opts.fileId\n                unless _continueUpload\n                  throw new Meteor.Error 408, 'Can\\'t continue upload, session expired. Start upload again.'\n\n                {result, opts}  = self._prepareUpload _.extend(opts, _continueUpload), user.userId, 'HTTP'\n\n                if opts.eof\n                  self._handleUpload result, opts, ->\n                    if !response.headersSent\n                      response.writeHead 200\n                    result.file.meta = fixJSONStringify result.file.meta if result?.file?.meta\n                    if !response.finished\n                      response.end JSON.stringify result\n                    return\n                  return\n                else\n                  self.emit '_handleUpload', result, opts, NOOP\n\n                if !response.headersSent\n                  response.writeHead 204\n                if !response.finished\n                  response.end()\n\n              else\n                try\n                  opts         = JSON.parse body\n                catch e\n                  console.error 'Can\\'t parse incoming JSON from Client on [.insert() | upload], something went wrong!'\n                  console.error e\n                  opts         = file: {}\n\n                opts.___s      = true\n                self._debug \"[FilesCollection] [File Start HTTP] #{opts.file.name} - #{opts.fileId}\"\n                opts.file.meta = fixJSONParse opts.file.meta if opts?.file?.meta\n                {result}       = self._prepareUpload _.clone(opts), user.userId, 'HTTP Start Method'\n                if self.collection.findOne result._id\n                  throw new Meteor.Error 400, 'Can\\'t start upload, data substitution detected!'\n                opts._id       = opts.fileId\n                opts.createdAt = new Date()\n                opts.maxLength = opts.fileLength\n                self._preCollection.insert _.omit(opts, '___s')\n                self._createStream result._id, result.path, _.omit(opts, '___s')\n\n                if opts.returnMeta\n                  if !response.headersSent\n                    response.writeHead 200\n                  if !response.finished\n                    response.end JSON.stringify {\n                      uploadRoute: \"#{self.downloadRoute}/#{self.collectionName}/__upload\"\n                      file: result\n                    }\n                else\n                  if !response.headersSent\n                    response.writeHead 204\n                  if !response.finished\n                    response.end()\n            catch error\n              handleError error\n            return\n        else\n          next()\n        return\n\n      unless self.public\n        if !!~request._parsedUrl.path.indexOf \"#{self.downloadRoute}/#{self.collectionName}\"\n          uri = request._parsedUrl.path.replace \"#{self.downloadRoute}/#{self.collectionName}\", ''\n          if uri.indexOf('/') is 0\n            uri = uri.substring 1\n\n          uris = uri.split '/'\n          if uris.length is 3\n            params =\n              query: if request._parsedUrl.query then nodeQs.parse(request._parsedUrl.query) else {}\n              _id: uris[0]\n              version: uris[1]\n              name: uris[2].split('?')[0]\n            http = {request, response, params}\n            self.download http, uris[1], self.collection.findOne(uris[0]) if self._checkAccess http\n          else\n            next()\n        else\n          next()\n      else\n        if !!~request._parsedUrl.path.indexOf \"#{self.downloadRoute}\"\n          uri = request._parsedUrl.path.replace \"#{self.downloadRoute}\", ''\n          if uri.indexOf('/') is 0\n            uri = uri.substring 1\n\n          uris  = uri.split '/'\n          _file = uris[uris.length - 1]\n          if _file\n            if !!~_file.indexOf '-'\n              version = _file.split('-')[0]\n              _file   = _file.split('-')[1].split('?')[0]\n            else\n              version = 'original'\n              _file   = _file.split('?')[0]\n\n            params =\n              query: if request._parsedUrl.query then nodeQs.parse(request._parsedUrl.query) else {}\n              file: _file\n              _id: _file.split('.')[0]\n              version: version\n              name: _file\n            http = {request, response, params}\n            self.download http, version, self.collection.findOne params._id\n          else\n            next()\n        else\n          next()\n      return\n\n    _methods = {}\n\n\n    # Method used to remove file\n    # from Client side\n    _methods[self._methodNames._Remove] = (selector) ->\n      check selector, Match.OneOf String, Object\n      self._debug \"[FilesCollection] [Unlink Method] [.remove(#{selector})]\"\n\n      if self.allowClientCode\n        if self.onBeforeRemove and _.isFunction self.onBeforeRemove\n          user = false\n          userFuncs = {\n            userId: @userId\n            user: -> if Meteor.users then Meteor.users.findOne(@userId) else null\n          }\n\n          unless self.onBeforeRemove.call userFuncs, (self.find(selector) or null)\n            throw new Meteor.Error 403, '[FilesCollection] [remove] Not permitted!'\n\n        cursor = self.find selector\n        if cursor.count() > 0\n          self.remove selector\n          return true\n        else\n          throw new Meteor.Error 404, 'Cursor is empty, no files is removed'\n      else\n        throw new Meteor.Error 401, '[FilesCollection] [remove] Run code from client is not allowed!'\n      return\n\n\n    # Method used to receive \"first byte\" of upload\n    # and all file's meta-data, so\n    # it won't be transferred with every chunk\n    # Basically it prepares everything\n    # So user can pause/disconnect and\n    # continue upload later, during `continueUploadTTL`\n    _methods[self._methodNames._Start] = (opts, returnMeta) ->\n      check opts, {\n        file:       Object\n        fileId:     String\n        FSName:     Match.Optional String\n        chunkSize:  Number\n        fileLength: Number\n      }\n\n      check returnMeta, Match.Optional Boolean\n\n      self._debug \"[FilesCollection] [File Start Method] #{opts.file.name} - #{opts.fileId}\"\n      opts.___s      = true\n      {result}       = self._prepareUpload _.clone(opts), @userId, 'DDP Start Method'\n      if self.collection.findOne result._id\n        throw new Meteor.Error 400, 'Can\\'t start upload, data substitution detected!'\n      opts._id       = opts.fileId\n      opts.createdAt = new Date()\n      opts.maxLength = opts.fileLength\n      self._preCollection.insert _.omit(opts, '___s')\n      self._createStream result._id, result.path, _.omit(opts, '___s')\n\n      if returnMeta\n        return {\n          uploadRoute: \"#{self.downloadRoute}/#{self.collectionName}/__upload\"\n          file: result\n        }\n      else\n        return true\n\n\n    # Method used to write file chunks\n    # it receives very limited amount of meta-data\n    # This method also responsible for EOF\n    _methods[self._methodNames._Write] = (opts) ->\n      check opts, {\n        eof:     Match.Optional Boolean\n        fileId:  String\n        binData: Match.Optional String\n        chunkId: Match.Optional Number\n      }\n\n      if opts.binData\n        if typeof Buffer.from is 'function'\n          try\n            opts.binData = Buffer.from opts.binData, 'base64'\n          catch e\n            opts.binData = new Buffer opts.binData, 'base64'\n        else\n          opts.binData = new Buffer opts.binData, 'base64'\n\n      _continueUpload = self._continueUpload opts.fileId\n      unless _continueUpload\n        throw new Meteor.Error 408, 'Can\\'t continue upload, session expired. Start upload again.'\n\n      @unblock()\n      {result, opts} = self._prepareUpload _.extend(opts, _continueUpload), @userId, 'DDP'\n\n      if opts.eof\n        try\n          return Meteor.wrapAsync(self._handleUpload.bind(self, result, opts))()\n        catch e\n          self._debug \"[FilesCollection] [Write Method] [DDP] Exception:\", e\n          throw e\n      else\n        self.emit '_handleUpload', result, opts, NOOP\n      return true\n\n    # Method used to Abort upload\n    # - Feeing memory by .end()ing writableStreams\n    # - Removing temporary record from @_preCollection\n    # - Removing record from @collection\n    # - .unlink()ing chunks from FS\n    _methods[self._methodNames._Abort] = (_id) ->\n      check _id, String\n\n      _continueUpload = self._continueUpload _id\n      self._debug \"[FilesCollection] [Abort Method]: #{_id} - #{_continueUpload?.file?.path}\"\n\n      if self._currentUploads?[_id]\n        self._currentUploads[_id].stop()\n        self._currentUploads[_id].abort()\n\n      if _continueUpload\n        self._preCollection.remove {_id}\n        self.remove {_id}\n        self.unlink {_id, path: _continueUpload.file.path} if _continueUpload?.file?.path\n      return true\n\n    Meteor.methods _methods\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name _prepareUpload\n  @summary Internal method. Used to optimize received data and check upload permission\n  @returns {Object}\n  ###\n  _prepareUpload: (opts, userId, transport) ->\n    opts.eof       ?= false\n    opts.binData   ?= 'EOF'\n    opts.chunkId   ?= -1\n    opts.FSName    ?= opts.fileId\n\n    @_debug \"[FilesCollection] [Upload] [#{transport}] Got ##{opts.chunkId}/#{opts.fileLength} chunks, dst: #{opts.file.name or opts.file.fileName}\"\n\n    fileName = @_getFileName opts.file\n    {extension, extensionWithDot} = @_getExt fileName\n\n    opts.file.meta  ?= {}\n    result           = opts.file\n    result.name      = fileName\n    result.meta      = opts.file.meta\n    result.extension = extension\n    result.ext       = extension\n    result._id       = opts.fileId\n    result.userId    = userId or null\n    opts.FSName      = opts.FSName.replace(/([^a-z0-9\\-\\_]+)/gi, '-')\n    result.path      = \"#{@storagePath(result)}#{nodePath.sep}#{opts.FSName}#{extensionWithDot}\"\n    result           = _.extend result, @_dataToSchema result\n\n    if @onBeforeUpload and _.isFunction @onBeforeUpload\n      ctx = _.extend {\n        file: opts.file\n      }, {\n        chunkId: opts.chunkId\n        userId:  result.userId\n        user:    -> if (Meteor.users && result.userId) then Meteor.users.findOne(result.userId) else null\n        eof:     opts.eof\n      }\n      isUploadAllowed = @onBeforeUpload.call ctx, result\n\n      if isUploadAllowed isnt true\n        throw new Meteor.Error(403, if _.isString(isUploadAllowed) then isUploadAllowed else '@onBeforeUpload() returned false')\n      else\n        if opts.___s is true and @onInitiateUpload and _.isFunction @onInitiateUpload\n          @onInitiateUpload.call ctx, result\n    else if opts.___s is true and @onInitiateUpload and _.isFunction @onInitiateUpload\n      ctx = _.extend {\n        file: opts.file\n      }, {\n        chunkId: opts.chunkId\n        userId:  result.userId\n        user:    -> if (Meteor.users && result.userId) then Meteor.users.findOne(result.userId) else null\n        eof:     opts.eof\n      }\n      @onInitiateUpload.call ctx, result\n\n    return {result, opts}\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name _finishUpload\n  @summary Internal method. Finish upload, close Writable stream, add record to MongoDB and flush used memory\n  @returns {undefined}\n  ###\n  _finishUpload: (result, opts, cb) ->\n    @_debug \"[FilesCollection] [Upload] [finish(ing)Upload] -> #{result.path}\"\n    fs.chmod result.path, @permissions, NOOP\n    self          = @\n    result.type   = @_getMimeType opts.file\n    result.public = @public\n    @_updateFileTypes result\n\n    @collection.insert _.clone(result), (error, _id) ->\n      if error\n        cb and cb error\n        self._debug '[FilesCollection] [Upload] [_finishUpload] Error:', error\n      else\n        self._preCollection.update {_id: opts.fileId}, {$set: {isFinished: true}}\n        result._id = _id\n        self._debug \"[FilesCollection] [Upload] [finish(ed)Upload] -> #{result.path}\"\n        self.onAfterUpload and self.onAfterUpload.call self, result\n        self.emit 'afterUpload', result\n        cb and cb null, result\n      return\n    return\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name _handleUpload\n  @summary Internal method to handle upload process, pipe incoming data to Writable stream\n  @returns {undefined}\n  ###\n  _handleUpload: (result, opts, cb) ->\n    try\n      if opts.eof\n        self = @\n        @_currentUploads[result._id].end ->\n          self.emit '_finishUpload', result, opts, cb\n          return\n      else\n        @_currentUploads[result._id].write opts.chunkId, opts.binData, cb\n    catch e\n      @_debug \"[_handleUpload] [EXCEPTION:]\", e\n      cb and cb e\n    return\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _getMimeType\n  @param {Object} fileData - File Object\n  @summary Returns file's mime-type\n  @returns {String}\n  ###\n  _getMimeType: (fileData) ->\n    check fileData, Object\n    mime = fileData.type if fileData?.type\n    if fileData.path and (not mime or not _.isString mime)\n      try\n        buf = new Buffer 262\n        fd  = fs.openSync fileData.path, 'r'\n        br  = fs.readSync fd, buf, 0, 262, 0\n        fs.close fd, NOOP\n        buf = buf.slice 0, br if br < 262\n        {mime, ext} = fileType buf\n      catch error\n    if not mime or not _.isString mime\n      mime = 'application/octet-stream'\n    return mime\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _getUser\n  @summary Returns object with `userId` and `user()` method which return user's object\n  @returns {Object}\n  ###\n  _getUser: (http) ->\n    result =\n      user: -> return null\n      userId: null\n\n    if http\n      mtok = null\n      if http.request.headers['x-mtok']\n        mtok = http.request.headers['x-mtok']\n      else\n        cookie = http.request.Cookies\n        if cookie.has 'x_mtok'\n          mtok = cookie.get 'x_mtok'\n\n      if mtok\n        userId = Meteor.server.sessions?[mtok]?.userId\n        if userId\n          result.user   = -> Meteor.users.findOne userId\n          result.userId = userId\n\n    return result\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name write\n  @param {Buffer} buffer - Binary File's Buffer\n  @param {Object} opts - Object with file-data\n  @param {String} opts.name - File name, alias: `fileName`\n  @param {String} opts.type - File mime-type\n  @param {Object} opts.meta - File additional meta-data\n  @param {String} opts.userId - UserId, default *null*\n  @param {String} opts.fileId - _id, default *null*\n  @param {Function} callback - function(error, fileObj){...}\n  @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n  @summary Write buffer to FS and add to FilesCollection Collection\n  @returns {FilesCollection} Instance\n  ###\n  write: (buffer, opts = {}, callback, proceedAfterUpload) ->\n    @_debug '[FilesCollection] [write()]'\n\n    if _.isFunction opts\n      proceedAfterUpload = callback\n      callback = opts\n      opts     = {}\n    else if _.isBoolean callback\n      proceedAfterUpload = callback\n    else if _.isBoolean opts\n      proceedAfterUpload = opts\n\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n    check proceedAfterUpload, Match.Optional Boolean\n\n    fileId   = opts.fileId or Random.id()\n    FSName   = if @namingFunction then @namingFunction(opts) else fileId\n    fileName = if (opts.name or opts.fileName) then (opts.name or opts.fileName) else FSName\n\n    {extension, extensionWithDot} = @_getExt fileName\n\n    self         = @\n    opts        ?= {}\n    opts.path    = \"#{@storagePath(opts)}#{nodePath.sep}#{FSName}#{extensionWithDot}\"\n    opts.type    = @_getMimeType opts\n    opts.meta   ?= {}\n    opts.size   ?= buffer.length\n\n    result = @_dataToSchema\n      name:      fileName\n      path:      opts.path\n      meta:      opts.meta\n      type:      opts.type\n      size:      opts.size\n      userId:    opts.userId\n      extension: extension\n\n    result._id = fileId\n\n    stream = fs.createWriteStream opts.path, {flags: 'w', mode: @permissions}\n    stream.end buffer, (error) -> bound ->\n      if error\n        callback and callback error\n      else\n        self.collection.insert result, (error, _id) ->\n          if error\n            callback and callback error\n            self._debug \"[FilesCollection] [write] [insert] Error: #{fileName} -> #{self.collectionName}\", error\n          else\n            fileRef = self.collection.findOne _id\n            callback and callback null, fileRef\n            if proceedAfterUpload is true\n              self.onAfterUpload and self.onAfterUpload.call self, fileRef\n              self.emit 'afterUpload', fileRef\n            self._debug \"[FilesCollection] [write]: #{fileName} -> #{self.collectionName}\"\n          return\n      return\n    return @\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name load\n  @param {String} url - URL to file\n  @param {Object} opts - Object with file-data\n  @param {String} opts.name - File name, alias: `fileName`\n  @param {String} opts.type - File mime-type\n  @param {Object} opts.meta - File additional meta-data\n  @param {String} opts.userId - UserId, default *null*\n  @param {String} opts.fileId - _id, default *null*\n  @param {Function} callback - function(error, fileObj){...}\n  @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n  @summary Download file, write stream to FS and add to FilesCollection Collection\n  @returns {FilesCollection} Instance\n  ###\n  load: (url, opts, callback, proceedAfterUpload) ->\n    @_debug \"[FilesCollection] [load(#{url}, #{JSON.stringify(opts)}, callback)]\"\n\n    if _.isFunction opts\n      proceedAfterUpload = callback\n      callback = opts\n      opts     = {}\n    else if _.isBoolean callback\n      proceedAfterUpload = callback\n    else if _.isBoolean opts\n      proceedAfterUpload = opts\n\n    check url, String\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n    check proceedAfterUpload, Match.Optional Boolean\n\n    self      = @\n    opts     ?= {}\n    fileId    = opts.fileId or Random.id()\n    FSName    = if @namingFunction then @namingFunction(opts) else fileId\n    pathParts = url.split('/')\n    fileName  = if (opts.name or opts.fileName) then (opts.name or opts.fileName) else pathParts[pathParts.length - 1] or FSName\n\n    {extension, extensionWithDot} = @_getExt fileName\n    opts.meta ?= {}\n    opts.path  = \"#{@storagePath(opts)}#{nodePath.sep}#{FSName}#{extensionWithDot}\"\n\n    storeResult = (result, callback) ->\n      result._id = fileId\n\n      self.collection.insert result, (error, _id) ->\n        if error\n          callback and callback error\n          self._debug \"[FilesCollection] [load] [insert] Error: #{fileName} -> #{self.collectionName}\", error\n        else\n          fileRef = self.collection.findOne _id\n          callback and callback null, fileRef\n          if proceedAfterUpload is true\n            self.onAfterUpload and self.onAfterUpload.call self, fileRef\n            self.emit 'afterUpload', fileRef\n          self._debug \"[FilesCollection] [load] [insert] #{fileName} -> #{self.collectionName}\"\n        return\n      return\n\n    request.get(url).on('error', (error)-> bound ->\n      callback and callback error\n      self._debug \"[FilesCollection] [load] [request.get(#{url})] Error:\", error\n    ).on('response', (response) -> bound ->\n      response.on 'end', -> bound ->\n        self._debug \"[FilesCollection] [load] Received: #{url}\"\n        result = self._dataToSchema\n          name:      fileName\n          path:      opts.path\n          meta:      opts.meta\n          type:      opts.type or response.headers['content-type'] or self._getMimeType {path: opts.path}\n          size:      opts.size or parseInt(response.headers['content-length'] or 0)\n          userId:    opts.userId\n          extension: extension\n\n        unless result.size\n          fs.stat opts.path, (error, stats) -> bound ->\n            if error\n              callback and callback error\n            else\n              result.versions.original.size = result.size = stats.size\n              storeResult result, callback\n            return\n        else\n          storeResult result, callback\n        return\n      return\n\n    ).pipe fs.createWriteStream(opts.path, {flags: 'w', mode: @permissions})\n\n    return @\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name addFile\n  @param {String} path          - Path to file\n  @param {String} opts          - [Optional] Object with file-data\n  @param {String} opts.type     - [Optional] File mime-type\n  @param {Object} opts.meta     - [Optional] File additional meta-data\n  @param {Object} opts.fileName - [Optional] File name, if not specified file name and extension will be taken from path\n  @param {String} opts.userId   - [Optional] UserId, default *null*\n  @param {Function} callback    - [Optional] function(error, fileObj){...}\n  @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n  @summary Add file from FS to FilesCollection\n  @returns {FilesCollection} Instance\n  ###\n  addFile: (path, opts, callback, proceedAfterUpload) ->\n    @_debug \"[FilesCollection] [addFile(#{path})]\"\n\n    if _.isFunction opts\n      proceedAfterUpload = callback\n      callback = opts\n      opts     = {}\n    else if _.isBoolean callback\n      proceedAfterUpload = callback\n    else if _.isBoolean opts\n      proceedAfterUpload = opts\n\n    throw new Meteor.Error 403, 'Can not run [addFile] on public collection! Just Move file to root of your server, then add record to Collection' if @public\n    check path, String\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n    check proceedAfterUpload, Match.Optional Boolean\n\n    self = @\n    fs.stat path, (error, stats) -> bound ->\n      if error\n        callback and callback error\n      else if stats.isFile()\n        opts      ?= {}\n        opts.path  = path\n\n        unless opts.fileName\n          pathParts     = path.split nodePath.sep\n          opts.fileName = pathParts[pathParts.length - 1]\n\n        {extension, extensionWithDot} = self._getExt opts.fileName\n\n        opts.type ?= self._getMimeType opts\n        opts.meta ?= {}\n        opts.size ?= stats.size\n\n        result = self._dataToSchema\n          name:         opts.fileName\n          path:         path\n          meta:         opts.meta\n          type:         opts.type\n          size:         opts.size\n          userId:       opts.userId\n          extension:    extension\n          _storagePath: path.replace \"#{nodePath.sep}#{opts.fileName}\", ''\n          fileId:       opts.fileId or null\n\n\n        self.collection.insert result, (error, _id) ->\n          if error\n            callback and callback error\n            self._debug \"[FilesCollection] [addFile] [insert] Error: #{result.name} -> #{self.collectionName}\", error\n          else\n            fileRef = self.collection.findOne _id\n            callback and callback null, fileRef\n            if proceedAfterUpload is true\n              self.onAfterUpload and self.onAfterUpload.call self, fileRef\n              self.emit 'afterUpload', fileRef\n            self._debug \"[FilesCollection] [addFile]: #{result.name} -> #{self.collectionName}\"\n          return\n      else\n        callback and callback new Meteor.Error 400, \"[FilesCollection] [addFile(#{path})]: File does not exist\"\n      return\n    return @\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name remove\n  @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n  @param {Function} callback - Callback with one `error` argument\n  @summary Remove documents from the collection\n  @returns {FilesCollection} Instance\n  ###\n  remove: (selector = {}, callback) ->\n    @_debug \"[FilesCollection] [remove(#{JSON.stringify(selector)})]\"\n    check selector, Match.OneOf Object, String\n    check callback, Match.Optional Function\n\n    files = @collection.find selector\n    if files.count() > 0\n      self = @\n      files.forEach (file) ->\n        self.unlink file\n        return\n    else\n      callback and callback new Meteor.Error 404, 'Cursor is empty, no files is removed'\n      return @\n\n    if @onAfterRemove\n      self = @\n      docs = files.fetch()\n\n      @collection.remove selector, ->\n        callback and callback.apply @, arguments\n        self.onAfterRemove docs\n        return\n    else\n      @collection.remove selector, (callback or NOOP)\n    return @\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name deny\n  @param {Object} rules\n  @see  https://docs.meteor.com/api/collections.html#Mongo-Collection-deny\n  @summary link Mongo.Collection deny methods\n  @returns {Mongo.Collection} Instance\n  ###\n  deny: (rules) ->\n    @collection.deny rules\n    return @collection\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name allow\n  @param {Object} rules\n  @see https://docs.meteor.com/api/collections.html#Mongo-Collection-allow\n  @summary link Mongo.Collection allow methods\n  @returns {Mongo.Collection} Instance\n  ###\n  allow: (rules) ->\n    @collection.allow rules\n    return @collection\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name denyClient\n  @see https://docs.meteor.com/api/collections.html#Mongo-Collection-deny\n  @summary Shorthands for Mongo.Collection deny method\n  @returns {Mongo.Collection} Instance\n  ###\n  denyClient: ->\n    @collection.deny\n      insert: -> true\n      update: -> true\n      remove: -> true\n    return @collection\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name allowClient\n  @see https://docs.meteor.com/api/collections.html#Mongo-Collection-allow\n  @summary Shorthands for Mongo.Collection allow method\n  @returns {Mongo.Collection} Instance\n  ###\n  allowClient: ->\n    @collection.allow\n      insert: -> true\n      update: -> true\n      remove: -> true\n    return @collection\n\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name unlink\n  @param {Object} fileRef - fileObj\n  @param {String} version - [Optional] file's version\n  @param {Function} callback - [Optional] callback function\n  @summary Unlink files and it's versions from FS\n  @returns {FilesCollection} Instance\n  ###\n  unlink: (fileRef, version, callback) ->\n    @_debug \"[FilesCollection] [unlink(#{fileRef._id}, #{version})]\"\n    if version\n      if fileRef.versions?[version] and fileRef.versions[version]?.path\n        fs.unlink fileRef.versions[version].path, (callback or NOOP)\n    else\n      if fileRef.versions and not _.isEmpty fileRef.versions\n        _.each fileRef.versions, (vRef) -> bound ->\n          fs.unlink vRef.path, (callback or NOOP)\n          return\n      else\n        fs.unlink fileRef.path, (callback or NOOP)\n    return @\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name _404\n  @summary Internal method, used to return 404 error\n  @returns {undefined}\n  ###\n  _404: (http) ->\n    @_debug \"[FilesCollection] [download(#{http.request.originalUrl})] [_404] File not found\"\n    text = 'File Not Found :('\n\n    if !http.response.headersSent\n      http.response.writeHead 404,\n        'Content-Length': text.length\n        'Content-Type':   'text/plain'\n    if !http.response.finished\n      http.response.end text\n    return\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name download\n  @param {Object} http    - Server HTTP object\n  @param {String} version - Requested file version\n  @param {Object} fileRef - Requested file Object\n  @summary Initiates the HTTP response\n  @returns {undefined}\n  ###\n  download: (http, version = 'original', fileRef) ->\n    @_debug \"[FilesCollection] [download(#{http.request.originalUrl}, #{version})]\"\n    if fileRef\n      if _.has(fileRef, 'versions') and _.has fileRef.versions, version\n        vRef = fileRef.versions[version]\n        vRef._id = fileRef._id\n      else\n        vRef = fileRef\n    else\n      vRef = false\n\n    if not vRef or not _.isObject(vRef)\n      return @_404 http\n    else if fileRef\n      self = @\n\n      if @downloadCallback\n        unless @downloadCallback.call _.extend(http, @_getUser(http)), fileRef\n          return @_404 http\n\n      if @interceptDownload and _.isFunction @interceptDownload\n        if @interceptDownload(http, fileRef, version) is true\n          return\n\n      fs.stat vRef.path, (statErr, stats) -> bound ->\n        if statErr or not stats.isFile()\n          return self._404 http\n\n        vRef.size    = stats.size if stats.size isnt vRef.size and not self.integrityCheck\n        responseType = '400' if stats.size isnt vRef.size and self.integrityCheck\n        self.serve http, fileRef, vRef, version, null, (responseType or '200')\n      return\n    else\n      return @_404 http\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name serve\n  @param {Object} http    - Server HTTP object\n  @param {Object} fileRef - Requested file Object\n  @param {Object} vRef    - Requested file version Object\n  @param {String} version - Requested file version\n  @param {stream.Readable|null} readableStream - Readable stream, which serves binary file data\n  @param {String} responseType - Response code\n  @param {Boolean} force200 - Force 200 response code over 206\n  @summary Handle and reply to incoming request\n  @returns {undefined}\n  ###\n  serve: (http, fileRef, vRef, version = 'original', readableStream = null, responseType = '200', force200 = false) ->\n    self     = @\n    partiral = false\n    reqRange = false\n\n    if http.params.query.download and http.params.query.download == 'true'\n      dispositionType = 'attachment; '\n    else\n      dispositionType = 'inline; '\n\n    dispositionName     = \"filename=\\\"#{encodeURI(vRef.name or fileRef.name)}\\\"; filename*=UTF-8''#{encodeURI(vRef.name or fileRef.name)}; \"\n    dispositionEncoding = 'charset=UTF-8'\n\n    if !http.response.headersSent\n      http.response.setHeader 'Content-Disposition', dispositionType + dispositionName + dispositionEncoding\n\n    if http.request.headers.range and not force200\n      partiral = true\n      array    = http.request.headers.range.split /bytes=([0-9]*)-([0-9]*)/\n      start    = parseInt array[1]\n      end      = parseInt array[2]\n      end      = vRef.size - 1 if isNaN(end)\n      take     = end - start\n    else\n      start    = 0\n      end      = vRef.size - 1\n      take     = vRef.size\n\n    if partiral or (http.params.query.play and http.params.query.play == 'true')\n      reqRange = {start, end}\n      if isNaN(start) and not isNaN end\n        reqRange.start = end - take\n        reqRange.end   = end\n      if not isNaN(start) and isNaN end\n        reqRange.start = start\n        reqRange.end   = start + take\n\n      reqRange.end = vRef.size - 1 if ((start + take) >= vRef.size)\n\n      if self.strict and (reqRange.start >= (vRef.size - 1) or reqRange.end > (vRef.size - 1))\n        responseType = '416'\n      else\n        responseType = '206'\n    else\n      responseType = '200'\n\n    streamErrorHandler = (error) ->\n      self._debug \"[FilesCollection] [serve(#{vRef.path}, #{version})] [500]\", error\n      if !http.response.finished\n        http.response.end error.toString()\n      return\n\n    headers = if _.isFunction(self.responseHeaders) then self.responseHeaders(responseType, fileRef, vRef, version) else self.responseHeaders\n\n    unless headers['Cache-Control']\n      if !http.response.headersSent\n        http.response.setHeader 'Cache-Control', self.cacheControl\n\n    for key, value of headers\n      if !http.response.headersSent\n        http.response.setHeader key, value\n\n    switch responseType\n      when '400'\n        self._debug \"[FilesCollection] [serve(#{vRef.path}, #{version})] [400] Content-Length mismatch!\"\n        text = 'Content-Length mismatch!'\n\n        if !http.response.headersSent\n          http.response.writeHead 400,\n            'Content-Type':   'text/plain'\n            'Content-Length': text.length\n        if !http.response.finished\n          http.response.end text\n        break\n      when '404'\n        return self._404 http\n        break\n      when '416'\n        self._debug \"[FilesCollection] [serve(#{vRef.path}, #{version})] [416] Content-Range is not specified!\"\n        if !http.response.headersSent\n          http.response.writeHead 416\n        if !http.response.finished\n          http.response.end()\n        break\n      when '200'\n        self._debug \"[FilesCollection] [serve(#{vRef.path}, #{version})] [200]\"\n        stream = readableStream or fs.createReadStream vRef.path\n        if !http.response.headersSent\n          http.response.writeHead 200 if readableStream\n\n        http.response.on 'close', ->\n          stream.abort?()\n          stream.end?()\n          return\n\n        http.request.on 'abort', ->\n          stream.abort?()\n          stream.end?()\n          return\n\n        stream.on('open', ->\n          if !http.response.headersSent\n            http.response.writeHead 200\n          return\n        ).on('abort', ->\n          if !http.response.finished\n            http.response.end()\n          if !http.request.aborted\n            http.request.abort()\n          return\n        ).on('error', streamErrorHandler\n        ).on 'end', ->\n          if !http.response.finished\n            http.response.end()\n          return\n        stream.pipe new Throttle {bps: self.throttle, chunksize: self.chunkSize} if self.throttle\n        stream.pipe http.response\n        break\n      when '206'\n        self._debug \"[FilesCollection] [serve(#{vRef.path}, #{version})] [206]\"\n        if !http.response.headersSent\n          http.response.setHeader 'Content-Range', \"bytes #{reqRange.start}-#{reqRange.end}/#{vRef.size}\"\n        stream = readableStream or fs.createReadStream vRef.path, {start: reqRange.start, end: reqRange.end}\n        if !http.response.headersSent\n          http.response.writeHead 206 if readableStream\n\n        http.response.on 'close', ->\n          stream.abort?()\n          stream.end?()\n          return\n\n        http.request.on 'abort', ->\n          stream.abort?()\n          stream.end?()\n          return\n\n        stream.on('open', ->\n          if !http.response.headersSent\n            http.response.writeHead 206\n          return\n        ).on('abort', ->\n          if !http.response.finished\n            http.response.end()\n          if !http.request.aborted\n            http.request.abort()\n          return\n        ).on('error', streamErrorHandler\n        ).on 'end', ->\n          if !http.response.finished\n            http.response.end()\n          return\n        stream.pipe new Throttle {bps: self.throttle, chunksize: self.chunkSize} if self.throttle\n        stream.pipe http.response\n        break\n    return\n\n###\nExport the FilesCollection class\n###\nMeteor.Files = FilesCollection\n`export { FilesCollection }`\n","import { Cookies } from 'meteor/ostrio:cookies';\nimport { writeStream } from './write-stream.coffee';\nimport { FilesCollectionCore } from './core.coffee';\nimport { fixJSONParse, fixJSONStringify, formatFleURL } from './lib.coffee';\n\n/*\n@summary Require NPM packages\n */\nimport fs       from 'fs-extra';\nimport nodeQs   from 'querystring';\nimport events   from 'events';\nimport request  from 'request';\nimport Throttle from 'throttle';\nimport fileType from 'file-type';\nimport nodePath from 'path';\n\n/*\n@var {Object} bound - Meteor.bindEnvironment (Fiber wrapper)\n */\nvar NOOP, bound;                 \n\nbound = Meteor.bindEnvironment(function(callback) {\n  return callback();\n});\n\nNOOP = function() {};\n\n\n/*\n@locus Anywhere\n@class FilesCollection\n@param config           {Object}   - [Both]   Configuration object with next properties:\n@param config.debug     {Boolean}  - [Both]   Turn on/of debugging and extra logging\n@param config.schema    {Object}   - [Both]   Collection Schema\n@param config.public    {Boolean}  - [Both]   Store files in folder accessible for proxy servers, for limits, and more - read docs\n@param config.strict    {Boolean}  - [Server] Strict mode for partial content, if is `true` server will return `416` response code, when `range` is not specified, otherwise server return `206`\n@param config.protected {Function} - [Both]   If `true` - files will be served only to authorized users, if `function()` - you're able to check visitor's permissions in your own way function's context has:\n  - `request` - On server only\n  - `response` - On server only\n  - `user()`\n  - `userId`\n@param config.chunkSize      {Number}  - [Both] Upload chunk size, default: 524288 bytes (0,5 Mb)\n@param config.permissions    {Number}  - [Server] Permissions which will be set to uploaded files (octal), like: `511` or `0o755`. Default: 0644\n@param config.parentDirPermissions {Number}  - [Server] Permissions which will be set to parent directory of uploaded files (octal), like: `611` or `0o777`. Default: 0755\n@param config.storagePath    {String|Function}  - [Server] Storage path on file system\n@param config.cacheControl   {String}  - [Server] Default `Cache-Control` header\n@param config.responseHeaders {Object|Function} - [Server] Custom response headers, if function is passed, must return Object\n@param config.throttle       {Number}  - [Server] bps throttle threshold\n@param config.downloadRoute  {String}  - [Both]   Server Route used to retrieve files\n@param config.collection     {Mongo.Collection} - [Both] Mongo Collection Instance\n@param config.collectionName {String}  - [Both]   Collection name\n@param config.namingFunction {Function}- [Both]   Function which returns `String`\n@param config.integrityCheck {Boolean} - [Server] Check file's integrity before serving to users\n@param config.onAfterUpload  {Function}- [Server] Called right after file is ready on FS. Use to transfer file somewhere else, or do other thing with file directly\n@param config.onAfterRemove  {Function} - [Server] Called right after file is removed. Removed objects is passed to callback\n@param config.continueUploadTTL {Number} - [Server] Time in seconds, during upload may be continued, default 3 hours (10800 seconds)\n@param config.onBeforeUpload {Function}- [Both]   Function which executes on server after receiving each chunk and on client right before beginning upload. Function context is `File` - so you are able to check for extension, mime-type, size and etc.\nreturn `true` to continue\nreturn `false` or `String` to abort upload\n@param config.onInitiateUpload {Function} - [Server] Function which executes on server right before upload is begin and right after `onBeforeUpload` hook. This hook is fully asynchronous.\n@param config.onBeforeRemove {Function} - [Server] Executes before removing file on server, so you can check permissions. Return `true` to allow action and `false` to deny.\n@param config.allowClientCode  {Boolean}  - [Both]   Allow to run `remove` from client\n@param config.downloadCallback {Function} - [Server] Callback triggered each time file is requested, return truthy value to continue download, or falsy to abort\n@param config.interceptDownload {Function} - [Server] Intercept download request, so you can serve file from third-party resource, arguments {http: {request: {...}, response: {...}}, fileRef: {...}}\n@summary Create new instance of FilesCollection\n */\n\nFilesCollection = (function() {\n  FilesCollection.prototype.__proto__ = (function() {\n    return _.extend(events.EventEmitter.prototype, FilesCollectionCore.prototype);\n  })();\n\n  function FilesCollection(config) {\n    var _iwcz, _methods, _preCollectionCursor, cookie, self, storagePath;\n    events.EventEmitter.call(this);\n    if (config) {\n      storagePath = config.storagePath, this.ddp = config.ddp, this.collection = config.collection, this.collectionName = config.collectionName, this.downloadRoute = config.downloadRoute, this.schema = config.schema, this.chunkSize = config.chunkSize, this.namingFunction = config.namingFunction, this.debug = config.debug, this.onbeforeunloadMessage = config.onbeforeunloadMessage, this.permissions = config.permissions, this.parentDirPermissions = config.parentDirPermissions, this.allowClientCode = config.allowClientCode, this.onBeforeUpload = config.onBeforeUpload, this.onInitiateUpload = config.onInitiateUpload, this.integrityCheck = config.integrityCheck, this[\"protected\"] = config[\"protected\"], this[\"public\"] = config[\"public\"], this.strict = config.strict, this.downloadCallback = config.downloadCallback, this.cacheControl = config.cacheControl, this.responseHeaders = config.responseHeaders, this.throttle = config.throttle, this.onAfterUpload = config.onAfterUpload, this.onAfterRemove = config.onAfterRemove, this.interceptDownload = config.interceptDownload, this.onBeforeRemove = config.onBeforeRemove, this.continueUploadTTL = config.continueUploadTTL;\n    }\n    self = this;\n    cookie = new Cookies();\n    if (this.debug == null) {\n      this.debug = false;\n    }\n    this._debug = function() {\n      if (self.debug) {\n        return console.info.apply(void 0, arguments);\n      }\n    };\n    if (this[\"public\"] == null) {\n      this[\"public\"] = false;\n    }\n    if (this[\"protected\"] == null) {\n      this[\"protected\"] = false;\n    }\n    if (this.chunkSize == null) {\n      this.chunkSize = 1024 * 512;\n    }\n    this.chunkSize = Math.floor(this.chunkSize / 8) * 8;\n    if (this[\"public\"] && !this.downloadRoute) {\n      throw new Meteor.Error(500, \"[FilesCollection.\" + this.collectionName + \"]: \\\"downloadRoute\\\" must be precisely provided on \\\"public\\\" collections! Note: \\\"downloadRoute\\\" must be equal or be inside of your web/proxy-server (relative) root.\");\n    }\n    if (this.collection == null) {\n      this.collection = new Mongo.Collection(this.collectionName);\n    }\n    this.collection.filesCollection = this;\n    if (this.collectionName == null) {\n      this.collectionName = this.collection._name;\n    }\n    check(this.collectionName, String);\n    if (this.downloadRoute == null) {\n      this.downloadRoute = '/cdn/storage';\n    }\n    this.downloadRoute = this.downloadRoute.replace(/\\/$/, '');\n    if (this.collectionName == null) {\n      this.collectionName = 'MeteorUploadFiles';\n    }\n    if (this.namingFunction == null) {\n      this.namingFunction = false;\n    }\n    if (this.onBeforeUpload == null) {\n      this.onBeforeUpload = false;\n    }\n    if (this.allowClientCode == null) {\n      this.allowClientCode = true;\n    }\n    if (this.ddp == null) {\n      this.ddp = Meteor;\n    }\n    if (this.onInitiateUpload == null) {\n      this.onInitiateUpload = false;\n    }\n    if (this.interceptDownload == null) {\n      this.interceptDownload = false;\n    }\n    if (storagePath == null) {\n      storagePath = function() {\n        return \"assets\" + nodePath.sep + \"app\" + nodePath.sep + \"uploads\" + nodePath.sep + this.collectionName;\n      };\n    }\n    if (_.isString(storagePath)) {\n      this.storagePath = function() {\n        return storagePath;\n      };\n    } else {\n      this.storagePath = function() {\n        var sp;\n        sp = storagePath.apply(this, arguments);\n        if (!_.isString(sp)) {\n          throw new Meteor.Error(400, \"[FilesCollection.\" + self.collectionName + \"] \\\"storagePath\\\" function must return a String!\");\n        }\n        sp = sp.replace(/\\/$/, '');\n        return nodePath.normalize(sp);\n      };\n    }\n    if (this.strict == null) {\n      this.strict = true;\n    }\n    if (this.throttle == null) {\n      this.throttle = false;\n    }\n    if (this.permissions == null) {\n      this.permissions = parseInt('644', 8);\n    }\n    if (this.parentDirPermissions == null) {\n      this.parentDirPermissions = parseInt('755', 8);\n    }\n    if (this.cacheControl == null) {\n      this.cacheControl = 'public, max-age=31536000, s-maxage=31536000';\n    }\n    if (this.onAfterUpload == null) {\n      this.onAfterUpload = false;\n    }\n    if (this.onAfterRemove == null) {\n      this.onAfterRemove = false;\n    }\n    if (this.onBeforeRemove == null) {\n      this.onBeforeRemove = false;\n    }\n    if (this.integrityCheck == null) {\n      this.integrityCheck = true;\n    }\n    if (this._currentUploads == null) {\n      this._currentUploads = {};\n    }\n    if (this.downloadCallback == null) {\n      this.downloadCallback = false;\n    }\n    if (this.continueUploadTTL == null) {\n      this.continueUploadTTL = 10800;\n    }\n    if (this.responseHeaders == null) {\n      this.responseHeaders = function(responseCode, fileRef, versionRef) {\n        var headers;\n        headers = {};\n        switch (responseCode) {\n          case '206':\n            headers['Pragma'] = 'private';\n            headers['Trailer'] = 'expires';\n            headers['Transfer-Encoding'] = 'chunked';\n            break;\n          case '400':\n            headers['Cache-Control'] = 'no-cache';\n            break;\n          case '416':\n            headers['Content-Range'] = \"bytes */\" + versionRef.size;\n        }\n        headers['Connection'] = 'keep-alive';\n        headers['Content-Type'] = versionRef.type || 'application/octet-stream';\n        headers['Accept-Ranges'] = 'bytes';\n        return headers;\n      };\n    }\n    if (this[\"public\"] && !storagePath) {\n      throw new Meteor.Error(500, \"[FilesCollection.\" + this.collectionName + \"] \\\"storagePath\\\" must be set on \\\"public\\\" collections! Note: \\\"storagePath\\\" must be equal on be inside of your web/proxy-server (absolute) root.\");\n    }\n    this._debug('[FilesCollection.storagePath] Set to:', this.storagePath({}));\n    fs.mkdirs(this.storagePath({}), {\n      mode: this.parentDirPermissions\n    }, function(error) {\n      if (error) {\n        throw new Meteor.Error(401, \"[FilesCollection.\" + self.collectionName + \"] Path \\\"\" + (self.storagePath({})) + \"\\\" is not writable!\", error);\n      }\n    });\n    check(this.strict, Boolean);\n    check(this.throttle, Match.OneOf(false, Number));\n    check(this.permissions, Number);\n    check(this.storagePath, Function);\n    check(this.cacheControl, String);\n    check(this.onAfterRemove, Match.OneOf(false, Function));\n    check(this.onAfterUpload, Match.OneOf(false, Function));\n    check(this.integrityCheck, Boolean);\n    check(this.onBeforeRemove, Match.OneOf(false, Function));\n    check(this.downloadCallback, Match.OneOf(false, Function));\n    check(this.interceptDownload, Match.OneOf(false, Function));\n    check(this.continueUploadTTL, Number);\n    check(this.responseHeaders, Match.OneOf(Object, Function));\n    this._preCollection = new Mongo.Collection('__pre_' + this.collectionName);\n    this._preCollection._ensureIndex({\n      createdAt: 1\n    }, {\n      expireAfterSeconds: this.continueUploadTTL,\n      background: true\n    });\n    _preCollectionCursor = this._preCollection.find({}, {\n      fields: {\n        _id: 1,\n        isFinished: 1\n      }\n    });\n    _preCollectionCursor.observe({\n      changed: function(doc) {\n        if (doc.isFinished) {\n          self._debug(\"[FilesCollection] [_preCollectionCursor.observe] [changed]: \" + doc._id);\n          self._preCollection.remove({\n            _id: doc._id\n          }, NOOP);\n        }\n      },\n      removed: function(doc) {\n        var ref;\n        self._debug(\"[FilesCollection] [_preCollectionCursor.observe] [removed]: \" + doc._id);\n        if ((ref = self._currentUploads) != null ? ref[doc._id] : void 0) {\n          self._currentUploads[doc._id].stop();\n          self._currentUploads[doc._id].end();\n          if (!doc.isFinished) {\n            self._debug(\"[FilesCollection] [_preCollectionCursor.observe] [removeUnfinishedUpload]: \" + doc._id);\n            self._currentUploads[doc._id].abort();\n          }\n          delete self._currentUploads[doc._id];\n        }\n      }\n    });\n    this._createStream = function(_id, path, opts) {\n      return self._currentUploads[_id] = new writeStream(path, opts.fileLength, opts, self.permissions);\n    };\n    _iwcz = 0;\n    this._continueUpload = function(_id) {\n      var contUpld, ref, ref1;\n      if ((ref = self._currentUploads) != null ? (ref1 = ref[_id]) != null ? ref1.file : void 0 : void 0) {\n        if (!self._currentUploads[_id].aborted && !self._currentUploads[_id].ended) {\n          return self._currentUploads[_id].file;\n        } else {\n          self._createStream(_id, self._currentUploads[_id].file.file.path, self._currentUploads[_id].file);\n          return self._currentUploads[_id].file;\n        }\n      } else {\n        contUpld = self._preCollection.findOne({\n          _id: _id\n        });\n        if (contUpld) {\n          self._createStream(_id, contUpld.file.path, contUpld);\n          return self._currentUploads[_id].file;\n        }\n        return false;\n      }\n    };\n    if (!this.schema) {\n      this.schema = {\n        size: {\n          type: Number\n        },\n        name: {\n          type: String\n        },\n        type: {\n          type: String\n        },\n        path: {\n          type: String\n        },\n        isVideo: {\n          type: Boolean\n        },\n        isAudio: {\n          type: Boolean\n        },\n        isImage: {\n          type: Boolean\n        },\n        isText: {\n          type: Boolean\n        },\n        isJSON: {\n          type: Boolean\n        },\n        isPDF: {\n          type: Boolean\n        },\n        extension: {\n          type: String,\n          optional: true\n        },\n        _storagePath: {\n          type: String\n        },\n        _downloadRoute: {\n          type: String\n        },\n        _collectionName: {\n          type: String\n        },\n        \"public\": {\n          type: Boolean,\n          optional: true\n        },\n        meta: {\n          type: Object,\n          blackbox: true,\n          optional: true\n        },\n        userId: {\n          type: String,\n          optional: true\n        },\n        updatedAt: {\n          type: Date,\n          optional: true\n        },\n        versions: {\n          type: Object,\n          blackbox: true\n        }\n      };\n    }\n    check(this.debug, Boolean);\n    check(this.schema, Object);\n    check(this[\"public\"], Boolean);\n    check(this[\"protected\"], Match.OneOf(Boolean, Function));\n    check(this.chunkSize, Number);\n    check(this.downloadRoute, String);\n    check(this.namingFunction, Match.OneOf(false, Function));\n    check(this.onBeforeUpload, Match.OneOf(false, Function));\n    check(this.onInitiateUpload, Match.OneOf(false, Function));\n    check(this.allowClientCode, Boolean);\n    check(this.ddp, Match.Any);\n    if (this[\"public\"] && this[\"protected\"]) {\n      throw new Meteor.Error(500, \"[FilesCollection.\" + this.collectionName + \"]: Files can not be public and protected at the same time!\");\n    }\n    this._checkAccess = function(http) {\n      var fileRef, rc, ref, ref1, result, text, user, userId;\n      if (self[\"protected\"]) {\n        ref = self._getUser(http), user = ref.user, userId = ref.userId;\n        if (_.isFunction(self[\"protected\"])) {\n          if (http != null ? (ref1 = http.params) != null ? ref1._id : void 0 : void 0) {\n            fileRef = self.collection.findOne(http.params._id);\n          }\n          result = http ? self[\"protected\"].call(_.extend(http, {\n            user: user,\n            userId: userId\n          }), fileRef || null) : self[\"protected\"].call({\n            user: user,\n            userId: userId\n          }, fileRef || null);\n        } else {\n          result = !!userId;\n        }\n        if ((http && result === true) || !http) {\n          return true;\n        } else {\n          rc = _.isNumber(result) ? result : 401;\n          self._debug('[FilesCollection._checkAccess] WARN: Access denied!');\n          if (http) {\n            text = 'Access denied!';\n            if (!http.response.headersSent) {\n              http.response.writeHead(rc, {\n                'Content-Length': text.length,\n                'Content-Type': 'text/plain'\n              });\n            }\n            if (!http.response.finished) {\n              http.response.end(text);\n            }\n          }\n          return false;\n        }\n      } else {\n        return true;\n      }\n    };\n    this._methodNames = {\n      _Abort: \"_FilesCollectionAbort_\" + this.collectionName,\n      _Write: \"_FilesCollectionWrite_\" + this.collectionName,\n      _Start: \"_FilesCollectionStart_\" + this.collectionName,\n      _Remove: \"_FilesCollectionRemove_\" + this.collectionName\n    };\n    this.on('_handleUpload', this._handleUpload);\n    this.on('_finishUpload', this._finishUpload);\n    WebApp.connectHandlers.use(function(request, response, next) {\n      var _file, body, handleError, http, params, uri, uris, version;\n      if (!!~request._parsedUrl.path.indexOf(self.downloadRoute + \"/\" + self.collectionName + \"/__upload\")) {\n        if (request.method === 'POST') {\n          handleError = function(error) {\n            console.warn(\"[FilesCollection] [Upload] [HTTP] Exception:\", error);\n            if (!response.headersSent) {\n              response.writeHead(500);\n            }\n            if (!response.finished) {\n              response.end(JSON.stringify({\n                error: error\n              }));\n            }\n          };\n          body = '';\n          request.on('data', function(data) {\n            return bound(function() {\n              body += data;\n            });\n          });\n          request.on('end', function() {\n            return bound(function() {\n              var _continueUpload, e, error, opts, ref, ref1, ref2, ref3, result, user;\n              try {\n                if (request.headers['x-mtok'] && ((ref = Meteor.server.sessions) != null ? ref[request.headers['x-mtok']] : void 0)) {\n                  user = {\n                    userId: (ref1 = Meteor.server.sessions[request.headers['x-mtok']]) != null ? ref1.userId : void 0\n                  };\n                } else {\n                  user = self._getUser({\n                    request: request,\n                    response: response\n                  });\n                }\n                if (request.headers['x-start'] !== '1') {\n                  opts = {\n                    fileId: request.headers['x-fileid']\n                  };\n                  if (request.headers['x-eof'] === '1') {\n                    opts.eof = true;\n                  } else {\n                    if (typeof Buffer.from === 'function') {\n                      try {\n                        opts.binData = Buffer.from(body, 'base64');\n                      } catch (error1) {\n                        e = error1;\n                        opts.binData = new Buffer(body, 'base64');\n                      }\n                    } else {\n                      opts.binData = new Buffer(body, 'base64');\n                    }\n                    opts.chunkId = parseInt(request.headers['x-chunkid']);\n                  }\n                  _continueUpload = self._continueUpload(opts.fileId);\n                  if (!_continueUpload) {\n                    throw new Meteor.Error(408, 'Can\\'t continue upload, session expired. Start upload again.');\n                  }\n                  ref2 = self._prepareUpload(_.extend(opts, _continueUpload), user.userId, 'HTTP'), result = ref2.result, opts = ref2.opts;\n                  if (opts.eof) {\n                    self._handleUpload(result, opts, function() {\n                      var ref3;\n                      if (!response.headersSent) {\n                        response.writeHead(200);\n                      }\n                      if (result != null ? (ref3 = result.file) != null ? ref3.meta : void 0 : void 0) {\n                        result.file.meta = fixJSONStringify(result.file.meta);\n                      }\n                      if (!response.finished) {\n                        response.end(JSON.stringify(result));\n                      }\n                    });\n                    return;\n                  } else {\n                    self.emit('_handleUpload', result, opts, NOOP);\n                  }\n                  if (!response.headersSent) {\n                    response.writeHead(204);\n                  }\n                  if (!response.finished) {\n                    response.end();\n                  }\n                } else {\n                  try {\n                    opts = JSON.parse(body);\n                  } catch (error1) {\n                    e = error1;\n                    console.error('Can\\'t parse incoming JSON from Client on [.insert() | upload], something went wrong!');\n                    console.error(e);\n                    opts = {\n                      file: {}\n                    };\n                  }\n                  opts.___s = true;\n                  self._debug(\"[FilesCollection] [File Start HTTP] \" + opts.file.name + \" - \" + opts.fileId);\n                  if (opts != null ? (ref3 = opts.file) != null ? ref3.meta : void 0 : void 0) {\n                    opts.file.meta = fixJSONParse(opts.file.meta);\n                  }\n                  result = self._prepareUpload(_.clone(opts), user.userId, 'HTTP Start Method').result;\n                  if (self.collection.findOne(result._id)) {\n                    throw new Meteor.Error(400, 'Can\\'t start upload, data substitution detected!');\n                  }\n                  opts._id = opts.fileId;\n                  opts.createdAt = new Date();\n                  opts.maxLength = opts.fileLength;\n                  self._preCollection.insert(_.omit(opts, '___s'));\n                  self._createStream(result._id, result.path, _.omit(opts, '___s'));\n                  if (opts.returnMeta) {\n                    if (!response.headersSent) {\n                      response.writeHead(200);\n                    }\n                    if (!response.finished) {\n                      response.end(JSON.stringify({\n                        uploadRoute: self.downloadRoute + \"/\" + self.collectionName + \"/__upload\",\n                        file: result\n                      }));\n                    }\n                  } else {\n                    if (!response.headersSent) {\n                      response.writeHead(204);\n                    }\n                    if (!response.finished) {\n                      response.end();\n                    }\n                  }\n                }\n              } catch (error1) {\n                error = error1;\n                handleError(error);\n              }\n            });\n          });\n        } else {\n          next();\n        }\n        return;\n      }\n      if (!self[\"public\"]) {\n        if (!!~request._parsedUrl.path.indexOf(self.downloadRoute + \"/\" + self.collectionName)) {\n          uri = request._parsedUrl.path.replace(self.downloadRoute + \"/\" + self.collectionName, '');\n          if (uri.indexOf('/') === 0) {\n            uri = uri.substring(1);\n          }\n          uris = uri.split('/');\n          if (uris.length === 3) {\n            params = {\n              query: request._parsedUrl.query ? nodeQs.parse(request._parsedUrl.query) : {},\n              _id: uris[0],\n              version: uris[1],\n              name: uris[2].split('?')[0]\n            };\n            http = {\n              request: request,\n              response: response,\n              params: params\n            };\n            if (self._checkAccess(http)) {\n              self.download(http, uris[1], self.collection.findOne(uris[0]));\n            }\n          } else {\n            next();\n          }\n        } else {\n          next();\n        }\n      } else {\n        if (!!~request._parsedUrl.path.indexOf(\"\" + self.downloadRoute)) {\n          uri = request._parsedUrl.path.replace(\"\" + self.downloadRoute, '');\n          if (uri.indexOf('/') === 0) {\n            uri = uri.substring(1);\n          }\n          uris = uri.split('/');\n          _file = uris[uris.length - 1];\n          if (_file) {\n            if (!!~_file.indexOf('-')) {\n              version = _file.split('-')[0];\n              _file = _file.split('-')[1].split('?')[0];\n            } else {\n              version = 'original';\n              _file = _file.split('?')[0];\n            }\n            params = {\n              query: request._parsedUrl.query ? nodeQs.parse(request._parsedUrl.query) : {},\n              file: _file,\n              _id: _file.split('.')[0],\n              version: version,\n              name: _file\n            };\n            http = {\n              request: request,\n              response: response,\n              params: params\n            };\n            self.download(http, version, self.collection.findOne(params._id));\n          } else {\n            next();\n          }\n        } else {\n          next();\n        }\n      }\n    });\n    _methods = {};\n    _methods[self._methodNames._Remove] = function(selector) {\n      var cursor, user, userFuncs;\n      check(selector, Match.OneOf(String, Object));\n      self._debug(\"[FilesCollection] [Unlink Method] [.remove(\" + selector + \")]\");\n      if (self.allowClientCode) {\n        if (self.onBeforeRemove && _.isFunction(self.onBeforeRemove)) {\n          user = false;\n          userFuncs = {\n            userId: this.userId,\n            user: function() {\n              if (Meteor.users) {\n                return Meteor.users.findOne(this.userId);\n              } else {\n                return null;\n              }\n            }\n          };\n          if (!self.onBeforeRemove.call(userFuncs, self.find(selector) || null)) {\n            throw new Meteor.Error(403, '[FilesCollection] [remove] Not permitted!');\n          }\n        }\n        cursor = self.find(selector);\n        if (cursor.count() > 0) {\n          self.remove(selector);\n          return true;\n        } else {\n          throw new Meteor.Error(404, 'Cursor is empty, no files is removed');\n        }\n      } else {\n        throw new Meteor.Error(401, '[FilesCollection] [remove] Run code from client is not allowed!');\n      }\n    };\n    _methods[self._methodNames._Start] = function(opts, returnMeta) {\n      var result;\n      check(opts, {\n        file: Object,\n        fileId: String,\n        FSName: Match.Optional(String),\n        chunkSize: Number,\n        fileLength: Number\n      });\n      check(returnMeta, Match.Optional(Boolean));\n      self._debug(\"[FilesCollection] [File Start Method] \" + opts.file.name + \" - \" + opts.fileId);\n      opts.___s = true;\n      result = self._prepareUpload(_.clone(opts), this.userId, 'DDP Start Method').result;\n      if (self.collection.findOne(result._id)) {\n        throw new Meteor.Error(400, 'Can\\'t start upload, data substitution detected!');\n      }\n      opts._id = opts.fileId;\n      opts.createdAt = new Date();\n      opts.maxLength = opts.fileLength;\n      self._preCollection.insert(_.omit(opts, '___s'));\n      self._createStream(result._id, result.path, _.omit(opts, '___s'));\n      if (returnMeta) {\n        return {\n          uploadRoute: self.downloadRoute + \"/\" + self.collectionName + \"/__upload\",\n          file: result\n        };\n      } else {\n        return true;\n      }\n    };\n    _methods[self._methodNames._Write] = function(opts) {\n      var _continueUpload, e, ref, result;\n      check(opts, {\n        eof: Match.Optional(Boolean),\n        fileId: String,\n        binData: Match.Optional(String),\n        chunkId: Match.Optional(Number)\n      });\n      if (opts.binData) {\n        if (typeof Buffer.from === 'function') {\n          try {\n            opts.binData = Buffer.from(opts.binData, 'base64');\n          } catch (error1) {\n            e = error1;\n            opts.binData = new Buffer(opts.binData, 'base64');\n          }\n        } else {\n          opts.binData = new Buffer(opts.binData, 'base64');\n        }\n      }\n      _continueUpload = self._continueUpload(opts.fileId);\n      if (!_continueUpload) {\n        throw new Meteor.Error(408, 'Can\\'t continue upload, session expired. Start upload again.');\n      }\n      this.unblock();\n      ref = self._prepareUpload(_.extend(opts, _continueUpload), this.userId, 'DDP'), result = ref.result, opts = ref.opts;\n      if (opts.eof) {\n        try {\n          return Meteor.wrapAsync(self._handleUpload.bind(self, result, opts))();\n        } catch (error1) {\n          e = error1;\n          self._debug(\"[FilesCollection] [Write Method] [DDP] Exception:\", e);\n          throw e;\n        }\n      } else {\n        self.emit('_handleUpload', result, opts, NOOP);\n      }\n      return true;\n    };\n    _methods[self._methodNames._Abort] = function(_id) {\n      var _continueUpload, ref, ref1, ref2;\n      check(_id, String);\n      _continueUpload = self._continueUpload(_id);\n      self._debug(\"[FilesCollection] [Abort Method]: \" + _id + \" - \" + (_continueUpload != null ? (ref = _continueUpload.file) != null ? ref.path : void 0 : void 0));\n      if ((ref1 = self._currentUploads) != null ? ref1[_id] : void 0) {\n        self._currentUploads[_id].stop();\n        self._currentUploads[_id].abort();\n      }\n      if (_continueUpload) {\n        self._preCollection.remove({\n          _id: _id\n        });\n        self.remove({\n          _id: _id\n        });\n        if (_continueUpload != null ? (ref2 = _continueUpload.file) != null ? ref2.path : void 0 : void 0) {\n          self.unlink({\n            _id: _id,\n            path: _continueUpload.file.path\n          });\n        }\n      }\n      return true;\n    };\n    Meteor.methods(_methods);\n  }\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name _prepareUpload\n  @summary Internal method. Used to optimize received data and check upload permission\n  @returns {Object}\n   */\n\n  FilesCollection.prototype._prepareUpload = function(opts, userId, transport) {\n    var base, ctx, extension, extensionWithDot, fileName, isUploadAllowed, ref, result;\n    if (opts.eof == null) {\n      opts.eof = false;\n    }\n    if (opts.binData == null) {\n      opts.binData = 'EOF';\n    }\n    if (opts.chunkId == null) {\n      opts.chunkId = -1;\n    }\n    if (opts.FSName == null) {\n      opts.FSName = opts.fileId;\n    }\n    this._debug(\"[FilesCollection] [Upload] [\" + transport + \"] Got #\" + opts.chunkId + \"/\" + opts.fileLength + \" chunks, dst: \" + (opts.file.name || opts.file.fileName));\n    fileName = this._getFileName(opts.file);\n    ref = this._getExt(fileName), extension = ref.extension, extensionWithDot = ref.extensionWithDot;\n    if ((base = opts.file).meta == null) {\n      base.meta = {};\n    }\n    result = opts.file;\n    result.name = fileName;\n    result.meta = opts.file.meta;\n    result.extension = extension;\n    result.ext = extension;\n    result._id = opts.fileId;\n    result.userId = userId || null;\n    opts.FSName = opts.FSName.replace(/([^a-z0-9\\-\\_]+)/gi, '-');\n    result.path = \"\" + (this.storagePath(result)) + nodePath.sep + opts.FSName + extensionWithDot;\n    result = _.extend(result, this._dataToSchema(result));\n    if (this.onBeforeUpload && _.isFunction(this.onBeforeUpload)) {\n      ctx = _.extend({\n        file: opts.file\n      }, {\n        chunkId: opts.chunkId,\n        userId: result.userId,\n        user: function() {\n          if (Meteor.users && result.userId) {\n            return Meteor.users.findOne(result.userId);\n          } else {\n            return null;\n          }\n        },\n        eof: opts.eof\n      });\n      isUploadAllowed = this.onBeforeUpload.call(ctx, result);\n      if (isUploadAllowed !== true) {\n        throw new Meteor.Error(403, _.isString(isUploadAllowed) ? isUploadAllowed : '@onBeforeUpload() returned false');\n      } else {\n        if (opts.___s === true && this.onInitiateUpload && _.isFunction(this.onInitiateUpload)) {\n          this.onInitiateUpload.call(ctx, result);\n        }\n      }\n    } else if (opts.___s === true && this.onInitiateUpload && _.isFunction(this.onInitiateUpload)) {\n      ctx = _.extend({\n        file: opts.file\n      }, {\n        chunkId: opts.chunkId,\n        userId: result.userId,\n        user: function() {\n          if (Meteor.users && result.userId) {\n            return Meteor.users.findOne(result.userId);\n          } else {\n            return null;\n          }\n        },\n        eof: opts.eof\n      });\n      this.onInitiateUpload.call(ctx, result);\n    }\n    return {\n      result: result,\n      opts: opts\n    };\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name _finishUpload\n  @summary Internal method. Finish upload, close Writable stream, add record to MongoDB and flush used memory\n  @returns {undefined}\n   */\n\n  FilesCollection.prototype._finishUpload = function(result, opts, cb) {\n    var self;\n    this._debug(\"[FilesCollection] [Upload] [finish(ing)Upload] -> \" + result.path);\n    fs.chmod(result.path, this.permissions, NOOP);\n    self = this;\n    result.type = this._getMimeType(opts.file);\n    result[\"public\"] = this[\"public\"];\n    this._updateFileTypes(result);\n    this.collection.insert(_.clone(result), function(error, _id) {\n      if (error) {\n        cb && cb(error);\n        self._debug('[FilesCollection] [Upload] [_finishUpload] Error:', error);\n      } else {\n        self._preCollection.update({\n          _id: opts.fileId\n        }, {\n          $set: {\n            isFinished: true\n          }\n        });\n        result._id = _id;\n        self._debug(\"[FilesCollection] [Upload] [finish(ed)Upload] -> \" + result.path);\n        self.onAfterUpload && self.onAfterUpload.call(self, result);\n        self.emit('afterUpload', result);\n        cb && cb(null, result);\n      }\n    });\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name _handleUpload\n  @summary Internal method to handle upload process, pipe incoming data to Writable stream\n  @returns {undefined}\n   */\n\n  FilesCollection.prototype._handleUpload = function(result, opts, cb) {\n    var e, self;\n    try {\n      if (opts.eof) {\n        self = this;\n        this._currentUploads[result._id].end(function() {\n          self.emit('_finishUpload', result, opts, cb);\n        });\n      } else {\n        this._currentUploads[result._id].write(opts.chunkId, opts.binData, cb);\n      }\n    } catch (error1) {\n      e = error1;\n      this._debug(\"[_handleUpload] [EXCEPTION:]\", e);\n      cb && cb(e);\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _getMimeType\n  @param {Object} fileData - File Object\n  @summary Returns file's mime-type\n  @returns {String}\n   */\n\n  FilesCollection.prototype._getMimeType = function(fileData) {\n    var br, buf, error, ext, fd, mime, ref;\n    check(fileData, Object);\n    if (fileData != null ? fileData.type : void 0) {\n      mime = fileData.type;\n    }\n    if (fileData.path && (!mime || !_.isString(mime))) {\n      try {\n        buf = new Buffer(262);\n        fd = fs.openSync(fileData.path, 'r');\n        br = fs.readSync(fd, buf, 0, 262, 0);\n        fs.close(fd, NOOP);\n        if (br < 262) {\n          buf = buf.slice(0, br);\n        }\n        ref = fileType(buf), mime = ref.mime, ext = ref.ext;\n      } catch (error1) {\n        error = error1;\n      }\n    }\n    if (!mime || !_.isString(mime)) {\n      mime = 'application/octet-stream';\n    }\n    return mime;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _getUser\n  @summary Returns object with `userId` and `user()` method which return user's object\n  @returns {Object}\n   */\n\n  FilesCollection.prototype._getUser = function(http) {\n    var cookie, mtok, ref, ref1, result, userId;\n    result = {\n      user: function() {\n        return null;\n      },\n      userId: null\n    };\n    if (http) {\n      mtok = null;\n      if (http.request.headers['x-mtok']) {\n        mtok = http.request.headers['x-mtok'];\n      } else {\n        cookie = http.request.Cookies;\n        if (cookie.has('x_mtok')) {\n          mtok = cookie.get('x_mtok');\n        }\n      }\n      if (mtok) {\n        userId = (ref = Meteor.server.sessions) != null ? (ref1 = ref[mtok]) != null ? ref1.userId : void 0 : void 0;\n        if (userId) {\n          result.user = function() {\n            return Meteor.users.findOne(userId);\n          };\n          result.userId = userId;\n        }\n      }\n    }\n    return result;\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name write\n  @param {Buffer} buffer - Binary File's Buffer\n  @param {Object} opts - Object with file-data\n  @param {String} opts.name - File name, alias: `fileName`\n  @param {String} opts.type - File mime-type\n  @param {Object} opts.meta - File additional meta-data\n  @param {String} opts.userId - UserId, default *null*\n  @param {String} opts.fileId - _id, default *null*\n  @param {Function} callback - function(error, fileObj){...}\n  @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n  @summary Write buffer to FS and add to FilesCollection Collection\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.write = function(buffer, opts, callback, proceedAfterUpload) {\n    var FSName, extension, extensionWithDot, fileId, fileName, ref, result, self, stream;\n    if (opts == null) {\n      opts = {};\n    }\n    this._debug('[FilesCollection] [write()]');\n    if (_.isFunction(opts)) {\n      proceedAfterUpload = callback;\n      callback = opts;\n      opts = {};\n    } else if (_.isBoolean(callback)) {\n      proceedAfterUpload = callback;\n    } else if (_.isBoolean(opts)) {\n      proceedAfterUpload = opts;\n    }\n    check(opts, Match.Optional(Object));\n    check(callback, Match.Optional(Function));\n    check(proceedAfterUpload, Match.Optional(Boolean));\n    fileId = opts.fileId || Random.id();\n    FSName = this.namingFunction ? this.namingFunction(opts) : fileId;\n    fileName = (opts.name || opts.fileName) ? opts.name || opts.fileName : FSName;\n    ref = this._getExt(fileName), extension = ref.extension, extensionWithDot = ref.extensionWithDot;\n    self = this;\n    if (opts == null) {\n      opts = {};\n    }\n    opts.path = \"\" + (this.storagePath(opts)) + nodePath.sep + FSName + extensionWithDot;\n    opts.type = this._getMimeType(opts);\n    if (opts.meta == null) {\n      opts.meta = {};\n    }\n    if (opts.size == null) {\n      opts.size = buffer.length;\n    }\n    result = this._dataToSchema({\n      name: fileName,\n      path: opts.path,\n      meta: opts.meta,\n      type: opts.type,\n      size: opts.size,\n      userId: opts.userId,\n      extension: extension\n    });\n    result._id = fileId;\n    stream = fs.createWriteStream(opts.path, {\n      flags: 'w',\n      mode: this.permissions\n    });\n    stream.end(buffer, function(error) {\n      return bound(function() {\n        if (error) {\n          callback && callback(error);\n        } else {\n          self.collection.insert(result, function(error, _id) {\n            var fileRef;\n            if (error) {\n              callback && callback(error);\n              self._debug(\"[FilesCollection] [write] [insert] Error: \" + fileName + \" -> \" + self.collectionName, error);\n            } else {\n              fileRef = self.collection.findOne(_id);\n              callback && callback(null, fileRef);\n              if (proceedAfterUpload === true) {\n                self.onAfterUpload && self.onAfterUpload.call(self, fileRef);\n                self.emit('afterUpload', fileRef);\n              }\n              self._debug(\"[FilesCollection] [write]: \" + fileName + \" -> \" + self.collectionName);\n            }\n          });\n        }\n      });\n    });\n    return this;\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name load\n  @param {String} url - URL to file\n  @param {Object} opts - Object with file-data\n  @param {String} opts.name - File name, alias: `fileName`\n  @param {String} opts.type - File mime-type\n  @param {Object} opts.meta - File additional meta-data\n  @param {String} opts.userId - UserId, default *null*\n  @param {String} opts.fileId - _id, default *null*\n  @param {Function} callback - function(error, fileObj){...}\n  @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n  @summary Download file, write stream to FS and add to FilesCollection Collection\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.load = function(url, opts, callback, proceedAfterUpload) {\n    var FSName, extension, extensionWithDot, fileId, fileName, pathParts, ref, self, storeResult;\n    this._debug(\"[FilesCollection] [load(\" + url + \", \" + (JSON.stringify(opts)) + \", callback)]\");\n    if (_.isFunction(opts)) {\n      proceedAfterUpload = callback;\n      callback = opts;\n      opts = {};\n    } else if (_.isBoolean(callback)) {\n      proceedAfterUpload = callback;\n    } else if (_.isBoolean(opts)) {\n      proceedAfterUpload = opts;\n    }\n    check(url, String);\n    check(opts, Match.Optional(Object));\n    check(callback, Match.Optional(Function));\n    check(proceedAfterUpload, Match.Optional(Boolean));\n    self = this;\n    if (opts == null) {\n      opts = {};\n    }\n    fileId = opts.fileId || Random.id();\n    FSName = this.namingFunction ? this.namingFunction(opts) : fileId;\n    pathParts = url.split('/');\n    fileName = (opts.name || opts.fileName) ? opts.name || opts.fileName : pathParts[pathParts.length - 1] || FSName;\n    ref = this._getExt(fileName), extension = ref.extension, extensionWithDot = ref.extensionWithDot;\n    if (opts.meta == null) {\n      opts.meta = {};\n    }\n    opts.path = \"\" + (this.storagePath(opts)) + nodePath.sep + FSName + extensionWithDot;\n    storeResult = function(result, callback) {\n      result._id = fileId;\n      self.collection.insert(result, function(error, _id) {\n        var fileRef;\n        if (error) {\n          callback && callback(error);\n          self._debug(\"[FilesCollection] [load] [insert] Error: \" + fileName + \" -> \" + self.collectionName, error);\n        } else {\n          fileRef = self.collection.findOne(_id);\n          callback && callback(null, fileRef);\n          if (proceedAfterUpload === true) {\n            self.onAfterUpload && self.onAfterUpload.call(self, fileRef);\n            self.emit('afterUpload', fileRef);\n          }\n          self._debug(\"[FilesCollection] [load] [insert] \" + fileName + \" -> \" + self.collectionName);\n        }\n      });\n    };\n    request.get(url).on('error', function(error) {\n      return bound(function() {\n        callback && callback(error);\n        return self._debug(\"[FilesCollection] [load] [request.get(\" + url + \")] Error:\", error);\n      });\n    }).on('response', function(response) {\n      return bound(function() {\n        response.on('end', function() {\n          return bound(function() {\n            var result;\n            self._debug(\"[FilesCollection] [load] Received: \" + url);\n            result = self._dataToSchema({\n              name: fileName,\n              path: opts.path,\n              meta: opts.meta,\n              type: opts.type || response.headers['content-type'] || self._getMimeType({\n                path: opts.path\n              }),\n              size: opts.size || parseInt(response.headers['content-length'] || 0),\n              userId: opts.userId,\n              extension: extension\n            });\n            if (!result.size) {\n              fs.stat(opts.path, function(error, stats) {\n                return bound(function() {\n                  if (error) {\n                    callback && callback(error);\n                  } else {\n                    result.versions.original.size = result.size = stats.size;\n                    storeResult(result, callback);\n                  }\n                });\n              });\n            } else {\n              storeResult(result, callback);\n            }\n          });\n        });\n      });\n    }).pipe(fs.createWriteStream(opts.path, {\n      flags: 'w',\n      mode: this.permissions\n    }));\n    return this;\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name addFile\n  @param {String} path          - Path to file\n  @param {String} opts          - [Optional] Object with file-data\n  @param {String} opts.type     - [Optional] File mime-type\n  @param {Object} opts.meta     - [Optional] File additional meta-data\n  @param {Object} opts.fileName - [Optional] File name, if not specified file name and extension will be taken from path\n  @param {String} opts.userId   - [Optional] UserId, default *null*\n  @param {Function} callback    - [Optional] function(error, fileObj){...}\n  @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n  @summary Add file from FS to FilesCollection\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.addFile = function(path, opts, callback, proceedAfterUpload) {\n    var self;\n    this._debug(\"[FilesCollection] [addFile(\" + path + \")]\");\n    if (_.isFunction(opts)) {\n      proceedAfterUpload = callback;\n      callback = opts;\n      opts = {};\n    } else if (_.isBoolean(callback)) {\n      proceedAfterUpload = callback;\n    } else if (_.isBoolean(opts)) {\n      proceedAfterUpload = opts;\n    }\n    if (this[\"public\"]) {\n      throw new Meteor.Error(403, 'Can not run [addFile] on public collection! Just Move file to root of your server, then add record to Collection');\n    }\n    check(path, String);\n    check(opts, Match.Optional(Object));\n    check(callback, Match.Optional(Function));\n    check(proceedAfterUpload, Match.Optional(Boolean));\n    self = this;\n    fs.stat(path, function(error, stats) {\n      return bound(function() {\n        var extension, extensionWithDot, pathParts, ref, result;\n        if (error) {\n          callback && callback(error);\n        } else if (stats.isFile()) {\n          if (opts == null) {\n            opts = {};\n          }\n          opts.path = path;\n          if (!opts.fileName) {\n            pathParts = path.split(nodePath.sep);\n            opts.fileName = pathParts[pathParts.length - 1];\n          }\n          ref = self._getExt(opts.fileName), extension = ref.extension, extensionWithDot = ref.extensionWithDot;\n          if (opts.type == null) {\n            opts.type = self._getMimeType(opts);\n          }\n          if (opts.meta == null) {\n            opts.meta = {};\n          }\n          if (opts.size == null) {\n            opts.size = stats.size;\n          }\n          result = self._dataToSchema({\n            name: opts.fileName,\n            path: path,\n            meta: opts.meta,\n            type: opts.type,\n            size: opts.size,\n            userId: opts.userId,\n            extension: extension,\n            _storagePath: path.replace(\"\" + nodePath.sep + opts.fileName, ''),\n            fileId: opts.fileId || null\n          });\n          self.collection.insert(result, function(error, _id) {\n            var fileRef;\n            if (error) {\n              callback && callback(error);\n              self._debug(\"[FilesCollection] [addFile] [insert] Error: \" + result.name + \" -> \" + self.collectionName, error);\n            } else {\n              fileRef = self.collection.findOne(_id);\n              callback && callback(null, fileRef);\n              if (proceedAfterUpload === true) {\n                self.onAfterUpload && self.onAfterUpload.call(self, fileRef);\n                self.emit('afterUpload', fileRef);\n              }\n              self._debug(\"[FilesCollection] [addFile]: \" + result.name + \" -> \" + self.collectionName);\n            }\n          });\n        } else {\n          callback && callback(new Meteor.Error(400, \"[FilesCollection] [addFile(\" + path + \")]: File does not exist\"));\n        }\n      });\n    });\n    return this;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name remove\n  @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n  @param {Function} callback - Callback with one `error` argument\n  @summary Remove documents from the collection\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.remove = function(selector, callback) {\n    var docs, files, self;\n    if (selector == null) {\n      selector = {};\n    }\n    this._debug(\"[FilesCollection] [remove(\" + (JSON.stringify(selector)) + \")]\");\n    check(selector, Match.OneOf(Object, String));\n    check(callback, Match.Optional(Function));\n    files = this.collection.find(selector);\n    if (files.count() > 0) {\n      self = this;\n      files.forEach(function(file) {\n        self.unlink(file);\n      });\n    } else {\n      callback && callback(new Meteor.Error(404, 'Cursor is empty, no files is removed'));\n      return this;\n    }\n    if (this.onAfterRemove) {\n      self = this;\n      docs = files.fetch();\n      this.collection.remove(selector, function() {\n        callback && callback.apply(this, arguments);\n        self.onAfterRemove(docs);\n      });\n    } else {\n      this.collection.remove(selector, callback || NOOP);\n    }\n    return this;\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name deny\n  @param {Object} rules\n  @see  https://docs.meteor.com/api/collections.html#Mongo-Collection-deny\n  @summary link Mongo.Collection deny methods\n  @returns {Mongo.Collection} Instance\n   */\n\n  FilesCollection.prototype.deny = function(rules) {\n    this.collection.deny(rules);\n    return this.collection;\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name allow\n  @param {Object} rules\n  @see https://docs.meteor.com/api/collections.html#Mongo-Collection-allow\n  @summary link Mongo.Collection allow methods\n  @returns {Mongo.Collection} Instance\n   */\n\n  FilesCollection.prototype.allow = function(rules) {\n    this.collection.allow(rules);\n    return this.collection;\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name denyClient\n  @see https://docs.meteor.com/api/collections.html#Mongo-Collection-deny\n  @summary Shorthands for Mongo.Collection deny method\n  @returns {Mongo.Collection} Instance\n   */\n\n  FilesCollection.prototype.denyClient = function() {\n    this.collection.deny({\n      insert: function() {\n        return true;\n      },\n      update: function() {\n        return true;\n      },\n      remove: function() {\n        return true;\n      }\n    });\n    return this.collection;\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name allowClient\n  @see https://docs.meteor.com/api/collections.html#Mongo-Collection-allow\n  @summary Shorthands for Mongo.Collection allow method\n  @returns {Mongo.Collection} Instance\n   */\n\n  FilesCollection.prototype.allowClient = function() {\n    this.collection.allow({\n      insert: function() {\n        return true;\n      },\n      update: function() {\n        return true;\n      },\n      remove: function() {\n        return true;\n      }\n    });\n    return this.collection;\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name unlink\n  @param {Object} fileRef - fileObj\n  @param {String} version - [Optional] file's version\n  @param {Function} callback - [Optional] callback function\n  @summary Unlink files and it's versions from FS\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.unlink = function(fileRef, version, callback) {\n    var ref, ref1;\n    this._debug(\"[FilesCollection] [unlink(\" + fileRef._id + \", \" + version + \")]\");\n    if (version) {\n      if (((ref = fileRef.versions) != null ? ref[version] : void 0) && ((ref1 = fileRef.versions[version]) != null ? ref1.path : void 0)) {\n        fs.unlink(fileRef.versions[version].path, callback || NOOP);\n      }\n    } else {\n      if (fileRef.versions && !_.isEmpty(fileRef.versions)) {\n        _.each(fileRef.versions, function(vRef) {\n          return bound(function() {\n            fs.unlink(vRef.path, callback || NOOP);\n          });\n        });\n      } else {\n        fs.unlink(fileRef.path, callback || NOOP);\n      }\n    }\n    return this;\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name _404\n  @summary Internal method, used to return 404 error\n  @returns {undefined}\n   */\n\n  FilesCollection.prototype._404 = function(http) {\n    var text;\n    this._debug(\"[FilesCollection] [download(\" + http.request.originalUrl + \")] [_404] File not found\");\n    text = 'File Not Found :(';\n    if (!http.response.headersSent) {\n      http.response.writeHead(404, {\n        'Content-Length': text.length,\n        'Content-Type': 'text/plain'\n      });\n    }\n    if (!http.response.finished) {\n      http.response.end(text);\n    }\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name download\n  @param {Object} http    - Server HTTP object\n  @param {String} version - Requested file version\n  @param {Object} fileRef - Requested file Object\n  @summary Initiates the HTTP response\n  @returns {undefined}\n   */\n\n  FilesCollection.prototype.download = function(http, version, fileRef) {\n    var self, vRef;\n    if (version == null) {\n      version = 'original';\n    }\n    this._debug(\"[FilesCollection] [download(\" + http.request.originalUrl + \", \" + version + \")]\");\n    if (fileRef) {\n      if (_.has(fileRef, 'versions') && _.has(fileRef.versions, version)) {\n        vRef = fileRef.versions[version];\n        vRef._id = fileRef._id;\n      } else {\n        vRef = fileRef;\n      }\n    } else {\n      vRef = false;\n    }\n    if (!vRef || !_.isObject(vRef)) {\n      return this._404(http);\n    } else if (fileRef) {\n      self = this;\n      if (this.downloadCallback) {\n        if (!this.downloadCallback.call(_.extend(http, this._getUser(http)), fileRef)) {\n          return this._404(http);\n        }\n      }\n      if (this.interceptDownload && _.isFunction(this.interceptDownload)) {\n        if (this.interceptDownload(http, fileRef, version) === true) {\n          return;\n        }\n      }\n      fs.stat(vRef.path, function(statErr, stats) {\n        return bound(function() {\n          var responseType;\n          if (statErr || !stats.isFile()) {\n            return self._404(http);\n          }\n          if (stats.size !== vRef.size && !self.integrityCheck) {\n            vRef.size = stats.size;\n          }\n          if (stats.size !== vRef.size && self.integrityCheck) {\n            responseType = '400';\n          }\n          return self.serve(http, fileRef, vRef, version, null, responseType || '200');\n        });\n      });\n    } else {\n      return this._404(http);\n    }\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name serve\n  @param {Object} http    - Server HTTP object\n  @param {Object} fileRef - Requested file Object\n  @param {Object} vRef    - Requested file version Object\n  @param {String} version - Requested file version\n  @param {stream.Readable|null} readableStream - Readable stream, which serves binary file data\n  @param {String} responseType - Response code\n  @param {Boolean} force200 - Force 200 response code over 206\n  @summary Handle and reply to incoming request\n  @returns {undefined}\n   */\n\n  FilesCollection.prototype.serve = function(http, fileRef, vRef, version, readableStream, responseType, force200) {\n    var array, dispositionEncoding, dispositionName, dispositionType, end, headers, key, partiral, reqRange, self, start, stream, streamErrorHandler, take, text, value;\n    if (version == null) {\n      version = 'original';\n    }\n    if (readableStream == null) {\n      readableStream = null;\n    }\n    if (responseType == null) {\n      responseType = '200';\n    }\n    if (force200 == null) {\n      force200 = false;\n    }\n    self = this;\n    partiral = false;\n    reqRange = false;\n    if (http.params.query.download && http.params.query.download === 'true') {\n      dispositionType = 'attachment; ';\n    } else {\n      dispositionType = 'inline; ';\n    }\n    dispositionName = \"filename=\\\"\" + (encodeURI(vRef.name || fileRef.name)) + \"\\\"; filename*=UTF-8''\" + (encodeURI(vRef.name || fileRef.name)) + \"; \";\n    dispositionEncoding = 'charset=UTF-8';\n    if (!http.response.headersSent) {\n      http.response.setHeader('Content-Disposition', dispositionType + dispositionName + dispositionEncoding);\n    }\n    if (http.request.headers.range && !force200) {\n      partiral = true;\n      array = http.request.headers.range.split(/bytes=([0-9]*)-([0-9]*)/);\n      start = parseInt(array[1]);\n      end = parseInt(array[2]);\n      if (isNaN(end)) {\n        end = vRef.size - 1;\n      }\n      take = end - start;\n    } else {\n      start = 0;\n      end = vRef.size - 1;\n      take = vRef.size;\n    }\n    if (partiral || (http.params.query.play && http.params.query.play === 'true')) {\n      reqRange = {\n        start: start,\n        end: end\n      };\n      if (isNaN(start) && !isNaN(end)) {\n        reqRange.start = end - take;\n        reqRange.end = end;\n      }\n      if (!isNaN(start) && isNaN(end)) {\n        reqRange.start = start;\n        reqRange.end = start + take;\n      }\n      if ((start + take) >= vRef.size) {\n        reqRange.end = vRef.size - 1;\n      }\n      if (self.strict && (reqRange.start >= (vRef.size - 1) || reqRange.end > (vRef.size - 1))) {\n        responseType = '416';\n      } else {\n        responseType = '206';\n      }\n    } else {\n      responseType = '200';\n    }\n    streamErrorHandler = function(error) {\n      self._debug(\"[FilesCollection] [serve(\" + vRef.path + \", \" + version + \")] [500]\", error);\n      if (!http.response.finished) {\n        http.response.end(error.toString());\n      }\n    };\n    headers = _.isFunction(self.responseHeaders) ? self.responseHeaders(responseType, fileRef, vRef, version) : self.responseHeaders;\n    if (!headers['Cache-Control']) {\n      if (!http.response.headersSent) {\n        http.response.setHeader('Cache-Control', self.cacheControl);\n      }\n    }\n    for (key in headers) {\n      value = headers[key];\n      if (!http.response.headersSent) {\n        http.response.setHeader(key, value);\n      }\n    }\n    switch (responseType) {\n      case '400':\n        self._debug(\"[FilesCollection] [serve(\" + vRef.path + \", \" + version + \")] [400] Content-Length mismatch!\");\n        text = 'Content-Length mismatch!';\n        if (!http.response.headersSent) {\n          http.response.writeHead(400, {\n            'Content-Type': 'text/plain',\n            'Content-Length': text.length\n          });\n        }\n        if (!http.response.finished) {\n          http.response.end(text);\n        }\n        break;\n      case '404':\n        return self._404(http);\n        break;\n      case '416':\n        self._debug(\"[FilesCollection] [serve(\" + vRef.path + \", \" + version + \")] [416] Content-Range is not specified!\");\n        if (!http.response.headersSent) {\n          http.response.writeHead(416);\n        }\n        if (!http.response.finished) {\n          http.response.end();\n        }\n        break;\n      case '200':\n        self._debug(\"[FilesCollection] [serve(\" + vRef.path + \", \" + version + \")] [200]\");\n        stream = readableStream || fs.createReadStream(vRef.path);\n        if (!http.response.headersSent) {\n          if (readableStream) {\n            http.response.writeHead(200);\n          }\n        }\n        http.response.on('close', function() {\n          if (typeof stream.abort === \"function\") {\n            stream.abort();\n          }\n          if (typeof stream.end === \"function\") {\n            stream.end();\n          }\n        });\n        http.request.on('abort', function() {\n          if (typeof stream.abort === \"function\") {\n            stream.abort();\n          }\n          if (typeof stream.end === \"function\") {\n            stream.end();\n          }\n        });\n        stream.on('open', function() {\n          if (!http.response.headersSent) {\n            http.response.writeHead(200);\n          }\n        }).on('abort', function() {\n          if (!http.response.finished) {\n            http.response.end();\n          }\n          if (!http.request.aborted) {\n            http.request.abort();\n          }\n        }).on('error', streamErrorHandler).on('end', function() {\n          if (!http.response.finished) {\n            http.response.end();\n          }\n        });\n        if (self.throttle) {\n          stream.pipe(new Throttle({\n            bps: self.throttle,\n            chunksize: self.chunkSize\n          }));\n        }\n        stream.pipe(http.response);\n        break;\n      case '206':\n        self._debug(\"[FilesCollection] [serve(\" + vRef.path + \", \" + version + \")] [206]\");\n        if (!http.response.headersSent) {\n          http.response.setHeader('Content-Range', \"bytes \" + reqRange.start + \"-\" + reqRange.end + \"/\" + vRef.size);\n        }\n        stream = readableStream || fs.createReadStream(vRef.path, {\n          start: reqRange.start,\n          end: reqRange.end\n        });\n        if (!http.response.headersSent) {\n          if (readableStream) {\n            http.response.writeHead(206);\n          }\n        }\n        http.response.on('close', function() {\n          if (typeof stream.abort === \"function\") {\n            stream.abort();\n          }\n          if (typeof stream.end === \"function\") {\n            stream.end();\n          }\n        });\n        http.request.on('abort', function() {\n          if (typeof stream.abort === \"function\") {\n            stream.abort();\n          }\n          if (typeof stream.end === \"function\") {\n            stream.end();\n          }\n        });\n        stream.on('open', function() {\n          if (!http.response.headersSent) {\n            http.response.writeHead(206);\n          }\n        }).on('abort', function() {\n          if (!http.response.finished) {\n            http.response.end();\n          }\n          if (!http.request.aborted) {\n            http.request.abort();\n          }\n        }).on('error', streamErrorHandler).on('end', function() {\n          if (!http.response.finished) {\n            http.response.end();\n          }\n        });\n        if (self.throttle) {\n          stream.pipe(new Throttle({\n            bps: self.throttle,\n            chunksize: self.chunkSize\n          }));\n        }\n        stream.pipe(http.response);\n        break;\n    }\n  };\n\n  return FilesCollection;\n\n})();\n\n\n/*\nExport the FilesCollection class\n */\n\nMeteor.Files = FilesCollection;\n\nexport { FilesCollection };\n","`import { FilesCursor, FileCursor } from './cursor.coffee'`\n`import { fixJSONParse, fixJSONStringify, formatFleURL } from './lib.coffee'`\n\nclass FilesCollectionCore\n  constructor: () ->\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _getFileName\n  @param {Object} fileData - File Object\n  @summary Returns file's name\n  @returns {String}\n  ###\n  _getFileName: (fileData) ->\n    fileName = fileData.name or fileData.fileName\n    if _.isString(fileName) and fileName.length > 0\n      return (fileData.name or fileData.fileName).replace(/\\.\\./g, '').replace /\\//g, ''\n    else\n      return ''\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _getExt\n  @param {String} FileName - File name\n  @summary Get extension from FileName\n  @returns {Object}\n  ###\n  _getExt: (fileName) ->\n    if !!~fileName.indexOf('.')\n      extension = (fileName.split('.').pop().split('?')[0] or '').toLowerCase()\n      return { ext: extension, extension, extensionWithDot: '.' + extension }\n    else\n      return { ext: '', extension: '', extensionWithDot: '' }\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _updateFileTypes\n  @param {Object} data - File data\n  @summary Internal method. Classify file based on 'type' field\n  ###\n  _updateFileTypes: (data) ->\n    data.isVideo  = /^video\\//i.test data.type\n    data.isAudio  = /^audio\\//i.test data.type\n    data.isImage  = /^image\\//i.test data.type\n    data.isText   = /^text\\//i.test data.type\n    data.isJSON   = /^application\\/json$/i.test data.type\n    data.isPDF    = /^application\\/(x-)?pdf$/i.test data.type\n    return\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _dataToSchema\n  @param {Object} data - File data\n  @summary Internal method. Build object in accordance with default schema from File data\n  @returns {Object}\n  ###\n  _dataToSchema: (data) ->\n    ds =\n      name:       data.name\n      extension:  data.extension\n      path:       data.path\n      meta:       data.meta\n      type:       data.type\n      size:       data.size\n      userId:     data.userId or null\n      versions:\n        original:\n          path: data.path\n          size: data.size\n          type: data.type\n          extension: data.extension\n      _downloadRoute:  data._downloadRoute or @downloadRoute\n      _collectionName: data._collectionName or @collectionName\n    \n    #Optional fileId\n    if data.fileId\n       ds._id = data.fileId;\n    \n    @_updateFileTypes ds\n    ds._storagePath = data._storagePath or @storagePath(_.extend(data, ds))\n    return ds\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name findOne\n  @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n  @param {Object} options - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#sortspecifiers)\n  @summary Find and return Cursor for matching document Object\n  @returns {FileCursor} Instance\n  ###\n  findOne: (selector, options) ->\n    @_debug \"[FilesCollection] [findOne(#{JSON.stringify(selector)}, #{JSON.stringify(options)})]\"\n    check selector, Match.Optional Match.OneOf Object, String, Boolean, Number, null\n    check options, Match.Optional Object\n\n    selector = {} unless arguments.length\n    doc = @collection.findOne selector, options\n    return if doc then new FileCursor(doc, @) else doc\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name find\n  @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n  @param {Object}        options  - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#sortspecifiers)\n  @summary Find and return Cursor for matching documents\n  @returns {FilesCursor} Instance\n  ###\n  find: (selector, options) ->\n    @_debug \"[FilesCollection] [find(#{JSON.stringify(selector)}, #{JSON.stringify(options)})]\"\n    check selector, Match.Optional Match.OneOf Object, String, Boolean, Number, null\n    check options, Match.Optional Object\n\n    selector = {} unless arguments.length\n    return new FilesCursor selector, options, @\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name update\n  @see http://docs.meteor.com/#/full/update\n  @summary link Mongo.Collection update method\n  @returns {Mongo.Collection} Instance\n  ###\n  update: ->\n    @collection.update.apply @collection, arguments\n    return @collection\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name link\n  @param {Object} fileRef - File reference object\n  @param {String} version - Version of file you would like to request\n  @summary Returns downloadable URL\n  @returns {String} Empty string returned in case if file not found in DB\n  ###\n  link: (fileRef, version = 'original') ->\n    @_debug \"[FilesCollection] [link(#{fileRef?._id}, #{version})]\"\n    check fileRef, Object\n    check version, String\n    return '' if not fileRef\n    return formatFleURL fileRef, version\n\n`export { FilesCollectionCore }`","import { FilesCursor, FileCursor } from './cursor.coffee';\nimport { fixJSONParse, fixJSONStringify, formatFleURL } from './lib.coffee';\nvar FilesCollectionCore;\n\nFilesCollectionCore = (function() {\n  function FilesCollectionCore() {}\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _getFileName\n  @param {Object} fileData - File Object\n  @summary Returns file's name\n  @returns {String}\n   */\n\n  FilesCollectionCore.prototype._getFileName = function(fileData) {\n    var fileName;\n    fileName = fileData.name || fileData.fileName;\n    if (_.isString(fileName) && fileName.length > 0) {\n      return (fileData.name || fileData.fileName).replace(/\\.\\./g, '').replace(/\\//g, '');\n    } else {\n      return '';\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _getExt\n  @param {String} FileName - File name\n  @summary Get extension from FileName\n  @returns {Object}\n   */\n\n  FilesCollectionCore.prototype._getExt = function(fileName) {\n    var extension;\n    if (!!~fileName.indexOf('.')) {\n      extension = (fileName.split('.').pop().split('?')[0] || '').toLowerCase();\n      return {\n        ext: extension,\n        extension: extension,\n        extensionWithDot: '.' + extension\n      };\n    } else {\n      return {\n        ext: '',\n        extension: '',\n        extensionWithDot: ''\n      };\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _updateFileTypes\n  @param {Object} data - File data\n  @summary Internal method. Classify file based on 'type' field\n   */\n\n  FilesCollectionCore.prototype._updateFileTypes = function(data) {\n    data.isVideo = /^video\\//i.test(data.type);\n    data.isAudio = /^audio\\//i.test(data.type);\n    data.isImage = /^image\\//i.test(data.type);\n    data.isText = /^text\\//i.test(data.type);\n    data.isJSON = /^application\\/json$/i.test(data.type);\n    data.isPDF = /^application\\/(x-)?pdf$/i.test(data.type);\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _dataToSchema\n  @param {Object} data - File data\n  @summary Internal method. Build object in accordance with default schema from File data\n  @returns {Object}\n   */\n\n  FilesCollectionCore.prototype._dataToSchema = function(data) {\n    var ds;\n    ds = {\n      name: data.name,\n      extension: data.extension,\n      path: data.path,\n      meta: data.meta,\n      type: data.type,\n      size: data.size,\n      userId: data.userId || null,\n      versions: {\n        original: {\n          path: data.path,\n          size: data.size,\n          type: data.type,\n          extension: data.extension\n        }\n      },\n      _downloadRoute: data._downloadRoute || this.downloadRoute,\n      _collectionName: data._collectionName || this.collectionName\n    };\n    if (data.fileId) {\n      ds._id = data.fileId;\n    }\n    this._updateFileTypes(ds);\n    ds._storagePath = data._storagePath || this.storagePath(_.extend(data, ds));\n    return ds;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name findOne\n  @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n  @param {Object} options - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#sortspecifiers)\n  @summary Find and return Cursor for matching document Object\n  @returns {FileCursor} Instance\n   */\n\n  FilesCollectionCore.prototype.findOne = function(selector, options) {\n    var doc;\n    this._debug(\"[FilesCollection] [findOne(\" + (JSON.stringify(selector)) + \", \" + (JSON.stringify(options)) + \")]\");\n    check(selector, Match.Optional(Match.OneOf(Object, String, Boolean, Number, null)));\n    check(options, Match.Optional(Object));\n    if (!arguments.length) {\n      selector = {};\n    }\n    doc = this.collection.findOne(selector, options);\n    if (doc) {\n      return new FileCursor(doc, this);\n    } else {\n      return doc;\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name find\n  @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n  @param {Object}        options  - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#sortspecifiers)\n  @summary Find and return Cursor for matching documents\n  @returns {FilesCursor} Instance\n   */\n\n  FilesCollectionCore.prototype.find = function(selector, options) {\n    this._debug(\"[FilesCollection] [find(\" + (JSON.stringify(selector)) + \", \" + (JSON.stringify(options)) + \")]\");\n    check(selector, Match.Optional(Match.OneOf(Object, String, Boolean, Number, null)));\n    check(options, Match.Optional(Object));\n    if (!arguments.length) {\n      selector = {};\n    }\n    return new FilesCursor(selector, options, this);\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name update\n  @see http://docs.meteor.com/#/full/update\n  @summary link Mongo.Collection update method\n  @returns {Mongo.Collection} Instance\n   */\n\n  FilesCollectionCore.prototype.update = function() {\n    this.collection.update.apply(this.collection, arguments);\n    return this.collection;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name link\n  @param {Object} fileRef - File reference object\n  @param {String} version - Version of file you would like to request\n  @summary Returns downloadable URL\n  @returns {String} Empty string returned in case if file not found in DB\n   */\n\n  FilesCollectionCore.prototype.link = function(fileRef, version) {\n    if (version == null) {\n      version = 'original';\n    }\n    this._debug(\"[FilesCollection] [link(\" + (fileRef != null ? fileRef._id : void 0) + \", \" + version + \")]\");\n    check(fileRef, Object);\n    check(version, String);\n    if (!fileRef) {\n      return '';\n    }\n    return formatFleURL(fileRef, version);\n  };\n\n  return FilesCollectionCore;\n\n})();\n\nexport { FilesCollectionCore };\n","\n/*\n@private\n@locus Anywhere\n@class FileCursor\n@param _fileRef    {Object} - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n@param _collection {FilesCollection} - FilesCollection Instance\n@summary Internal class, represents each record in `FilesCursor.each()` or document returned from `.findOne()` method\n */\nvar FileCursor, FilesCursor;\n\nFileCursor = (function() {\n  function FileCursor(_fileRef, _collection) {\n    var self;\n    this._fileRef = _fileRef;\n    this._collection = _collection;\n    self = this;\n    self = _.extend(self, this._fileRef);\n  }\n\n\n  /*\n  @locus Anywhere\n  @memberOf FileCursor\n  @name remove\n  @param callback {Function} - Triggered asynchronously after item is removed or failed to be removed\n  @summary Remove document\n  @returns {FileCursor}\n   */\n\n  FileCursor.prototype.remove = function(callback) {\n    this._collection._debug('[FilesCollection] [FileCursor] [remove()]');\n    if (this._fileRef) {\n      this._collection.remove(this._fileRef._id, callback);\n    } else {\n      callback && callback(new Meteor.Error(404, 'No such file'));\n    }\n    return this;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FileCursor\n  @name link\n  @param version {String} - Name of file's subversion\n  @summary Returns downloadable URL to File\n  @returns {String}\n   */\n\n  FileCursor.prototype.link = function(version) {\n    if (version == null) {\n      version = 'original';\n    }\n    this._collection._debug(\"[FilesCollection] [FileCursor] [link(\" + version + \")]\");\n    if (this._fileRef) {\n      return this._collection.link(this._fileRef, version);\n    } else {\n      return '';\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FileCursor\n  @name get\n  @param property {String} - Name of sub-object property\n  @summary Returns current document as a plain Object, if `property` is specified - returns value of sub-object property\n  @returns {Object|mix}\n   */\n\n  FileCursor.prototype.get = function(property) {\n    this._collection._debug(\"[FilesCollection] [FileCursor] [get(\" + property + \")]\");\n    if (property) {\n      return this._fileRef[property];\n    } else {\n      return this._fileRef;\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FileCursor\n  @name fetch\n  @summary Returns document as plain Object in Array\n  @returns {[Object]}\n   */\n\n  FileCursor.prototype.fetch = function() {\n    this._collection._debug('[FilesCollection] [FileCursor] [fetch()]');\n    return [this._fileRef];\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FileCursor\n  @name with\n  @summary Returns reactive version of current FileCursor, useful to use with `{{#with}}...{{/with}}` block template helper\n  @returns {[Object]}\n   */\n\n  FileCursor.prototype[\"with\"] = function() {\n    var self;\n    this._collection._debug('[FilesCollection] [FileCursor] [with()]');\n    self = this;\n    return _.extend(self, this._collection.collection.findOne(this._fileRef._id));\n  };\n\n  return FileCursor;\n\n})();\n\n\n/*\n@private\n@locus Anywhere\n@class FilesCursor\n@param _selector   {String|Object}   - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n@param options     {Object}          - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#selectors)\n@param _collection {FilesCollection} - FilesCollection Instance\n@summary Implementation of Cursor for FilesCollection\n */\n\nFilesCursor = (function() {\n  function FilesCursor(_selector, options, _collection) {\n    this._selector = _selector != null ? _selector : {};\n    this._collection = _collection;\n    this._current = -1;\n    this.cursor = this._collection.collection.find(this._selector, options);\n  }\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name get\n  @summary Returns all matching document(s) as an Array. Alias of `.fetch()`\n  @returns {[Object]}\n   */\n\n  FilesCursor.prototype.get = function() {\n    this._collection._debug(\"[FilesCollection] [FilesCursor] [get()]\");\n    return this.cursor.fetch();\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name hasNext\n  @summary Returns `true` if there is next item available on Cursor\n  @returns {Boolean}\n   */\n\n  FilesCursor.prototype.hasNext = function() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [hasNext()]');\n    return this._current < this.cursor.count() - 1;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name next\n  @summary Returns next item on Cursor, if available\n  @returns {Object|undefined}\n   */\n\n  FilesCursor.prototype.next = function() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [next()]');\n    if (this.hasNext()) {\n      return this.cursor.fetch()[++this._current];\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name hasPrevious\n  @summary Returns `true` if there is previous item available on Cursor\n  @returns {Boolean}\n   */\n\n  FilesCursor.prototype.hasPrevious = function() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [hasPrevious()]');\n    return this._current !== -1;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name previous\n  @summary Returns previous item on Cursor, if available\n  @returns {Object|undefined}\n   */\n\n  FilesCursor.prototype.previous = function() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [previous()]');\n    if (this.hasPrevious()) {\n      return this.cursor.fetch()[--this._current];\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name fetch\n  @summary Returns all matching document(s) as an Array.\n  @returns {[Object]}\n   */\n\n  FilesCursor.prototype.fetch = function() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [fetch()]');\n    return this.cursor.fetch();\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name first\n  @summary Returns first item on Cursor, if available\n  @returns {Object|undefined}\n   */\n\n  FilesCursor.prototype.first = function() {\n    var ref;\n    this._collection._debug('[FilesCollection] [FilesCursor] [first()]');\n    this._current = 0;\n    return (ref = this.fetch()) != null ? ref[this._current] : void 0;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name last\n  @summary Returns last item on Cursor, if available\n  @returns {Object|undefined}\n   */\n\n  FilesCursor.prototype.last = function() {\n    var ref;\n    this._collection._debug('[FilesCollection] [FilesCursor] [last()]');\n    this._current = this.count() - 1;\n    return (ref = this.fetch()) != null ? ref[this._current] : void 0;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name count\n  @summary Returns the number of documents that match a query\n  @returns {Number}\n   */\n\n  FilesCursor.prototype.count = function() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [count()]');\n    return this.cursor.count();\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name remove\n  @param callback {Function} - Triggered asynchronously after item is removed or failed to be removed\n  @summary Removes all documents that match a query\n  @returns {FilesCursor}\n   */\n\n  FilesCursor.prototype.remove = function(callback) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [remove()]');\n    this._collection.remove(this._selector, callback);\n    return this;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name forEach\n  @param callback {Function} - Function to call. It will be called with three arguments: the `file`, a 0-based index, and cursor itself\n  @param context {Object} - An object which will be the value of `this` inside `callback`\n  @summary Call `callback` once for each matching document, sequentially and synchronously.\n  @returns {undefined}\n   */\n\n  FilesCursor.prototype.forEach = function(callback, context) {\n    if (context == null) {\n      context = {};\n    }\n    this._collection._debug('[FilesCollection] [FilesCursor] [forEach()]');\n    this.cursor.forEach(callback, context);\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name each\n  @summary Returns an Array of FileCursor made for each document on current cursor\n           Useful when using in {{#each FilesCursor#each}}...{{/each}} block template helper\n  @returns {[FileCursor]}\n   */\n\n  FilesCursor.prototype.each = function() {\n    var self;\n    self = this;\n    return this.map(function(file) {\n      return new FileCursor(file, self._collection);\n    });\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name map\n  @param callback {Function} - Function to call. It will be called with three arguments: the `file`, a 0-based index, and cursor itself\n  @param context {Object} - An object which will be the value of `this` inside `callback`\n  @summary Map `callback` over all matching documents. Returns an Array.\n  @returns {Array}\n   */\n\n  FilesCursor.prototype.map = function(callback, context) {\n    if (context == null) {\n      context = {};\n    }\n    this._collection._debug('[FilesCollection] [FilesCursor] [map()]');\n    return this.cursor.map(callback, context);\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name current\n  @summary Returns current item on Cursor, if available\n  @returns {Object|undefined}\n   */\n\n  FilesCursor.prototype.current = function() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [current()]');\n    if (this._current < 0) {\n      this._current = 0;\n    }\n    return this.fetch()[this._current];\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name observe\n  @param callbacks {Object} - Functions to call to deliver the result set as it changes\n  @summary Watch a query. Receive callbacks as the result set changes.\n  @url http://docs.meteor.com/api/collections.html#Mongo-Cursor-observe\n  @returns {Object} - live query handle\n   */\n\n  FilesCursor.prototype.observe = function(callbacks) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [observe()]');\n    return this.cursor.observe(callbacks);\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name observeChanges\n  @param callbacks {Object} - Functions to call to deliver the result set as it changes\n  @summary Watch a query. Receive callbacks as the result set changes. Only the differences between the old and new documents are passed to the callbacks.\n  @url http://docs.meteor.com/api/collections.html#Mongo-Cursor-observeChanges\n  @returns {Object} - live query handle\n   */\n\n  FilesCursor.prototype.observeChanges = function(callbacks) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [observeChanges()]');\n    return this.cursor.observeChanges(callbacks);\n  };\n\n  return FilesCursor;\n\n})();\n\nexport { FilesCursor, FileCursor };\n","###\n@private\n@locus Anywhere\n@class FileCursor\n@param _fileRef    {Object} - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n@param _collection {FilesCollection} - FilesCollection Instance\n@summary Internal class, represents each record in `FilesCursor.each()` or document returned from `.findOne()` method\n###\nclass FileCursor\n  constructor: (@_fileRef, @_collection) ->\n    self = @\n    self = _.extend self, @_fileRef\n\n  ###\n  @locus Anywhere\n  @memberOf FileCursor\n  @name remove\n  @param callback {Function} - Triggered asynchronously after item is removed or failed to be removed\n  @summary Remove document\n  @returns {FileCursor}\n  ###\n  remove: (callback) ->\n    @_collection._debug '[FilesCollection] [FileCursor] [remove()]'\n    if @_fileRef\n      @_collection.remove(@_fileRef._id, callback)\n    else\n      callback and callback new Meteor.Error 404, 'No such file'\n    return @\n\n  ###\n  @locus Anywhere\n  @memberOf FileCursor\n  @name link\n  @param version {String} - Name of file's subversion\n  @summary Returns downloadable URL to File\n  @returns {String}\n  ###\n  link: (version = 'original') ->\n    @_collection._debug \"[FilesCollection] [FileCursor] [link(#{version})]\"\n    return if @_fileRef then @_collection.link(@_fileRef, version) else ''\n\n  ###\n  @locus Anywhere\n  @memberOf FileCursor\n  @name get\n  @param property {String} - Name of sub-object property\n  @summary Returns current document as a plain Object, if `property` is specified - returns value of sub-object property\n  @returns {Object|mix}\n  ###\n  get: (property) ->\n    @_collection._debug \"[FilesCollection] [FileCursor] [get(#{property})]\"\n    if property\n      return @_fileRef[property]\n    else\n      return @_fileRef\n\n  ###\n  @locus Anywhere\n  @memberOf FileCursor\n  @name fetch\n  @summary Returns document as plain Object in Array\n  @returns {[Object]}\n  ###\n  fetch: ->\n    @_collection._debug '[FilesCollection] [FileCursor] [fetch()]'\n    return [@_fileRef]\n\n  ###\n  @locus Anywhere\n  @memberOf FileCursor\n  @name with\n  @summary Returns reactive version of current FileCursor, useful to use with `{{#with}}...{{/with}}` block template helper\n  @returns {[Object]}\n  ###\n  with: ->\n    @_collection._debug '[FilesCollection] [FileCursor] [with()]'\n    self = @\n    return _.extend self, @_collection.collection.findOne @_fileRef._id\n\n###\n@private\n@locus Anywhere\n@class FilesCursor\n@param _selector   {String|Object}   - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n@param options     {Object}          - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#selectors)\n@param _collection {FilesCollection} - FilesCollection Instance\n@summary Implementation of Cursor for FilesCollection\n###\nclass FilesCursor\n  constructor: (@_selector = {}, options, @_collection) ->\n    @_current = -1\n    @cursor   = @_collection.collection.find @_selector, options\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name get\n  @summary Returns all matching document(s) as an Array. Alias of `.fetch()`\n  @returns {[Object]}\n  ###\n  get: ->\n    @_collection._debug \"[FilesCollection] [FilesCursor] [get()]\"\n    return @cursor.fetch()\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name hasNext\n  @summary Returns `true` if there is next item available on Cursor\n  @returns {Boolean}\n  ###\n  hasNext: ->\n    @_collection._debug '[FilesCollection] [FilesCursor] [hasNext()]'\n    return @_current < @cursor.count() - 1\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name next\n  @summary Returns next item on Cursor, if available\n  @returns {Object|undefined}\n  ###\n  next: ->\n    @_collection._debug '[FilesCollection] [FilesCursor] [next()]'\n    if @hasNext()\n      return @cursor.fetch()[++@_current]\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name hasPrevious\n  @summary Returns `true` if there is previous item available on Cursor\n  @returns {Boolean}\n  ###\n  hasPrevious: ->\n    @_collection._debug '[FilesCollection] [FilesCursor] [hasPrevious()]'\n    return @_current isnt -1\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name previous\n  @summary Returns previous item on Cursor, if available\n  @returns {Object|undefined}\n  ###\n  previous: ->\n    @_collection._debug '[FilesCollection] [FilesCursor] [previous()]'\n    if @hasPrevious()\n      return @cursor.fetch()[--@_current]\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name fetch\n  @summary Returns all matching document(s) as an Array.\n  @returns {[Object]}\n  ###\n  fetch: ->\n    @_collection._debug '[FilesCollection] [FilesCursor] [fetch()]'\n    return @cursor.fetch()\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name first\n  @summary Returns first item on Cursor, if available\n  @returns {Object|undefined}\n  ###\n  first: ->\n    @_collection._debug '[FilesCollection] [FilesCursor] [first()]'\n    @_current = 0\n    return @fetch()?[@_current]\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name last\n  @summary Returns last item on Cursor, if available\n  @returns {Object|undefined}\n  ###\n  last: ->\n    @_collection._debug '[FilesCollection] [FilesCursor] [last()]'\n    @_current = @count() - 1\n    return @fetch()?[@_current]\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name count\n  @summary Returns the number of documents that match a query\n  @returns {Number}\n  ###\n  count: ->\n    @_collection._debug '[FilesCollection] [FilesCursor] [count()]'\n    return @cursor.count()\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name remove\n  @param callback {Function} - Triggered asynchronously after item is removed or failed to be removed\n  @summary Removes all documents that match a query\n  @returns {FilesCursor}\n  ###\n  remove: (callback) ->\n    @_collection._debug '[FilesCollection] [FilesCursor] [remove()]'\n    @_collection.remove @_selector, callback\n    return @\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name forEach\n  @param callback {Function} - Function to call. It will be called with three arguments: the `file`, a 0-based index, and cursor itself\n  @param context {Object} - An object which will be the value of `this` inside `callback`\n  @summary Call `callback` once for each matching document, sequentially and synchronously.\n  @returns {undefined}\n  ###\n  forEach: (callback, context = {}) ->\n    @_collection._debug '[FilesCollection] [FilesCursor] [forEach()]'\n    @cursor.forEach callback, context\n    return\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name each\n  @summary Returns an Array of FileCursor made for each document on current cursor\n           Useful when using in {{#each FilesCursor#each}}...{{/each}} block template helper\n  @returns {[FileCursor]}\n  ###\n  each: ->\n    self = @\n    return @map (file) ->\n      return new FileCursor file, self._collection\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name map\n  @param callback {Function} - Function to call. It will be called with three arguments: the `file`, a 0-based index, and cursor itself\n  @param context {Object} - An object which will be the value of `this` inside `callback`\n  @summary Map `callback` over all matching documents. Returns an Array.\n  @returns {Array}\n  ###\n  map: (callback, context = {}) ->\n    @_collection._debug '[FilesCollection] [FilesCursor] [map()]'\n    return @cursor.map callback, context\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name current\n  @summary Returns current item on Cursor, if available\n  @returns {Object|undefined}\n  ###\n  current: ->\n    @_collection._debug '[FilesCollection] [FilesCursor] [current()]'\n    @_current = 0 if @_current < 0\n    return @fetch()[@_current]\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name observe\n  @param callbacks {Object} - Functions to call to deliver the result set as it changes\n  @summary Watch a query. Receive callbacks as the result set changes.\n  @url http://docs.meteor.com/api/collections.html#Mongo-Cursor-observe\n  @returns {Object} - live query handle\n  ###\n  observe: (callbacks) ->\n    @_collection._debug '[FilesCollection] [FilesCursor] [observe()]'\n    return @cursor.observe callbacks\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name observeChanges\n  @param callbacks {Object} - Functions to call to deliver the result set as it changes\n  @summary Watch a query. Receive callbacks as the result set changes. Only the differences between the old and new documents are passed to the callbacks.\n  @url http://docs.meteor.com/api/collections.html#Mongo-Cursor-observeChanges\n  @returns {Object} - live query handle\n  ###\n  observeChanges: (callbacks) ->\n    @_collection._debug '[FilesCollection] [FilesCursor] [observeChanges()]'\n    return @cursor.observeChanges callbacks\n\n`export { FilesCursor, FileCursor }`","\n/*\n@var {Function} fixJSONParse - Fix issue with Date parse\n */\nvar fixJSONParse, fixJSONStringify, formatFleURL;\n\nfixJSONParse = function(obj) {\n  var i, j, key, len, v, value;\n  for (key in obj) {\n    value = obj[key];\n    if (_.isString(value) && !!~value.indexOf('=--JSON-DATE--=')) {\n      value = value.replace('=--JSON-DATE--=', '');\n      obj[key] = new Date(parseInt(value));\n    } else if (_.isObject(value)) {\n      obj[key] = fixJSONParse(value);\n    } else if (_.isArray(value)) {\n      for (i = j = 0, len = value.length; j < len; i = ++j) {\n        v = value[i];\n        if (_.isObject(v)) {\n          obj[key][i] = fixJSONParse(v);\n        } else if (_.isString(v) && !!~v.indexOf('=--JSON-DATE--=')) {\n          v = v.replace('=--JSON-DATE--=', '');\n          obj[key][i] = new Date(parseInt(v));\n        }\n      }\n    }\n  }\n  return obj;\n};\n\n\n/*\n@var {Function} fixJSONStringify - Fix issue with Date stringify\n */\n\nfixJSONStringify = function(obj) {\n  var i, j, key, len, v, value;\n  for (key in obj) {\n    value = obj[key];\n    if (_.isDate(value)) {\n      obj[key] = '=--JSON-DATE--=' + (+value);\n    } else if (_.isObject(value)) {\n      obj[key] = fixJSONStringify(value);\n    } else if (_.isArray(value)) {\n      for (i = j = 0, len = value.length; j < len; i = ++j) {\n        v = value[i];\n        if (_.isObject(v)) {\n          obj[key][i] = fixJSONStringify(v);\n        } else if (_.isDate(v)) {\n          obj[key][i] = '=--JSON-DATE--=' + (+v);\n        }\n      }\n    }\n  }\n  return obj;\n};\n\n\n/*\n@locus Anywhere\n@private\n@name formatFleURL\n@param {Object} fileRef - File reference object\n@param {String} version - [Optional] Version of file you would like build URL for\n@summary Returns formatted URL for file\n@returns {String} Downloadable link\n */\n\nformatFleURL = function(fileRef, version) {\n  var ext, ref, root, vRef;\n  if (version == null) {\n    version = 'original';\n  }\n  check(fileRef, Object);\n  check(version, String);\n  root = __meteor_runtime_config__.ROOT_URL.replace(/\\/+$/, '');\n  vRef = (fileRef.versions && fileRef.versions[version]) || fileRef;\n  if ((ref = vRef.extension) != null ? ref.length : void 0) {\n    ext = '.' + vRef.extension.replace(/^\\./, '');\n  } else {\n    ext = '';\n  }\n  if (fileRef[\"public\"] === true) {\n    return root + (version === 'original' ? fileRef._downloadRoute + \"/\" + fileRef._id + ext : fileRef._downloadRoute + \"/\" + version + \"-\" + fileRef._id + ext);\n  } else {\n    return root + (fileRef._downloadRoute + \"/\" + fileRef._collectionName + \"/\" + fileRef._id + \"/\" + version + \"/\" + fileRef._id + ext);\n  }\n};\n\nexport { fixJSONParse, fixJSONStringify, formatFleURL };\n","###\n@var {Function} fixJSONParse - Fix issue with Date parse\n###\nfixJSONParse = (obj) ->\n  for key, value of obj\n    if _.isString(value) and !!~value.indexOf '=--JSON-DATE--='\n      value = value.replace '=--JSON-DATE--=', ''\n      obj[key] = new Date parseInt value\n    else if _.isObject value\n      obj[key] = fixJSONParse value\n    else if _.isArray value\n      for v, i in value\n        if _.isObject(v)\n          obj[key][i] = fixJSONParse v\n        else if _.isString(v) and !!~v.indexOf '=--JSON-DATE--='\n          v = v.replace '=--JSON-DATE--=', ''\n          obj[key][i] = new Date parseInt v\n  return obj\n\n###\n@var {Function} fixJSONStringify - Fix issue with Date stringify\n###\nfixJSONStringify = (obj) ->\n  for key, value of obj\n    if _.isDate value\n      obj[key] = '=--JSON-DATE--=' + (+value)\n    else if _.isObject value\n      obj[key] = fixJSONStringify value\n    else if _.isArray value\n      for v, i in value\n        if _.isObject(v)\n          obj[key][i] = fixJSONStringify v\n        else if _.isDate v\n          obj[key][i] = '=--JSON-DATE--=' + (+v)\n  return obj\n\n###\n@locus Anywhere\n@private\n@name formatFleURL\n@param {Object} fileRef - File reference object\n@param {String} version - [Optional] Version of file you would like build URL for\n@summary Returns formatted URL for file\n@returns {String} Downloadable link\n###\nformatFleURL = (fileRef, version = 'original') ->\n  check fileRef, Object\n  check version, String\n\n  root = __meteor_runtime_config__.ROOT_URL.replace(/\\/+$/, '')\n  vRef = ((fileRef.versions and fileRef.versions[version]) or fileRef)\n\n  if vRef.extension?.length\n    ext = '.' + vRef.extension.replace(/^\\./, '')\n  else\n    ext = ''\n\n  if fileRef.public is true\n    return root + (if version is 'original' then \"#{fileRef._downloadRoute}/#{fileRef._id}#{ext}\" else \"#{fileRef._downloadRoute}/#{version}-#{fileRef._id}#{ext}\")\n  else\n    return root + \"#{fileRef._downloadRoute}/#{fileRef._collectionName}/#{fileRef._id}/#{version}/#{fileRef._id}#{ext}\"\n\n`export { fixJSONParse, fixJSONStringify, formatFleURL }`","`import fs from 'fs-extra'`\nNOOP = -> return\n\n###\n@var {Object} bound - Meteor.bindEnvironment (Fiber wrapper)\n###\nbound   = Meteor.bindEnvironment (callback) -> return callback()\nfdCache = {}\n\n###\n@private\n@locus Server\n@class writeStream\n@param path      {String} - Path to file on FS\n@param maxLength {Number} - Max amount of chunks in stream\n@param file      {Object} - fileRef Object\n@summary writableStream wrapper class, makes sure chunks is written in given order. Implementation of queue stream.\n###\nclass writeStream\n  constructor: (@path, @maxLength, @file, @permissions) ->\n    if not @path or not _.isString @path\n      return\n\n    self           = @\n    @fd            = null\n    @writtenChunks = 0\n    @ended         = false\n    @aborted       = false\n\n    if fdCache[@path] && !fdCache[@path].ended && !fdCache[@path].aborted\n      @fd = fdCache[@path].fd\n      @writtenChunks = fdCache[@path].writtenChunks\n    else\n      fs.ensureFile @path, (efError) -> bound ->\n        if efError\n          throw new Meteor.Error 500, '[FilesCollection] [writeStream] [ensureFile] [Error:]', efError\n        else\n          fs.open self.path, 'r+', self.permissions, (oError, fd) -> bound ->\n            if oError\n              throw new Meteor.Error 500, '[FilesCollection] [writeStream] [ensureFile] [open] [Error:]', oError\n            else\n              self.fd = fd\n              fdCache[self.path] = self\n            return\n        return\n\n  ###\n  @memberOf writeStream\n  @name write\n  @param {Number} num - Chunk position in a stream\n  @param {Buffer} chunk - Buffer (chunk binary data)\n  @param {Function} callback - Callback\n  @summary Write chunk in given order\n  @returns {Boolean} - True if chunk is sent to stream, false if chunk is set into queue\n  ###\n  write: (num, chunk, callback) ->\n    if not @aborted and not @ended\n      self = @\n      if @fd\n        fs.write @fd, chunk, 0, chunk.length, (num - 1) * @file.chunkSize, (error, written, buffer) -> bound ->\n          callback and callback(error, written, buffer)\n          if error\n            console.warn '[FilesCollection] [writeStream] [write] [Error:]', error\n            self.abort()\n          else\n            ++self.writtenChunks\n          return\n      else\n        Meteor.setTimeout ->\n          self.write num, chunk, callback\n          return\n        , 25\n    return false\n\n  ###\n  @memberOf writeStream\n  @name end\n  @param {Function} callback - Callback\n  @summary Finishes writing to writableStream, only after all chunks in queue is written\n  @returns {Boolean} - True if stream is fulfilled, false if queue is in progress\n  ###\n  end: (callback) ->\n    if not @aborted and not @ended\n      if @writtenChunks is @maxLength\n        self = @\n        fs.close @fd, -> bound ->\n          delete fdCache[@path]\n          self.ended = true\n          callback and callback(undefined, true)\n          return\n        return true\n      else\n        self = @\n        fs.stat self.path, (error, stat) -> bound ->\n          if not error and stat\n            self.writtenChunks = Math.ceil stat.size / self.file.chunkSize\n\n          Meteor.setTimeout ->\n            self.end callback\n            return\n          , 25\n    else\n      callback and callback(undefined, @ended)\n    return false\n\n  ###\n  @memberOf writeStream\n  @name abort\n  @param {Function} callback - Callback\n  @summary Aborts writing to writableStream, removes created file\n  @returns {Boolean} - True\n  ###\n  abort: (callback) ->\n    @aborted = true\n    delete fdCache[@path]\n    fs.unlink @path, (callback or NOOP)\n    return true\n\n  ###\n  @memberOf writeStream\n  @name stop\n  @summary Stop writing to writableStream\n  @returns {Boolean} - True\n  ###\n  stop: ->\n    @aborted = true\n    delete fdCache[@path]\n    return true\n\n`export { writeStream }`\n","import fs from 'fs-extra';\nvar NOOP, bound, fdCache, writeStream;\n\nNOOP = function() {};\n\n\n/*\n@var {Object} bound - Meteor.bindEnvironment (Fiber wrapper)\n */\n\nbound = Meteor.bindEnvironment(function(callback) {\n  return callback();\n});\n\nfdCache = {};\n\n\n/*\n@private\n@locus Server\n@class writeStream\n@param path      {String} - Path to file on FS\n@param maxLength {Number} - Max amount of chunks in stream\n@param file      {Object} - fileRef Object\n@summary writableStream wrapper class, makes sure chunks is written in given order. Implementation of queue stream.\n */\n\nwriteStream = (function() {\n  function writeStream(path, maxLength, file, permissions) {\n    var self;\n    this.path = path;\n    this.maxLength = maxLength;\n    this.file = file;\n    this.permissions = permissions;\n    if (!this.path || !_.isString(this.path)) {\n      return;\n    }\n    self = this;\n    this.fd = null;\n    this.writtenChunks = 0;\n    this.ended = false;\n    this.aborted = false;\n    if (fdCache[this.path] && !fdCache[this.path].ended && !fdCache[this.path].aborted) {\n      this.fd = fdCache[this.path].fd;\n      this.writtenChunks = fdCache[this.path].writtenChunks;\n    } else {\n      fs.ensureFile(this.path, function(efError) {\n        return bound(function() {\n          if (efError) {\n            throw new Meteor.Error(500, '[FilesCollection] [writeStream] [ensureFile] [Error:]', efError);\n          } else {\n            fs.open(self.path, 'r+', self.permissions, function(oError, fd) {\n              return bound(function() {\n                if (oError) {\n                  throw new Meteor.Error(500, '[FilesCollection] [writeStream] [ensureFile] [open] [Error:]', oError);\n                } else {\n                  self.fd = fd;\n                  fdCache[self.path] = self;\n                }\n              });\n            });\n          }\n        });\n      });\n    }\n  }\n\n\n  /*\n  @memberOf writeStream\n  @name write\n  @param {Number} num - Chunk position in a stream\n  @param {Buffer} chunk - Buffer (chunk binary data)\n  @param {Function} callback - Callback\n  @summary Write chunk in given order\n  @returns {Boolean} - True if chunk is sent to stream, false if chunk is set into queue\n   */\n\n  writeStream.prototype.write = function(num, chunk, callback) {\n    var self;\n    if (!this.aborted && !this.ended) {\n      self = this;\n      if (this.fd) {\n        fs.write(this.fd, chunk, 0, chunk.length, (num - 1) * this.file.chunkSize, function(error, written, buffer) {\n          return bound(function() {\n            callback && callback(error, written, buffer);\n            if (error) {\n              console.warn('[FilesCollection] [writeStream] [write] [Error:]', error);\n              self.abort();\n            } else {\n              ++self.writtenChunks;\n            }\n          });\n        });\n      } else {\n        Meteor.setTimeout(function() {\n          self.write(num, chunk, callback);\n        }, 25);\n      }\n    }\n    return false;\n  };\n\n\n  /*\n  @memberOf writeStream\n  @name end\n  @param {Function} callback - Callback\n  @summary Finishes writing to writableStream, only after all chunks in queue is written\n  @returns {Boolean} - True if stream is fulfilled, false if queue is in progress\n   */\n\n  writeStream.prototype.end = function(callback) {\n    var self;\n    if (!this.aborted && !this.ended) {\n      if (this.writtenChunks === this.maxLength) {\n        self = this;\n        fs.close(this.fd, function() {\n          return bound(function() {\n            delete fdCache[this.path];\n            self.ended = true;\n            callback && callback(void 0, true);\n          });\n        });\n        return true;\n      } else {\n        self = this;\n        fs.stat(self.path, function(error, stat) {\n          return bound(function() {\n            if (!error && stat) {\n              self.writtenChunks = Math.ceil(stat.size / self.file.chunkSize);\n            }\n            return Meteor.setTimeout(function() {\n              self.end(callback);\n            }, 25);\n          });\n        });\n      }\n    } else {\n      callback && callback(void 0, this.ended);\n    }\n    return false;\n  };\n\n\n  /*\n  @memberOf writeStream\n  @name abort\n  @param {Function} callback - Callback\n  @summary Aborts writing to writableStream, removes created file\n  @returns {Boolean} - True\n   */\n\n  writeStream.prototype.abort = function(callback) {\n    this.aborted = true;\n    delete fdCache[this.path];\n    fs.unlink(this.path, callback || NOOP);\n    return true;\n  };\n\n\n  /*\n  @memberOf writeStream\n  @name stop\n  @summary Stop writing to writableStream\n  @returns {Boolean} - True\n   */\n\n  writeStream.prototype.stop = function() {\n    this.aborted = true;\n    delete fdCache[this.path];\n    return true;\n  };\n\n  return writeStream;\n\n})();\n\nexport { writeStream };\n"]}