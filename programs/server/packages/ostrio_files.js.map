{"version":3,"sources":["meteor://ðŸ’»app/packages/ostrio_files/files.coffee"],"names":[],"mappings":"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","file":"/packages/ostrio_files.js","sourcesContent":["if Meteor.isServer\n  ###\n  @description Require \"fs-extra\" npm package\n  ###\n  fs       = Npm.require 'fs-extra'\n  request  = Npm.require 'request'\n  Throttle = Npm.require 'throttle'\n  Fiber    = Npm.require 'Fibers'\n  Future   = Npm.require 'Fibers/Future'\n  util     = Npm.require 'util'\n  NOOP     = -> return\n\n  ###\n  @var {object} bound - Meteor.bindEnvironment aka Fiber wrapper\n  ###\n  bound = Meteor.bindEnvironment (callback) -> return callback()\n\n###\n@private\n@object\n@name _insts\n@description Object of Meteor.Files instances\n###\n_insts = {}\n\n###\n@private\n@function\n@name rcp\n@param {Object} obj - Initial object\n@description Create object with only needed props\n###\nrcp = (obj) ->\n  o =\n    currentFile:    obj.currentFile\n    search:         obj.search\n    storagePath:    obj.storagePath\n    collectionName: obj.collectionName\n    downloadRoute:  obj.downloadRoute\n    chunkSize:      obj.chunkSize\n    debug:          obj.debug\n    _prefix:        obj._prefix\n    cacheControl:   obj.cacheControl\n    versions:       obj.versions\n  return o\n\n###\n@private\n@function\n@name cp\n@param {Object} to   - Destanation\n@param {Object} from - Source\n@description Copy-Paste only needed props from one to another object\n###\ncp = (to, from) ->\n  to.currentFile    = from.currentFile\n  to.search         = from.search\n  to.storagePath    = from.storagePath\n  to.collectionName = from.collectionName\n  to.downloadRoute  = from.downloadRoute\n  to.chunkSize      = from.chunkSize\n  to.debug          = from.debug\n  to._prefix        = from._prefix\n  to.cacheControl   = from.cacheControl\n  to.versions       = from.versions\n  return to\n\n###\n@isomorphic\n@class\n@namespace Meteor\n@name Files\n@param config           {Object}   - Configuration object with next properties:\n@param config.debug     {Boolean}  - Turn on/of debugging and extra logging\n@param config.schema    {Object}   - Collection Schema\n@param config.public    {Boolean}  - Store files in folder accessible for proxy servers, for limits, and more - read docs\n@param config.strict    {Boolean}  - Strict mode for partial content, if is `true` server will return `416` response code, when `range` is not specified, otherwise server return `206`\n@param config.protected {Function} - If `true` - files will be served only to authorized users, if `function()` - you're able to check visitor's permissions in your own way function's context has:\n  - `request` - On server only\n  - `response` - On server only\n  - `user()`\n  - `userId`\n@param config.chunkSize      {Number}  - Upload chunk size, default: 524288 bytes (0,5 Mb)\n@param config.permissions    {Number}  - Permissions which will be set to uploaded files, like: `511` or `0o755`\n@param config.storagePath    {String}  - Storage path on file system\n@param config.cacheControl   {String}  - Default `Cache-Control` header\n@param config.throttle       {Number}  - bps throttle threshold\n@param config.downloadRoute  {String}  - Server Route used to retrieve files\n@param config.collectionName {String}  - Collection name\n@param config.namingFunction {Function}- Function which returns `String`\n@param config.integrityCheck {Boolean} - Check file's integrity before serving to users\n@param config.onBeforeUpload {Function}- Function which executes on server after receiving each chunk and on client right before beginning upload. Function context is `File` - so you are able to check for extension, mime-type, size and etc.\nreturn `true` to continue\nreturn `false` or `String` to abort upload\n@param config.allowClientCode  {Boolean}  - Allow to run `remove` from client\n@param config.downloadCallback {Function} - Callback triggered each time file is requested, return truthy value to continue download, or falsy to abort\n@param config.onbeforeunloadMessage {String|Function} - Message shown to user when closing browser's window or tab while upload process is running\n@description Create new instance of Meteor.Files\n###\nclass Meteor.Files\n  constructor: (config) ->\n    {@storagePath, @collectionName, @downloadRoute, @schema, @chunkSize, @namingFunction, @debug, @onbeforeunloadMessage, @permissions, @allowClientCode, @onBeforeUpload, @integrityCheck, @protected, @public, @strict, @downloadCallback, @cacheControl, @throttle} = config if config\n\n    self               = @\n    @debug            ?= false\n    @public           ?= false\n    @strict           ?= true\n    @protected        ?= false\n    @chunkSize        ?= 1024*512\n    @chunkSize         = Math.floor(@chunkSize / 8) * 8\n    @permissions      ?= 0o755\n    @cacheControl     ?= 'public, max-age=31536000, s-maxage=31536000'\n    @collectionName   ?= 'MeteorUploadFiles'\n    @namingFunction   ?= -> Random.id()\n    @integrityCheck   ?= true\n    @onBeforeUpload   ?= false\n    @allowClientCode  ?= true\n    @downloadCallback ?= false\n    @onbeforeunloadMessage ?= 'Upload in a progress... Do you want to abort?'\n    @throttle         ?= false\n\n    cookie = new Cookies()\n    if @protected and Meteor.isClient\n      if not cookie.has('meteor_login_token') and Meteor._localStorage.getItem('Meteor.loginToken')\n        cookie.set 'meteor_login_token', Meteor._localStorage.getItem('Meteor.loginToken'), null, '/'\n\n    if not @storagePath\n      @storagePath   = if @public then \"../web.browser/app/uploads/#{@collectionName}\" else \"assets/app/uploads/#{@collectionName}\"\n      @downloadRoute = if @public then \"/uploads/#{@collectionName}\" else '/cdn/storage' if not @downloadRoute\n    \n    if not @downloadRoute\n      @downloadRoute = '/cdn/storage'\n\n\n    if not @schema\n      @schema =\n        size: type: Number\n        name: type: String\n        type: type: String\n        path: type: String\n        isVideo: type: Boolean\n        isAudio: type: Boolean\n        isImage: type: Boolean\n        _prefix: type: String\n        extension:\n          type: String\n          optional: true\n        _storagePath: type: String\n        _downloadRoute: type: String\n        _collectionName: type: String\n        meta:\n          type: Object\n          blackbox: true\n          optional: true\n        userId:\n          type: String\n          optional: true\n        updatedAt: \n          type: Date\n          autoValue: -> new Date()\n        versions:\n          type: Object\n          blackbox: true\n\n    check @debug, Boolean\n    check @schema, Object\n    check @public, Boolean\n    check @strict, Boolean\n    check @throttle, Match.OneOf false, Number\n    check @protected, Match.OneOf Boolean, Function\n    check @chunkSize, Number\n    check @permissions, Number\n    check @storagePath, String\n    check @downloadRoute, String\n    check @integrityCheck, Boolean\n    check @collectionName, String\n    check @namingFunction, Function\n    check @onBeforeUpload, Match.OneOf Boolean, Function\n    check @allowClientCode, Boolean\n    check @downloadCallback, Match.OneOf Boolean, Function\n    check @onbeforeunloadMessage, Match.OneOf String, Function\n\n    if @public and @protected\n      throw new Meteor.Error 500, \"[Meteor.File.#{@collectionName}]: Files can not be public and protected at the same time!\"\n    \n    @cursor        = null\n    @search        = {}\n    @collection    = new Mongo.Collection @collectionName\n    @currentFile   = null\n    @storagePath   = @storagePath.replace /\\/$/, ''\n    @downloadRoute = @downloadRoute.replace /\\/$/, ''\n\n    @collection.attachSchema @schema\n    @collection.deny\n      insert: -> true\n      update: -> true\n      remove: -> true\n    \n    @_prefix = SHA256 @collectionName + @storagePath + @downloadRoute\n    _insts[@_prefix] = @\n\n    @checkAccess = (http) ->\n      if self.protected\n        user = false\n        userFuncs = self.getUser http\n        {user, userId} = userFuncs\n        user = user()\n\n        if _.isFunction self.protected\n          result = if http then self.protected.call(_.extend(http, userFuncs), self.currentFile or null) else self.protected.call userFuncs, self.currentFile or null\n        else\n          result = !!user\n\n        if (http and result is true) or not http\n          return true\n        else\n          rc = if _.isNumber(result) then result else 401\n          console.warn 'Access denied!' if self.debug\n          if http\n            text = 'Access denied!'\n            http.response.writeHead rc,\n              'Content-Length': text.length\n              'Content-Type':   'text/plain'\n            http.response.end text\n          return false\n      else\n        return true\n\n    @methodNames =\n      MeteorFileAbort:  \"MeteorFileAbort#{@_prefix}\"\n      MeteorFileWrite:  \"MeteorFileWrite#{@_prefix}\"\n      MeteorFileUnlink: \"MeteorFileUnlink#{@_prefix}\"\n\n    if Meteor.isServer\n      WebApp.connectHandlers.use (request, response, next) ->\n        unless self.public\n          if !!~request._parsedUrl.path.indexOf \"#{self.downloadRoute}/#{self.collectionName}\"\n            uri = request._parsedUrl.path.replace \"#{self.downloadRoute}/#{self.collectionName}\", ''\n            if uri.indexOf('/') is 0\n              uri = uri.substring 1\n\n            uris = uri.split '/'\n            if uris.length is 3\n              params = \n                query: if request._parsedUrl.query then JSON.parse('{\"' + decodeURI(request._parsedUrl.query).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g,'\":\"') + '\"}') else {}\n                _id: uris[0]\n                version: uris[1]\n                name: uris[2]\n              http = {request, response, params}\n              self.findOne(uris[0]).download.call(self, http, uris[1]) if self.checkAccess http\n            else\n              next()\n          else\n            next()\n        else\n          if !!~request._parsedUrl.path.indexOf \"#{self.downloadRoute}\"\n            uri = request._parsedUrl.path.replace \"#{self.downloadRoute}\", ''\n            if uri.indexOf('/') is 0\n              uri = uri.substring 1\n\n            uris = uri.split '/'\n            if uris.length is 1\n              params = \n                query: if request._parsedUrl.query then JSON.parse('{\"' + decodeURI(request._parsedUrl.query).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g,'\":\"') + '\"}') else {}\n                file: uris[0]\n              http = {request, response, params}\n\n              if !!~params.file.indexOf '-'\n                version = params.file.split('-')[0]\n                self.download.call self, http, version\n              else\n                response.writeHead 404\n                response.end 'No such file :('\n            else\n              next()\n          else\n            next()\n\n      _methods = {}\n      _methods[self.methodNames.MeteorFileUnlink] = (inst) ->\n        check inst, Object\n        console.info 'Meteor.Files Debugger: [MeteorFileUnlink]' if self.debug\n        if self.allowClientCode\n          self.remove.call cp(_insts[inst._prefix], inst), inst.search\n        else\n          throw new Meteor.Error 401, '[Meteor.Files] [remove()] Run code from client is not allowed!'\n\n      _methods[self.methodNames.MeteorFileWrite] = (opts) ->\n        @unblock()\n        check opts, {\n          meta: Object\n          file: Object\n          fileId: String\n          binData: String\n          chunkId: Number\n          fileLength: Number\n          _binSize: Number\n          eof: Boolean\n        }\n\n        console.info \"Meteor.Files Debugger: [MeteorFileWrite] {name: #{opts.fileId}, meta:#{opts.meta}}\" if self.debug\n        console.info \"Meteor.Files Debugger: Received chunk ##{opts.chunkId} of #{opts.fileLength} chunks, file: #{opts.file.name or opts.file.fileName}\" if self.debug\n\n        if self.onBeforeUpload and _.isFunction self.onBeforeUpload\n          isUploadAllowed = self.onBeforeUpload.call {file: opts.file}, opts.file\n          if isUploadAllowed isnt true\n            throw new Meteor.Error(403, if _.isString(isUploadAllowed) then isUploadAllowed else '@onBeforeUpload() returned false')\n\n        fileName = self.getFileName opts.file\n        {extension, extensionWithDot} = self.getExt fileName\n\n        pathName = if self.public then \"#{self.storagePath}/original-#{opts.fileId}\" else \"#{self.storagePath}/#{opts.fileId}\"\n        path     = if self.public then \"#{self.storagePath}/original-#{opts.fileId}#{extensionWithDot}\" else \"#{self.storagePath}/#{opts.fileId}#{extensionWithDot}\"\n        pathPart = if opts.fileLength > 1 then \"#{pathName}_#{opts.chunkId}#{extensionWithDot}\" else path\n\n        result = _.extend self.dataToSchema(_.extend(opts.file, {path, extension, name: fileName, meta: opts.meta})), {_id: opts.fileId, chunkId: opts.chunkId, _binSize: opts._binSize}\n        \n        if opts.eof\n          fut = new Future()\n\n        Fiber( ->\n          binary = new Buffer opts.binData, 'base64'\n          tries  = 0\n          handleError = (e) ->\n            error = new Meteor.Error 500, 'Unfinished upload (probably caused by server reboot or aborted operation)', e\n            console.error error\n            return error\n\n          concatChunks = (num, files) ->\n            sindex = files.indexOf \"#{opts.fileId}_1#{extensionWithDot}\"\n            files.splice sindex, 1 if !!~sindex\n            findex = files.indexOf \"#{opts.fileId}_#{num}#{extensionWithDot}\"\n            if !!~findex\n              files.splice(findex, 1)\n            else\n              console.warn \"finish as no more files\", files, {sindex, findex}, \"#{opts.fileId}_#{num}#{extensionWithDot}\"\n              return finish()\n\n            _path   = \"#{pathName}_#{num}#{extensionWithDot}\"\n            _source = pathName + '_1' + extensionWithDot\n\n            fs.stat _path, (error, stats) -> bound ->\n              if error or not stats.isFile()\n                if tries >= 10\n                  fut.return new Meteor.Error 500, \"Chunk ##{num} is missing!\"\n                else\n                  tries++\n                  Meteor.setTimeout ->\n                    concatChunks num, files\n                  , 100\n              else\n                fs.readFile _path, (error, _chunkData) -> bound ->\n                  if error\n                    fut.return new Meteor.Error 500, \"Can't read #{_path}\"\n                  else\n                    fs.appendFile _source, _chunkData, (error) -> bound ->\n                      if error\n                        fut.return new Meteor.Error 500, \"Can't append #{_path} to #{_source}\"\n                      else\n                        fs.unlink _path, NOOP\n                        if files.length <= 0\n                          fs.rename _source, path, (error) -> bound ->\n                            if error\n                              fut.return new Meteor.Error 500, \"Can't rename #{_source} to #{path}\"\n                            else\n                              finish()\n                        else\n                          concatChunks ++num, files\n\n          finish = ->\n            fs.chmod path, self.permissions, NOOP\n            result.type = self.getMimeType opts.file\n\n            self.collection.insert _.clone(result), (error, _id) ->\n              if error\n                fut.return new Meteor.Error 500, error\n              else\n                result._id = _id\n                console.info \"Meteor.Files Debugger: The file #{fileName} (binary) was saved to #{path}\" if self.debug\n                fut.return result\n\n          cb = (error) -> bound -> handleError error if error\n\n          try\n            if opts.eof\n              if opts.fileLength > 1\n                fs.readdir self.storagePath, (error, files) -> bound ->\n                  if error\n                    fut.return new Meteor.Error 500, error\n                  else\n                    concatChunks 2, files.filter (f) -> !!~f.indexOf opts.fileId\n              else\n                finish()\n            else\n              fs.outputFile pathPart, binary, 'binary', cb\n          catch e\n            handleError e\n        ).run()\n\n        if opts.eof\n          result = fut.wait()\n          if result.error\n            throw result\n            return false\n          else\n            return result\n        else\n          return result\n\n      _methods[self.methodNames.MeteorFileAbort] = (opts) ->\n        check opts, {\n          fileId: String\n          fileData: Object\n          fileLength: Number\n        }\n\n        ext  = \".#{opts.fileData.ext}\"\n        path = if self.public then \"#{self.storagePath}/original-#{opts.fileId}\" else \"#{self.storagePath}/#{opts.fileId}\"\n\n        console.info \"Meteor.Files Debugger: Abort for #{path}\" if self.debug\n        if opts.fileLength > 1\n          i = 0\n          while i <= opts.fileLength\n            _path = \"#{path}_#{i}#{ext}\"\n            fs.stat _path, ((error, stats) -> bound =>\n              if not error and stats.isFile()\n                fs.unlink @_path, NOOP\n            ).bind({_path})\n            i++\n\n      Meteor.methods _methods\n\n  ###\n  Extend Meteor.Files with mime library\n  @url https://github.com/broofa/node-mime\n  @description Temporary removed from package due to unstability\n  ###\n  # fileType: if Meteor.isServer then Npm.require \"file-type\" else undefined\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name getMimeType\n  @param {Object} fileData - File Object\n  @description Returns file's mime-type\n  @returns {String}\n  ###\n  getMimeType: (fileData) ->\n    check fileData, Object\n    mime = fileData.type if fileData?.type\n    mime = 'application/octet-stream' if not mime or not _.isString mime\n    mime\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name getFileName\n  @param {Object} fileData - File Object\n  @description Returns file's name\n  @returns {String}\n  ###\n  getFileName: (fileData) ->\n    fileName = fileData.name or fileData.fileName\n    if _.isString(fileName) and fileName.length > 0\n      cleanName = (str) -> str.replace(/\\.\\./g, '').replace /\\//g, ''\n      return cleanName(fileData.name or fileData.fileName)\n    else\n      return ''\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name getUser\n  @description Returns object with `userId` and `user()` method which return user's object\n  @returns {Object}\n  ###\n  getUser: (http) ->\n    result = \n      user: -> return null\n      userId: null\n      \n    if Meteor.isServer\n      if http\n        cookie = http.request.Cookies\n        if _.has(Package, 'accounts-base') and cookie.has 'meteor_login_token'\n          user = Meteor.users.findOne 'services.resume.loginTokens.hashedToken': Accounts._hashLoginToken cookie.get 'meteor_login_token'\n          if user\n            result.user = () -> return user\n            result.userId = user._id\n    else\n      if _.has(Package, 'accounts-base') and Meteor.userId()\n        result.user = -> return Meteor.user()\n        result.userId = Meteor.userId()\n\n    return result\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name getExt\n  @param {String} FileName - File name\n  @description Get extension from FileName\n  @returns {Object}\n  ###\n  getExt: (fileName) ->\n    if !!~fileName.indexOf('.')\n      extension = fileName.split('.').pop()\n      return { ext: extension, extension, extensionWithDot: '.' + extension }\n    else\n      return { ext: '', extension: '', extensionWithDot: '' }\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name dataToSchema\n  @param {Object} data - File data\n  @description Build object in accordance with schema from File data\n  @returns {Object}\n  ###\n  dataToSchema: (data) ->\n    return {\n      name:       data.name\n      extension:  data.extension\n      path:       data.path\n      meta:       data.meta\n      type:       data.type\n      size:       data.size\n      versions:\n        original:\n          path: data.path\n          size: data.size\n          type: data.type\n          extension: data.extension\n      isVideo: !!~data.type.toLowerCase().indexOf('video')\n      isAudio: !!~data.type.toLowerCase().indexOf('audio')\n      isImage: !!~data.type.toLowerCase().indexOf('image')\n      _prefix: data._prefix or @_prefix\n      _storagePath:    data._storagePath or @storagePath\n      _downloadRoute:  data._downloadRoute or @downloadRoute\n      _collectionName: data._collectionName or @collectionName\n    }\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name srch\n  @param {String|Object} search - Search data\n  @description Build search object\n  @returns {Object}\n  ###\n  srch: (search) ->\n    if search and _.isString search\n      @search =\n        _id: search\n    else\n      @search = search\n    @search\n\n  ###\n  @server\n  @function\n  @class Meteor.Files\n  @name write\n  @param {Buffer} buffer - Binary File's Buffer\n  @param {Object} opts - {fileName: '', type: '', size: 0, meta: {...}}\n  @param {Function} callback - function(error, fileObj){...}\n  @description Write buffer to FS and add to Meteor.Files Collection\n  @returns {Files} - Returns current Meteor.Files instance\n  ###\n  write: if Meteor.isServer then (buffer, opts = {}, callback) ->\n    console.info \"Meteor.Files Debugger: [write(buffer, #{JSON.stringify(opts)}, callback)]\" if @debug\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n\n    if @checkAccess()\n      randFileName  = @namingFunction()\n      fileName      = if opts.name or opts.fileName then opts.name or opts.fileName else randFileName\n\n      {extension, extensionWithDot} = @getExt fileName\n\n      path      = if @public then \"#{@storagePath}/original-#{randFileName}#{extensionWithDot}\" else \"#{@storagePath}/#{randFileName}#{extensionWithDot}\"\n      \n      opts.type = @getMimeType opts\n      opts.meta = {} if not opts.meta\n      opts.size = buffer.length if not opts.size\n\n      result    = @dataToSchema\n        name:      fileName\n        path:      path\n        meta:      opts.meta\n        type:      opts.type\n        size:      opts.size\n        extension: extension\n\n      console.info \"Meteor.Files Debugger: The file #{fileName} (binary) was added to #{@collectionName}\" if @debug\n\n      fs.outputFile path, buffer, 'binary', (error) -> bound ->\n        if error\n          callback and callback error\n        else\n          result._id = @collection.insert _.clone result\n          callback and callback null, result\n      \n      return @\n  else\n    undefined\n\n  ###\n  @server\n  @function\n  @class Meteor.Files\n  @name load\n  @param {String} url - URL to file\n  @param {Object} opts - {fileName: '', meta: {...}}\n  @param {Function} callback - function(error, fileObj){...}\n  @description Download file, write stream to FS and add to Meteor.Files Collection\n  @returns {Files} - Return this\n  ###\n  load: if Meteor.isServer then (url, opts = {}, callback) ->\n    console.info \"Meteor.Files Debugger: [load(#{url}, #{JSON.stringify(opts)}, callback)]\" if @debug\n    check url, String\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n\n    self          = @\n    randFileName = @namingFunction()\n    fileName     = if opts.name or opts.fileName then opts.name or opts.fileName else randFileName\n    \n    {extension, extensionWithDot} = @getExt fileName\n    path      = if @public then \"#{@storagePath}/original-#{randFileName}#{extensionWithDot}\" else \"#{@storagePath}/#{randFileName}#{extensionWithDot}\"\n    opts.meta = {} if not opts.meta\n\n    request.get(url).on('error', (error)-> bound ->\n      throw new Meteor.Error 500, \"Error on [load(#{url}, #{opts})]; Error:\" + JSON.stringify error\n    ).on('response', (response) -> bound ->\n\n      console.info \"Meteor.Files Debugger: The file #{url} is received\" if self.debug\n\n      result = self.dataToSchema\n        name:      fileName\n        path:      path\n        meta:      opts.meta\n        type:      opts.type or response.headers['content-type']\n        size:      opts.size or response.headers['content-length']\n        extension: extension\n\n      self.collection.insert _.clone(result), (error, fileRef) ->\n        if error\n          console.warn \"Meteor.Files Debugger: Can't add file #{fileName} (binary) to #{self.collectionName}\" if self.debug\n          callback and callback error\n        else\n          console.info \"Meteor.Files Debugger: The file #{fileName} (binary) was added to #{self.collectionName}\" if self.debug\n          callback and callback null, fileRef\n\n    ).pipe fs.createOutputStream path\n\n    return @\n  else\n    undefined\n\n  ###\n  @server\n  @function\n  @class Meteor.Files\n  @name addFile\n  @param {String} path - Path to file\n  @param {String} path - Path to file\n  @description Add file from FS to Meteor.Files\n  @returns {Files} - Return this\n  ###\n  addFile: if Meteor.isServer then (path, opts = {}, callback) ->\n    console.info \"[addFile(#{path})]\" if @debug\n\n    throw new Meteor.Error 403, 'Can not run [addFile()] on public collection' if @public\n    check path, String\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n\n    self = @\n    fs.stat path, (error, stats) -> bound ->\n      if error\n        callback and callback error\n      else if stats.isFile()\n        fileStats = util.inspect stats\n        fileSize  = fileStats.size\n        pathParts = path.split '/'\n        fileName  = pathParts[pathParts.length - 1]\n\n        {extension, extensionWithDot} = self.getExt fileName\n\n        opts.type = 'application/*' if not opts.type\n        opts.meta = {} if not opts.meta\n        opts.size = fileSize if not opts.size\n\n        result = self.dataToSchema\n          name:         fileName\n          path:         path\n          meta:         opts.meta\n          type:         opts.type\n          size:         opts.size\n          extension:    extension\n          _storagePath: path.replace \"/#{fileName}\", ''\n\n        _cn = self.collectionName\n        self.collection.insert _.clone(result), (error, record) ->\n          if error\n            console.warn \"Can't add file #{fileName} (binary) to #{_cn}\" if self.debug\n            callback and callback error\n          else\n            console.info \"The file #{fileName} (binary) was added to #{_cn}\" if self.debug\n            callback and callback null, result\n      else\n        callback and callback new Meteor.Error 400, \"[Files.addFile(#{path})]: File does not exist\"\n\n    return @\n  else\n    undefined\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name findOne\n  @param {String|Object} search - `_id` of the file or `Object` like, {prop:'val'}\n  @description Load file\n  @returns {Files} - Return this\n  ###\n  findOne: (search) ->\n    console.info \"Meteor.Files Debugger: [findOne(#{JSON.stringify(search)})]\" if @debug\n    check search, Match.OneOf Object, String\n    @srch search\n\n    if @checkAccess()\n      @currentFile = @collection.findOne @search\n      @cursor      = null\n    return @\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name find\n  @param {String|Object} search - `_id` of the file or `Object` like, {prop:'val'}\n  @description Load file or bunch of files\n  @returns {Files} - Return this\n  ###\n  find: (search) ->\n    console.info \"Meteor.Files Debugger: [find(#{JSON.stringify(search)})]\" if @debug\n    check search, Match.OneOf Object, String\n    @srch search\n\n    if @checkAccess\n      @currentFile = null\n      @cursor = @collection.find @search\n    return @\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name get\n  @description Return value of current cursor or file\n  @returns {Object|[Object]}\n  ###\n  get: () ->\n    console.info 'Meteor.Files Debugger: [get()]' if @debug\n    return @cursor.fetch() if @cursor\n    return @currentFile\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name fetch\n  @description Alias for `get()` method\n  @returns {[Object]}\n  ###\n  fetch: () ->\n    console.info 'Meteor.Files Debugger: [fetch()]' if @debug\n    data = @get()\n    if not _.isArray data\n      return [data]\n    else\n      data\n\n  ###\n  @client\n  @function\n  @class Meteor.Files\n  @name insert\n  @param {Object} config - Configuration object with next properties:\n    {File|Object} file           - HTML5 `files` item, like in change event: `e.currentTarget.files[0]`\n    {Object}      meta           - Additional data as object, use later for search\n    {Number|dynamic} streams     - Quantity of parallel upload streams, default: 2\n    {Number|dynamic} chunkSize   - Chunk size for upload\n    {Function}    onUploaded     - Callback triggered when upload is finished, with two arguments `error` and `fileRef`\n    {Function}    onError        - Callback triggered on error in upload and/or FileReader, with two arguments `error` and `fileRef`\n    {Function}    onProgress     - Callback triggered when chunk is sent, with only argument `progress`\n    {Function}    onBeforeUpload - Callback triggered right before upload is started, with only `FileReader` argument:\n        context is `File` - so you are able to check for extension, mime-type, size and etc.\n        return true to continue\n        return false to abort upload\n  @description Upload file to server over DDP\n  @url https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n  @returns {Object} with next properties:\n    {ReactiveVar} onPause  - Is upload process on the pause?\n    {ReactiveVar} state    - active|paused|aborted|completed\n    {ReactiveVar} progress - Current progress in percentage\n    {Function}    pause    - Pause upload process\n    {Function}    continue - Continue paused upload process\n    {Function}    toggle   - Toggle continue/pause if upload process\n    {Function}    abort    - Abort upload\n    {Function}    readAsDataURL - Current file as data URL, use to create image preview and etc. Be aware of big files, may lead to browser crash\n  ###\n  insert: if Meteor.isClient then (config) ->\n    if @checkAccess()\n      console.info 'Meteor.Files Debugger: [insert()]' if @debug\n      {file, meta, onUploaded, onProgress, onBeforeUpload, onAbort, streams, onError, chunkSize, onReady, FileReadProgress} = config\n      meta      ?= {}\n      streams   ?= 2\n      chunkSize ?= this.chunkSize\n\n      check meta, Match.Optional Object\n      check onAbort, Match.Optional Function\n      check streams, Match.OneOf 'dynamic', Number\n      check chunkSize, Match.OneOf 'dynamic', Number\n      check onUploaded, Match.Optional Function\n      check onProgress, Match.Optional Function\n      check onBeforeUpload, Match.Optional Function\n      check onError, Match.Optional Function\n      check onReady, Match.Optional Function\n      check FileReadProgress, Match.Optional Function\n\n      if file\n        console.time('insert') if @debug\n        self       = @\n        fileReader = new FileReader\n        fileLength = 1\n        fileId     = @namingFunction()\n        fileData   =\n          size: file.size\n          type: file.type\n          name: file.name\n\n        fileData = _.extend fileData, @getExt(file.name), {mime: @getMimeType(fileData)}\n        fileData['mime-type'] = fileData.mime\n\n        beforeunload = (e) ->\n          message = if _.isFunction(self.onbeforeunloadMessage) then self.onbeforeunloadMessage.call(null) else self.onbeforeunloadMessage\n          e.returnValue = message if e\n          return message\n        window.addEventListener 'beforeunload', beforeunload, false\n\n        result  =\n          file: _.extend file, fileData\n          onPause: new ReactiveVar false\n          continueFunc: -> return\n          pause: ->\n            @onPause.set true\n            @state.set 'paused'\n          continue: ->\n            @onPause.set false\n            @state.set 'active'\n            @continueFunc.call()\n            @continueFunc = -> return\n          toggle: ->\n            if @onPause.get() then @continue() else @pause()\n          progress: new ReactiveVar 0\n          abort: ->\n            window.removeEventListener 'beforeunload', beforeunload, false\n            onAbort and onAbort.call @, fileData\n            fileReader.abort()\n            @pause()\n            @state.set 'aborted'\n            Meteor.call self.methodNames.MeteorFileAbort, {fileId, fileLength, fileData}\n            delete upload\n          state: new ReactiveVar 'active'\n          readAsDataURL: -> fileReader?.result\n\n        result.progress.set = _.throttle result.progress.set, 250\n\n        Tracker.autorun ->\n          if Meteor.status().connected\n            result.continue()\n            console.info 'Meteor.Files Debugger: Connection established continue() upload' if self.debug\n          else\n            result.pause()\n            console.info 'Meteor.Files Debugger: Connection error set upload on pause()' if self.debug\n\n        end = (error, data) ->\n          console.timeEnd('insert') if self.debug\n          window.removeEventListener 'beforeunload', beforeunload, false\n          result.progress.set 0\n          onUploaded and onUploaded.call result, error, data\n          if error\n            result.state.set 'aborted'\n            onError and onError.call result, error, fileData\n          else\n            result.state.set 'completed'\n\n        if onBeforeUpload and _.isFunction onBeforeUpload\n          isUploadAllowed = onBeforeUpload.call result, fileData\n          if isUploadAllowed isnt true\n            end new Meteor.Error(403, if _.isString(isUploadAllowed) then isUploadAllowed else 'Files.onBeforeUpload() returned false'), null\n            return false\n\n        if @onBeforeUpload and _.isFunction @onBeforeUpload\n          isUploadAllowed = @onBeforeUpload.call result, fileData\n          if isUploadAllowed isnt true\n            end new Meteor.Error(403, if _.isString(isUploadAllowed) then isUploadAllowed else 'this.onBeforeUpload() returned false'), null\n            return false\n\n        currentChunk = 0\n        sentChunks   = 0\n        binary   = ''\n        _binSize = 0\n        EOFsent  = false\n\n        sendEOF = (opts) ->\n          unless EOFsent\n            EOFsent = true\n            Meteor.setTimeout ->\n              opts.binData  = 'EOF'\n              opts.eof      = true\n              opts.chunkId  = -1\n              opts._binSize = -1\n              Meteor.call self.methodNames.MeteorFileWrite, opts, end\n            , 50\n\n        upload = (fileLength) ->\n          opts = \n            meta: meta\n            file: fileData\n            fileId: fileId\n            fileLength: fileLength\n            eof: false\n\n          if result.onPause.get()\n            result.continueFunc = -> upload fileLength\n            return\n\n          if _binSize > 0\n            opts.chunkId = ++currentChunk\n            opts.binData = binary.substring 0, chunkSize\n            binary       = binary.substring chunkSize\n            _binSize     = opts._binSize = _.clone binary.length\n\n            Meteor.call self.methodNames.MeteorFileWrite, opts, (error, data) ->\n              ++sentChunks\n              if error\n                end error\n              else\n                progress = (data.chunkId / fileLength) * 100\n                result.progress.set Math.ceil(progress)\n                onProgress and onProgress.call result, progress\n\n                unless result.onPause.get()\n                  if data._binSize <= 0\n                    sendEOF opts\n                  else\n                    upload fileLength\n                else\n                  result.continueFunc = -> upload fileLength\n          else\n            sendEOF opts\n\n        createStreams = (fileLength) ->\n          i = 1\n          while i <= streams\n            Meteor.defer -> upload fileLength\n            i++\n          return\n\n        readHandler = (chunk) ->\n          binary    = (fileReader?.result or chunk.srcElement?.result or chunk.target?.result).split(',')[1]\n          if binary and binary.length\n            onReady and onReady.call result, fileData\n            binSize   = _.clone binary.length\n            _binSize  = _.clone binary.length\n            if chunkSize is 'dynamic'\n              if binSize >= 2048 * streams\n                chunkSize = Math.ceil binSize / (8 * streams)\n              else\n                chunkSize = self.chunkSize\n            if streams is 'dynamic'\n              streams = Math.ceil binSize / chunkSize\n              if streams > 32\n                streams = 32\n            chunkSize = Math.floor(chunkSize / 8) * 8\n            _len = Math.ceil(binSize / chunkSize)\n            fileLength = if _len <= 0 then 1 else _len\n            if streams > fileLength\n              streams = fileLength\n            createStreams fileLength\n\n        if FileReadProgress\n          fileReader.onprogress = (e) -> FileReadProgress.call result, ((e.loaded / file.size) * 100)\n        fileReader.onloadend = readHandler\n        fileReader.onerror = (e) ->\n          result.abort()\n          error = (e.target or e.srcElement).error\n          onError and onError.call result, error, fileData\n\n        Meteor.defer -> fileReader.readAsDataURL file\n        return result\n  else\n    undefined\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name remove\n  @param {String|Object} search - `_id` of the file or `Object` like, {prop:'val'}\n  @description Remove file(s) on cursor or find and remove file(s) if search is set\n  @returns {undefined}\n  ###\n  remove: (search) ->\n    console.info \"Meteor.Files Debugger: [remove(#{JSON.stringify(search)})]\" if @debug\n    check search, Match.Optional Match.OneOf Object, String\n\n    if @checkAccess()\n      @srch search\n      if Meteor.isClient\n        Meteor.call @methodNames.MeteorFileUnlink, rcp(@)\n\n      if Meteor.isServer\n        files = @collection.find @search\n        if files.count() > 0\n          self = @\n          files.forEach (file) -> self.unlink file\n        @collection.remove @search\n    return @\n\n  ###\n  @sever\n  @function\n  @class Meteor.Files\n  @name unlink\n  @param {Object} file - fileObj\n  @description Unlink files and it's versions from FS\n  @returns {undefined}\n  ###\n  unlink: if Meteor.isServer then (file) ->\n    if file.versions and not _.isEmpty file.versions\n      _.each file.versions, (version) -> bound ->\n        fs.unlink version.path, NOOP\n    fs.unlink file.path, NOOP\n    return @\n  else undefined\n\n\n  _404: if Meteor.isServer then (http) ->\n    console.warn \"Meteor.Files Debugger: [download(#{http}, #{version})] [404] File not found: #{if fileRef and fileRef.path then fileRef.path else undefined}\" if @debug\n    text = 'File Not Found :('\n    http.response.writeHead 404,\n      'Content-Length': text.length\n      'Content-Type':   'text/plain'\n    http.response.end text\n  else undefined\n\n  ###\n  @server\n  @function\n  @class Meteor.Files\n  @name download\n  @param {Object|Files} self - Instance of MEteor.Files\n  @description Initiates the HTTP response\n  @returns {undefined}\n  ###\n  download: if Meteor.isServer then (http, version = 'original') ->\n    console.info \"Meteor.Files Debugger: [download(#{http}, #{version})]\" if @debug\n    responseType = '200'\n    if not @public\n      if @currentFile\n        if _.has(@currentFile, 'versions') and _.has @currentFile.versions, version\n          fileRef = @currentFile.versions[version]\n        else\n          fileRef = @currentFile\n      else\n        fileRef = false\n\n    if @public\n      fileRef =\n        path: \"#{@storagePath}/#{http.params.file}\"\n\n    if not fileRef or not _.isObject(fileRef)\n      return @_404 http\n    else if @currentFile\n      self = @\n\n      if @downloadCallback\n        unless @downloadCallback.call _.extend(http, @getUser(http)), @currentFile\n          return @_404 http\n\n      fs.stat fileRef.path, (statErr, stats) -> bound ->\n        if statErr or not stats.isFile()\n          return self._404 http\n\n        fileStats    = util.inspect stats\n        fileRef.size = fileStats.size if fileStats.size isnt fileRef.size and not self.integrityCheck\n        responseType = '400' if fileStats.size isnt fileRef.size and self.integrityCheck\n        partiral     = false\n        reqRange     = false\n\n        if http.params.query.download and http.params.query.download == 'true'\n          dispositionType = 'attachment; '\n        else\n          dispositionType = 'inline; '\n\n        dispositionName     = \"filename=\\\"#{encodeURIComponent(self.currentFile.name)}\\\"; filename=*UTF-8\\\"#{encodeURIComponent(self.currentFile.name)}\\\"; \"\n        dispositionEncoding = 'charset=utf-8'\n\n        http.response.setHeader 'Content-Type', fileRef.type\n        http.response.setHeader 'Content-Disposition', dispositionType + dispositionName + dispositionEncoding\n        http.response.setHeader 'Accept-Ranges', 'bytes'\n        http.response.setHeader 'Last-Modified', self.currentFile?.updatedAt?.toUTCString() if self.currentFile?.updatedAt?.toUTCString()\n        http.response.setHeader 'Connection', 'keep-alive'\n\n        if http.request.headers.range\n          partiral = true\n          array    = http.request.headers.range.split /bytes=([0-9]*)-([0-9]*)/\n          start    = parseInt array[1]\n          end      = parseInt array[2]\n          if isNaN(end)\n            end    = fileRef.size - 1\n          take     = end - start\n        else\n          start    = 0\n          end      = fileRef.size - 1\n          take     = fileRef.size\n\n        if partiral or (http.params.query.play and http.params.query.play == 'true')\n          reqRange = {start, end}\n          if isNaN(start) and not isNaN end\n            reqRange.start = end - take\n            reqRange.end   = end\n          if not isNaN(start) and isNaN end\n            reqRange.start = start\n            reqRange.end   = start + take\n\n          reqRange.end = fileRef.size - 1 if ((start + take) >= fileRef.size)\n          http.response.setHeader 'Pragma', 'private'\n          http.response.setHeader 'Expires', new Date(+new Date + 1000*32400).toUTCString()\n          http.response.setHeader 'Cache-Control', 'private, maxage=10800, s-maxage=32400'\n\n          if self.strict and (reqRange.start >= (fileRef.size - 1) or reqRange.end > (fileRef.size - 1))\n            responseType = '416'\n          else\n            responseType = '206'\n        else\n          http.response.setHeader 'Cache-Control', self.cacheControl\n          responseType = '200'\n\n        streamErrorHandler = (error) ->\n          http.response.writeHead 500\n          http.response.end error.toString()\n\n        switch responseType\n          when '400'\n            console.warn \"Meteor.Files Debugger: [download(#{http}, #{version})] [400] Content-Length mismatch!: #{fileRef.path}\" if self.debug\n            text = 'Content-Length mismatch!'\n            http.response.writeHead 400,\n              'Content-Type':   'text/plain'\n              'Cache-Control':  'no-cache'\n              'Content-Length': text.length\n            http.response.end text\n            break\n          when '404'\n            return self._404 http\n            break\n          when '416'\n            console.info \"Meteor.Files Debugger: [download(#{http}, #{version})] [416] Content-Range is not specified!: #{fileRef.path}\" if self.debug\n            http.response.writeHead 416,\n              'Content-Range': \"bytes */#{fileRef.size}\"\n            http.response.end()\n            break\n          when '200'\n            console.info \"Meteor.Files Debugger: [download(#{http}, #{version})] [200]: #{fileRef.path}\" if self.debug\n            stream = fs.createReadStream fileRef.path\n            stream.on('open', =>\n              http.response.writeHead 200\n              if self.throttle\n                stream.pipe( new Throttle {bps: self.throttle, chunksize: self.chunkSize}\n                ).pipe http.response\n              else\n                stream.pipe http.response\n            ).on 'error', streamErrorHandler\n            break\n          when '206'\n            console.info \"Meteor.Files Debugger: [download(#{http}, #{version})] [206]: #{fileRef.path}\" if self.debug\n            http.response.setHeader 'Content-Range', \"bytes #{reqRange.start}-#{reqRange.end}/#{fileRef.size}\"\n            http.response.setHeader 'Trailer', 'expires'\n            http.response.setHeader 'Transfer-Encoding', 'chunked'\n            if self.throttle\n              stream = fs.createReadStream fileRef.path, {start: reqRange.start, end: reqRange.end}\n              stream.on('open', -> http.response.writeHead 206\n              ).on('error', streamErrorHandler\n              ).on('end', -> http.response.end()\n              ).pipe( new Throttle {bps: self.throttle, chunksize: self.chunkSize}\n              ).pipe http.response\n            else\n              stream = fs.createReadStream fileRef.path, {start: reqRange.start, end: reqRange.end}\n              stream.on('open', -> http.response.writeHead 206\n              ).on('error', streamErrorHandler\n              ).on('end', -> http.response.end()\n              ).pipe http.response\n            break\n    else\n      return @_404 http\n  else undefined\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name link\n  @param {Object}   fileRef - File reference object\n  @param {String}   version - [Optional] Version of file you would like to request\n  @param {Boolean}  pub     - [Optional] is file located in publicity available folder?\n  @description Returns URL to file\n  @returns {String} Empty string returned in case if file not found in DB\n  ###\n  link: (fileRef, version = 'original', pub = false) ->\n    console.info 'Meteor.Files Debugger: [link()]' if @debug\n    if _.isString fileRef\n      version = fileRef\n      fileRef = null\n    return '' if not fileRef and not @currentFile\n    return formatFleURL (fileRef or @currentFile), version, @public\n\n###\n@isomorphic\n@private\n@function\n@name formatFleURL\n@param {Object} fileRef - File reference object\n@param {String} version - [Optional] Version of file you would like build URL for\n@param {Boolean}  pub   - [Optional] is file located in publicity available folder?\n@description Returns formatted URL for file\n@returns {String}\n###\nformatFleURL = (fileRef, version = 'original', pub = false) ->\n  root = __meteor_runtime_config__.ROOT_URL.replace(/\\/+$/, '')\n\n  if fileRef?.extension?.length > 0\n    ext = '.' + fileRef.extension\n  else\n    ext = ''\n\n  if pub\n    return root + \"#{fileRef._downloadRoute}/#{version}-#{fileRef._id}#{ext}\"\n  else\n    return root + \"#{fileRef._downloadRoute}/#{fileRef._collectionName}/#{fileRef._id}/#{version}/#{fileRef._id}#{ext}\"\n\nif Meteor.isClient\n  ###\n  @client\n  @TemplateHelper\n  @name fileURL\n  @param {Object} fileRef - File reference object\n  @param {String} version - [Optional] Version of file you would like to request\n  @description Get download URL for file by fileRef, even without subscription\n  @example {{fileURL fileRef}}\n  @returns {String}\n  ###\n  Template.registerHelper 'fileURL', (fileRef, version) ->\n    return undefined if not fileRef or not _.isObject fileRef\n    version = if not version or not _.isString(version) then 'original' else version\n    if fileRef._id\n      return formatFleURL fileRef, version, !!~fileRef._storagePath?.indexOf?('../web.browser')\n    else\n      return ''"]}