{"version":3,"sources":["meteor://ðŸ’»app/packages/ostrio_files/files.coffee","meteor://ðŸ’»app/files.coffee.js","meteor://ðŸ’»app/packages/ostrio:files/event-emitter.jsx"],"names":["module","export","FilesCollection","EventEmitter","FileCursor","FilesCursor","NOOP","Throttle","bound","events","fileType","fixJSONParse","fixJSONStringify","formatFleURL","fs","nodePath","request","writeStream","Meteor","isServer","Npm","require","bindEnvironment","callback","path1","maxLength","file1","permissions","self","path","file","_","isString","fd","open","error","Error","ended","aborted","writtenChunks","prototype","write","num","chunk","_stream","createWriteStream","flags","mode","highWaterMark","autoClose","start","chunkSize","on","console","abort","setTimeout","end","close","unlink","stop","_fileRef","_collection","extend","remove","debug","info","_id","link","version","get","property","fetch","collection","findOne","_selector","options","_current","cursor","find","hasNext","count","next","hasPrevious","previous","first","ref","last","forEach","context","each","map","current","observe","callbacks","observeChanges","obj","i","j","key","len","v","value","indexOf","replace","Date","parseInt","isObject","isArray","length","isDate","FileUpload","UploadInstance","__proto__","config","_URL","_methods","_preCollectionCursor","cookie","setTokenCookie","storagePath","unsetTokenCookie","call","ddp","collectionName","downloadRoute","schema","namingFunction","onbeforeunloadMessage","parentDirPermissions","allowClientCode","onBeforeUpload","onInitiateUpload","integrityCheck","strict","downloadCallback","cacheControl","responseHeaders","throttle","onAfterUpload","onAfterRemove","interceptDownload","onBeforeRemove","continueUploadTTL","Cookies","Math","floor","Mongo","Collection","_name","check","String","sep","sp","apply","arguments","normalize","isClient","has","connection","_lastSessionId","set","Accounts","startup","onLogin","onLogout","Match","OneOf","Function","window","URL","webkitURL","mozURL","msURL","oURL","Worker","Blob","_supportWebWorker","_webWorkerUrl","createObjectURL","type","absoluteUrl","_currentUploads","responseCode","fileRef","versionRef","headers","size","mkdirs","Boolean","Number","Object","_preCollection","_ensureIndex","createdAt","expireAfterSeconds","background","fields","isFinished","changed","doc","removed","_createStream","opts","fileLength","_continueUpload","contUpld","ref1","name","isVideo","isAudio","isImage","isText","isJSON","isPDF","extension","optional","_storagePath","_downloadRoute","_collectionName","meta","blackbox","userId","updatedAt","versions","Any","_checkAccess","http","rc","result","text","user","_getUser","isFunction","params","isNumber","warn","response","writeHead","_methodNames","_Abort","_Write","_Start","_Remove","_handleUpload","_finishUpload","WebApp","connectHandlers","use","_file","body","handleError","uri","uris","_parsedUrl","method","JSON","stringify","data","e","ref2","ref3","server","sessions","fileId","eof","Buffer","from","binData","error1","chunkId","_prepareUpload","emit","parse","___s","clone","insert","omit","returnMeta","uploadRoute","substring","split","query","decodeURI","download","selector","userFuncs","users","FSName","Optional","unblock","wrapAsync","bind","methods","transport","base","ctx","extensionWithDot","fileName","isUploadAllowed","_getFileName","_getExt","ext","_dataToSchema","cb","chmod","_getMimeType","_updateFileTypes","update","$set","fileData","br","buf","mime","openSync","readSync","slice","mtok","pop","toLowerCase","test","ds","original","buffer","proceedAfterUpload","stream","isBoolean","Random","id","load","url","pathParts","storeResult","stat","stats","pipe","addFile","isFile","autoStart","_UploadInstance","config1","base1","base2","base3","base4","base5","wwError","streams","allowWebWorkers","onError","onAbort","onStart","isBase64","onUploaded","onProgress","time","worker","startTime","currentChunk","transferTime","trackerComp","sentChunks","EOFsent","pipes","_FileUpload","beforeunload","message","returnValue","addEventListener","_onEnd","emitEvent","addListener","upload","sendEOF","prepare","sendChunk","proceedChunk","createStreams","_t","progress","estimateTime","estimateSpeed","round","estimateTimer","clearInterval","terminate","removeEventListener","timeEnd","state","evt","p","pad","pipeFunc","bin","HTTP","content","pause","fileReader","FileReader","onloadend","srcElement","target","onerror","readAsDataURL","FileReaderSync","onPause","postMessage","sc","cc","cs","f","ib","_len","handleStart","ceil","continueFunc","func","push","Tracker","autorun","computation","status","connected","onmessage","manual","ReactiveVar","setInterval","_currentTime","toggle","docs","files","deny","rules","allow","denyClient","allowClient","isEmpty","vRef","_404","originalUrl","statErr","responseType","serve","readableStream","force200","array","dispositionEncoding","dispositionName","dispositionType","partiral","reqRange","streamErrorHandler","take","encodeURIComponent","setHeader","range","isNaN","play","toString","createReadStream","bps","chunksize","root","__meteor_runtime_config__","ROOT_URL","Template","registerHelper","Files","proto","exports","originalGlobalValue","indexOfListener","listeners","listener","alias","aliasClosure","getListeners","_getEvents","RegExp","hasOwnProperty","flattenListeners","flatListeners","getListenersAsObject","Array","listenerIsWrapped","once","addOnceListener","defineEvent","defineEvents","evts","removeListener","index","splice","off","addListeners","manipulateListeners","removeListeners","single","multiple","removeEvent","_events","removeAllListeners","args","listenersMap","_getOnceReturnValue","trigger","setOnceReturnValue","_onceReturnValue","noConflict"],"mappings":"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","file":"/packages/ostrio_files.js","sourcesContent":["NOOP = -> return\n\nif Meteor.isServer\n  ###\n  @summary Require NPM packages\n  ###\n  fs       = Npm.require 'fs-extra'\n  events   = Npm.require 'events'\n  request  = Npm.require 'request'\n  Throttle = Npm.require 'throttle'\n  fileType = Npm.require 'file-type'\n  nodePath = Npm.require 'path'\n\n  ###\n  @var {Object} bound - Meteor.bindEnvironment (Fiber wrapper)\n  ###\n  bound = Meteor.bindEnvironment (callback) -> return callback()\n\n  ###\n  @private\n  @locus Server\n  @class writeStream\n  @param path      {String} - Path to file on FS\n  @param maxLength {Number} - Max amount of chunks in stream\n  @param file      {Object} - fileRef Object\n  @summary writableStream wrapper class, makes sure chunks is written in given order. Implementation of queue stream.\n  ###\n  class writeStream\n    constructor: (@path, @maxLength, @file, @permissions) ->\n      if not @path or not _.isString @path\n        return\n\n      self = @\n      @fd = null\n      fs.open @path, 'w+', @permissions, (error, fd) -> bound ->\n        if error\n          throw new Meteor.Error 500, '[FilesCollection] [writeStream] [Exception:]', error\n        else\n          self.fd = fd\n        return\n      @ended         = false\n      @aborted       = false\n      @writtenChunks = 0\n\n    ###\n    @memberOf writeStream\n    @name write\n    @param {Number} num - Chunk position in stream\n    @param {Buffer} chunk - Chunk binary data\n    @param {Function} callback - Callback\n    @summary Write chunk in given order\n    @returns {Boolean} - True if chunk is sent to stream, false if chunk is set into queue\n    ###\n    write: (num, chunk, callback) ->\n      if not @aborted and not @ended\n        self    = @\n        if @fd\n          _stream = fs.createWriteStream @path, {\n            flags: 'r+'\n            mode: @permissions\n            highWaterMark: 0\n            fd: @fd\n            autoClose: true\n            start: (num - 1) * @file.chunkSize\n          }\n          _stream.on 'error', (error) -> bound ->\n            console.error \"[FilesCollection] [writeStream] [ERROR:]\", error\n            self.abort()\n            return\n          _stream.write chunk, -> bound ->\n            ++self.writtenChunks\n            callback and callback()\n            return\n        else\n          Meteor.setTimeout ->\n            self.write num, chunk, callback\n            return\n          , 25\n      return false\n\n    ###\n    @memberOf writeStream\n    @name end\n    @param {Function} callback - Callback\n    @summary Finishes writing to writableStream, only after all chunks in queue is written\n    @returns {Boolean} - True if stream is fulfilled, false if queue is in progress\n    ###\n    end: (callback) ->\n      if not @aborted and not @ended\n        if @writtenChunks is @maxLength\n          self = @\n          fs.close @fd, -> bound ->\n            self.ended = true\n            callback and callback(true)\n            return\n          return true\n        else\n          self = @\n          Meteor.setTimeout ->\n            self.end callback\n            return\n          , 25\n      else\n        callback and callback(false)\n      return false\n\n    ###\n    @memberOf writeStream\n    @name abort\n    @param {Function} callback - Callback\n    @summary Aborts writing to writableStream, removes created file\n    @returns {Boolean} - True\n    ###\n    abort: (callback) ->\n      @aborted = true\n      fs.unlink @path, (callback or NOOP)\n      return true\n\n    ###\n    @memberOf writeStream\n    @name stop\n    @summary Stop writing to writableStream\n    @returns {Boolean} - True\n    ###\n    stop: ->\n      @aborted = true\n      @ended   = true\n      return true\nelse\n  EventEmitter = require('./event-emitter.jsx').EventEmitter\n\n###\n@private\n@locus Anywhere\n@class FileCursor\n@param _fileRef    {Object} - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n@param _collection {FilesCollection} - FilesCollection Instance\n@summary Internal class, represents each record in `FilesCursor.each()` or document returned from `.findOne()` method\n###\nclass FileCursor\n  constructor: (@_fileRef, @_collection) ->\n    self = @\n    self = _.extend self, @_fileRef\n\n  ###\n  @locus Anywhere\n  @memberOf FileCursor\n  @name remove\n  @param callback {Function} - Triggered asynchronously after item is removed or failed to be removed\n  @summary Remove document\n  @returns {FileCursor}\n  ###\n  remove: (callback) ->\n    console.info '[FilesCollection] [FileCursor] [remove()]' if @_collection.debug\n    if @_fileRef\n      @_collection.remove(@_fileRef._id, callback)\n    else\n      callback and callback new Meteor.Error 404, 'No such file'\n    return @\n\n  ###\n  @locus Anywhere\n  @memberOf FileCursor\n  @name link\n  @param version {String} - Name of file's subversion\n  @summary Returns downloadable URL to File\n  @returns {String}\n  ###\n  link: (version) ->\n    console.info \"[FilesCollection] [FileCursor] [link(#{version})]\" if @_collection.debug\n    return if @_fileRef then @_collection.link(@_fileRef, version) else ''\n\n  ###\n  @locus Anywhere\n  @memberOf FileCursor\n  @name get\n  @param property {String} - Name of sub-object property\n  @summary Returns current document as a plain Object, if `property` is specified - returns value of sub-object property\n  @returns {Object|mix}\n  ###\n  get: (property) ->\n    console.info \"[FilesCollection] [FileCursor] [get(#{property})]\" if @_collection.debug\n    if property\n      return @_fileRef[property]\n    else\n      return @_fileRef\n\n  ###\n  @locus Anywhere\n  @memberOf FileCursor\n  @name fetch\n  @summary Returns document as plain Object in Array\n  @returns {[Object]}\n  ###\n  fetch: ->\n    console.info '[FilesCollection] [FileCursor] [fetch()]' if @_collection.debug\n    return [@_fileRef]\n\n  ###\n  @locus Anywhere\n  @memberOf FileCursor\n  @name with\n  @summary Returns reactive version of current FileCursor, useful to use with `{{#with}}...{{/with}}` block template helper\n  @returns {[Object]}\n  ###\n  with: ->\n    console.info '[FilesCollection] [FileCursor] [with()]' if @_collection.debug\n    self = @\n    return _.extend self, @_collection.collection.findOne @_fileRef._id\n\n###\n@private\n@locus Anywhere\n@class FilesCursor\n@param _selector   {String|Object}   - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n@param options     {Object}          - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#selectors)\n@param _collection {FilesCollection} - FilesCollection Instance\n@summary Implementation of Cursor for FilesCollection\n###\nclass FilesCursor\n  constructor: (@_selector = {}, options, @_collection) ->\n    @_current = -1\n    @cursor   = @_collection.collection.find @_selector, options\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name get\n  @summary Returns all matching document(s) as an Array. Alias of `.fetch()`\n  @returns {[Object]}\n  ###\n  get: ->\n    console.info \"[FilesCollection] [FilesCursor] [get()]\" if @_collection.debug\n    return @cursor.fetch()\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name hasNext\n  @summary Returns `true` if there is next item available on Cursor\n  @returns {Boolean}\n  ###\n  hasNext: ->\n    console.info '[FilesCollection] [FilesCursor] [hasNext()]' if @_collection.debug\n    return @_current < @cursor.count() - 1\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name next\n  @summary Returns next item on Cursor, if available\n  @returns {Object|undefined}\n  ###\n  next: ->\n    console.info '[FilesCollection] [FilesCursor] [next()]' if @_collection.debug\n    if @hasNext()\n      return @cursor.fetch()[++@_current]\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name hasPrevious\n  @summary Returns `true` if there is previous item available on Cursor\n  @returns {Boolean}\n  ###\n  hasPrevious: ->\n    console.info '[FilesCollection] [FilesCursor] [hasPrevious()]' if @_collection.debug\n    return @_current isnt -1\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name previous\n  @summary Returns previous item on Cursor, if available\n  @returns {Object|undefined}\n  ###\n  previous: ->\n    console.info '[FilesCollection] [FilesCursor] [previous()]' if @_collection.debug\n    if @hasPrevious()\n      return @cursor.fetch()[--@_current]\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name fetch\n  @summary Returns all matching document(s) as an Array.\n  @returns {[Object]}\n  ###\n  fetch: ->\n    console.info '[FilesCollection] [FilesCursor] [fetch()]' if @_collection.debug\n    return @cursor.fetch()\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name first\n  @summary Returns first item on Cursor, if available\n  @returns {Object|undefined}\n  ###\n  first: ->\n    console.info '[FilesCollection] [FilesCursor] [first()]' if @_collection.debug\n    @_current = 0\n    return @fetch()?[@_current]\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name last\n  @summary Returns last item on Cursor, if available\n  @returns {Object|undefined}\n  ###\n  last: ->\n    console.info '[FilesCollection] [FilesCursor] [last()]' if @_collection.debug\n    @_current = @count() - 1\n    return @fetch()?[@_current]\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name count\n  @summary Returns the number of documents that match a query\n  @returns {Number}\n  ###\n  count: ->\n    console.info '[FilesCollection] [FilesCursor] [count()]' if @_collection.debug\n    return @cursor.count()\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name remove\n  @param callback {Function} - Triggered asynchronously after item is removed or failed to be removed\n  @summary Removes all documents that match a query\n  @returns {FilesCursor}\n  ###\n  remove: (callback) ->\n    console.info '[FilesCollection] [FilesCursor] [remove()]' if @_collection.debug\n    @_collection.remove @_selector, callback\n    return @\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name forEach\n  @param callback {Function} - Function to call. It will be called with three arguments: the `file`, a 0-based index, and cursor itself\n  @param context {Object} - An object which will be the value of `this` inside `callback`\n  @summary Call `callback` once for each matching document, sequentially and synchronously.\n  @returns {undefined}\n  ###\n  forEach: (callback, context = {}) ->\n    console.info '[FilesCollection] [FilesCursor] [forEach()]' if @_collection.debug\n    @cursor.forEach callback, context\n    return\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name each\n  @summary Returns an Array of FileCursor made for each document on current cursor\n           Useful when using in {{#each FilesCursor#each}}...{{/each}} block template helper\n  @returns {[FileCursor]}\n  ###\n  each: ->\n    self = @\n    return @map (file) ->\n      return new FileCursor file, self._collection\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name map\n  @param callback {Function} - Function to call. It will be called with three arguments: the `file`, a 0-based index, and cursor itself\n  @param context {Object} - An object which will be the value of `this` inside `callback`\n  @summary Map `callback` over all matching documents. Returns an Array.\n  @returns {Array}\n  ###\n  map: (callback, context = {}) ->\n    console.info '[FilesCollection] [FilesCursor] [map()]' if @_collection.debug\n    return @cursor.map callback, context\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name current\n  @summary Returns current item on Cursor, if available\n  @returns {Object|undefined}\n  ###\n  current: ->\n    console.info '[FilesCollection] [FilesCursor] [current()]' if @_collection.debug\n    @_current = 0 if @_current < 0\n    return @fetch()[@_current]\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name observe\n  @param callbacks {Object} - Functions to call to deliver the result set as it changes\n  @summary Watch a query. Receive callbacks as the result set changes.\n  @url http://docs.meteor.com/api/collections.html#Mongo-Cursor-observe\n  @returns {Object} - live query handle\n  ###\n  observe: (callbacks) ->\n    console.info '[FilesCollection] [FilesCursor] [observe()]' if @_collection.debug\n    return @cursor.observe callbacks\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name observeChanges\n  @param callbacks {Object} - Functions to call to deliver the result set as it changes\n  @summary Watch a query. Receive callbacks as the result set changes. Only the differences between the old and new documents are passed to the callbacks.\n  @url http://docs.meteor.com/api/collections.html#Mongo-Cursor-observeChanges\n  @returns {Object} - live query handle\n  ###\n  observeChanges: (callbacks) ->\n    console.info '[FilesCollection] [FilesCursor] [observeChanges()]' if @_collection.debug\n    return @cursor.observeChanges callbacks\n\n###\n@var {Function} fixJSONParse - Fix issue with Date parse\n###\nfixJSONParse = (obj) ->\n  for key, value of obj\n    if _.isString(value) and !!~value.indexOf '=--JSON-DATE--='\n      value = value.replace '=--JSON-DATE--=', ''\n      obj[key] = new Date parseInt value\n    else if _.isObject value\n      obj[key] = fixJSONParse value\n    else if _.isArray value\n      for v, i in value\n        if _.isObject(v)\n          obj[key][i] = fixJSONParse v\n        else if _.isString(v) and !!~v.indexOf '=--JSON-DATE--='\n          v = v.replace '=--JSON-DATE--=', ''\n          obj[key][i] = new Date parseInt v\n  return obj\n\n###\n@var {Function} fixJSONStringify - Fix issue with Date stringify\n###\nfixJSONStringify = (obj) ->\n  for key, value of obj\n    if _.isDate value\n      obj[key] = '=--JSON-DATE--=' + (+value)\n    else if _.isObject value\n      obj[key] = fixJSONStringify value\n    else if _.isArray value\n      for v, i in value\n        if _.isObject(v)\n          obj[key][i] = fixJSONStringify v\n        else if _.isDate v\n          obj[key][i] = '=--JSON-DATE--=' + (+v)\n  return obj\n\n###\n@locus Anywhere\n@class FilesCollection\n@param config           {Object}   - [Both]   Configuration object with next properties:\n@param config.debug     {Boolean}  - [Both]   Turn on/of debugging and extra logging\n@param config.ddp       {Object}   - [Client] Custom DDP connection. Object returned form `DDP.connect()`\n@param config.schema    {Object}   - [Both]   Collection Schema\n@param config.public    {Boolean}  - [Both]   Store files in folder accessible for proxy servers, for limits, and more - read docs\n@param config.strict    {Boolean}  - [Server] Strict mode for partial content, if is `true` server will return `416` response code, when `range` is not specified, otherwise server return `206`\n@param config.protected {Function} - [Both]   If `true` - files will be served only to authorized users, if `function()` - you're able to check visitor's permissions in your own way function's context has:\n  - `request` - On server only\n  - `response` - On server only\n  - `user()`\n  - `userId`\n@param config.chunkSize      {Number}  - [Both] Upload chunk size, default: 524288 bytes (0,5 Mb)\n@param config.permissions    {Number}  - [Server] Permissions which will be set to uploaded files (octal), like: `511` or `0o755`. Default: 0644\n@param config.parentDirPermissions {Number}  - [Server] Permissions which will be set to parent directory of uploaded files (octal), like: `611` or `0o777`. Default: 0755\n@param config.storagePath    {String|Function}  - [Server] Storage path on file system\n@param config.cacheControl   {String}  - [Server] Default `Cache-Control` header\n@param config.responseHeaders {Object|Function} - [Server] Custom response headers, if function is passed, must return Object\n@param config.throttle       {Number}  - [Server] bps throttle threshold\n@param config.downloadRoute  {String}  - [Both]   Server Route used to retrieve files\n@param config.collection     {Mongo.Collection} - [Both] Mongo Collection Instance\n@param config.collectionName {String}  - [Both]   Collection name\n@param config.namingFunction {Function}- [Both]   Function which returns `String`\n@param config.integrityCheck {Boolean} - [Server] Check file's integrity before serving to users\n@param config.onAfterUpload  {Function}- [Server] Called right after file is ready on FS. Use to transfer file somewhere else, or do other thing with file directly\n@param config.onAfterRemove  {Function} - [Server] Called right after file is removed. Removed objects is passed to callback\n@param config.continueUploadTTL {Number} - [Server] Time in seconds, during upload may be continued, default 3 hours (10800 seconds)\n@param config.onBeforeUpload {Function}- [Both]   Function which executes on server after receiving each chunk and on client right before beginning upload. Function context is `File` - so you are able to check for extension, mime-type, size and etc.\nreturn `true` to continue\nreturn `false` or `String` to abort upload\n@param config.onInitiateUpload {Function} - [Server] Function which executes on server right before upload is begin and right after `onBeforeUpload` hook. This hook is fully asynchronous.\n@param config.onBeforeRemove {Function} - [Server] Executes before removing file on server, so you can check permissions. Return `true` to allow action and `false` to deny.\n@param config.allowClientCode  {Boolean}  - [Both]   Allow to run `remove` from client\n@param config.downloadCallback {Function} - [Server] Callback triggered each time file is requested, return truthy value to continue download, or falsy to abort\n@param config.interceptDownload {Function} - [Server] Intercept download request, so you can serve file from third-party resource, arguments {http: {request: {...}, response: {...}}, fileRef: {...}}\n@param config.onbeforeunloadMessage {String|Function} - [Client] Message shown to user when closing browser's window or tab while upload process is running\n@summary Create new instance of FilesCollection\n###\nclass FilesCollection\n  __proto__: do -> if Meteor.isServer then events.EventEmitter.prototype else EventEmitter.prototype\n  constructor: (config) ->\n    if Meteor.isServer\n      events.EventEmitter.call @\n    else\n      EventEmitter.call @\n    {storagePath, @ddp, @collection, @collectionName, @downloadRoute, @schema, @chunkSize, @namingFunction, @debug, @onbeforeunloadMessage, @permissions, @parentDirPermissions, @allowClientCode, @onBeforeUpload, @onInitiateUpload, @integrityCheck, @protected, @public, @strict, @downloadCallback, @cacheControl, @responseHeaders, @throttle, @onAfterUpload, @onAfterRemove, @interceptDownload, @onBeforeRemove, @continueUploadTTL} = config if config\n\n    self        = @\n    cookie      = new Cookies()\n    @debug     ?= false\n    @public    ?= false\n    @protected ?= false\n    @chunkSize ?= 1024*512\n    @chunkSize  = Math.floor(@chunkSize / 8) * 8\n\n    if @public and not @downloadRoute\n      throw new Meteor.Error 500, \"[FilesCollection.#{@collectionName}]: \\\"downloadRoute\\\" must be precisely provided on \\\"public\\\" collections! Note: \\\"downloadRoute\\\" must be equal or be inside of your web/proxy-server (relative) root.\"\n\n    @collection        ?= new Mongo.Collection @collectionName\n    @collectionName    ?= @collection._name\n    check @collectionName, String\n    @downloadRoute     ?= '/cdn/storage'\n    @downloadRoute      = @downloadRoute.replace /\\/$/, ''\n    @collectionName    ?= 'MeteorUploadFiles'\n    @namingFunction    ?= false\n    @onBeforeUpload    ?= false\n    @allowClientCode   ?= true\n    @ddp               ?= Meteor\n    @onInitiateUpload  ?= false\n    @interceptDownload ?= false\n    storagePath        ?= -> \"assets#{nodePath.sep}app#{nodePath.sep}uploads#{nodePath.sep}#{@collectionName}\"\n\n    if _.isString storagePath\n      @storagePath = -> storagePath\n    else\n      @storagePath = ->\n        sp = storagePath.apply @, arguments\n        unless _.isString sp\n          throw new Meteor.Error 400, \"[FilesCollection.#{self.collectionName}] \\\"storagePath\\\" function must return a String!\"\n        sp = sp.replace /\\/$/, ''\n        return if Meteor.isServer then nodePath.normalize(sp) else sp\n\n    if Meteor.isClient\n      @onbeforeunloadMessage ?= 'Upload in a progress... Do you want to abort?'\n      delete @strict\n      delete @throttle\n      delete @permissions\n      delete @parentDirPermissions\n      delete @cacheControl\n      delete @onAfterUpload\n      delete @onAfterRemove\n      delete @onBeforeRemove\n      @onInitiateUpload = false\n      delete @integrityCheck\n      delete @downloadCallback\n      delete @interceptDownload\n      delete @continueUploadTTL\n      delete @responseHeaders\n\n      setTokenCookie = ->\n        Meteor.setTimeout ->\n          if (not cookie.has('x_mtok') and Meteor.connection._lastSessionId) or (cookie.has('x_mtok') and (cookie.get('x_mtok') isnt Meteor.connection._lastSessionId))\n            cookie.set 'x_mtok', Meteor.connection._lastSessionId, path: '/'\n          return\n        , 25\n        return\n\n      unsetTokenCookie = ->\n        cookie.remove('x_mtok', '/') if cookie.has 'x_mtok'\n        return\n\n      if Accounts?\n        Meteor.startup ->\n          setTokenCookie()\n          return\n        Accounts.onLogin ->\n          setTokenCookie()\n          return\n        Accounts.onLogout ->\n          unsetTokenCookie()\n          return\n\n      check @onbeforeunloadMessage, Match.OneOf String, Function\n\n      _URL = window.URL || window.webkitURL || window.mozURL || window.msURL || window.oURL || false\n      if window?.Worker and window?.Blob and _URL\n        @_supportWebWorker = true\n        @_webWorkerUrl     = _URL.createObjectURL(new Blob(['!function(a){\"use strict\";a.onmessage=function(b){var c=b.data.f.slice(b.data.cs*(b.data.cc-1),b.data.cs*b.data.cc);if(b.data.ib===!0)postMessage({bin:c,chunkId:b.data.cc});else{var d;a.FileReader?(d=new FileReader,d.onloadend=function(a){postMessage({bin:(d.result||a.srcElement||a.target).split(\",\")[1],chunkId:b.data.cc,s:b.data.s})},d.onerror=function(a){throw(a.target||a.srcElement).error},d.readAsDataURL(c)):a.FileReaderSync?(d=new FileReaderSync,postMessage({bin:d.readAsDataURL(c).split(\",\")[1],chunkId:b.data.cc})):postMessage({bin:null,chunkId:b.data.cc,error:\"File API is not supported in WebWorker!\"})}}}(this);'], {type: 'application/javascript'}))\n      else if window?.Worker\n        @_supportWebWorker = true\n        @_webWorkerUrl     = Meteor.absoluteUrl 'packages/ostrio_files/worker.min.js'\n      else\n        @_supportWebWorker = false\n\n    else\n      @strict            ?= true\n      @throttle          ?= false\n      @permissions       ?= parseInt('644', 8)\n      @parentDirPermissions ?= parseInt('755', 8)\n      @cacheControl      ?= 'public, max-age=31536000, s-maxage=31536000'\n      @onAfterUpload     ?= false\n      @onAfterRemove     ?= false\n      @onBeforeRemove    ?= false\n      @integrityCheck    ?= true\n      @_currentUploads   ?= {}\n      @downloadCallback  ?= false\n      @continueUploadTTL ?= 10800\n      @responseHeaders   ?= (responseCode, fileRef, versionRef) ->\n        headers = {}\n        switch responseCode\n          when '206'\n            headers['Pragma']            = 'private'\n            headers['Trailer']           = 'expires'\n            headers['Transfer-Encoding'] = 'chunked'\n          when '400'\n            headers['Cache-Control']     = 'no-cache'\n          when '416'\n            headers['Content-Range']     = \"bytes */#{versionRef.size}\"\n\n        headers['Connection']    = 'keep-alive'\n        headers['Content-Type']  = versionRef.type or 'application/octet-stream'\n        headers['Accept-Ranges'] = 'bytes'\n        return headers\n\n      if @public and not storagePath\n        throw new Meteor.Error 500, \"[FilesCollection.#{@collectionName}] \\\"storagePath\\\" must be set on \\\"public\\\" collections! Note: \\\"storagePath\\\" must be equal on be inside of your web/proxy-server (absolute) root.\"\n\n      console.info('[FilesCollection.storagePath] Set to:', @storagePath({})) if @debug\n\n      fs.mkdirs @storagePath({}), {mode: @parentDirPermissions}, (error) ->\n        if error\n          throw new Meteor.Error 401, \"[FilesCollection.#{self.collectionName}] Path \\\"#{self.storagePath({})}\\\" is not writable!\", error\n        return\n\n      check @strict, Boolean\n      check @throttle, Match.OneOf false, Number\n      check @permissions, Number\n      check @storagePath, Function\n      check @cacheControl, String\n      check @onAfterRemove, Match.OneOf false, Function\n      check @onAfterUpload, Match.OneOf false, Function\n      check @integrityCheck, Boolean\n      check @onBeforeRemove, Match.OneOf false, Function\n      check @downloadCallback, Match.OneOf false, Function\n      check @interceptDownload, Match.OneOf false, Function\n      check @continueUploadTTL, Number\n      check @responseHeaders, Match.OneOf Object, Function\n\n      @_preCollection = new Mongo.Collection '__pre_' + @collectionName\n      @_preCollection._ensureIndex {createdAt: 1}, {expireAfterSeconds: @continueUploadTTL, background: true}\n      _preCollectionCursor = @_preCollection.find {}, {\n        fields:\n          _id: 1\n          isFinished: 1\n      }\n      _preCollectionCursor.observe\n        changed: (doc) ->\n          if doc.isFinished\n            console.info \"[FilesCollection] [_preCollectionCursor.observe] [changed]: #{doc._id}\" if self.debug\n            self._preCollection.remove {_id: doc._id}, NOOP\n          return\n        removed: (doc) ->\n          # Free memory after upload is done\n          # Or if upload is unfinished\n          console.info \"[FilesCollection] [_preCollectionCursor.observe] [removed]: #{doc._id}\" if self.debug\n          if self._currentUploads?[doc._id]\n            self._currentUploads[doc._id].stop()\n            self._currentUploads[doc._id].end()\n\n            unless doc.isFinished\n              console.info \"[FilesCollection] [_preCollectionCursor.observe] [removeUnfinishedUpload]: #{doc._id}\" if self.debug\n              self._currentUploads[doc._id].abort()\n\n            delete self._currentUploads[doc._id]\n          return\n\n      @_createStream = (_id, path, opts) ->\n        return self._currentUploads[_id] = new writeStream path, opts.fileLength, opts, self.permissions\n\n      # This little function allows to continue upload\n      # even after server is restarted (*not on dev-stage*)\n      @_continueUpload = (_id) ->\n        if self._currentUploads?[_id]?.file\n          if not self._currentUploads[_id].aborted and not self._currentUploads[_id].ended\n            return self._currentUploads[_id].file\n          else\n            self._createStream _id, self._currentUploads[_id].file.file.path, self._currentUploads[_id].file\n            return self._currentUploads[_id].file\n        else\n          contUpld = self._preCollection.findOne {_id}\n          if contUpld\n            self._createStream _id, contUpld.file.path, contUpld.file\n          return contUpld\n\n    if not @schema\n      @schema =\n        size: type: Number\n        name: type: String\n        type: type: String\n        path: type: String\n        isVideo: type: Boolean\n        isAudio: type: Boolean\n        isImage: type: Boolean\n        isText: type: Boolean\n        isJSON: type: Boolean\n        isPDF: type: Boolean\n        extension:\n          type: String\n          optional: true\n        _storagePath: type: String\n        _downloadRoute: type: String\n        _collectionName: type: String\n        public:\n          type: Boolean\n          optional: true\n        meta:\n          type: Object\n          blackbox: true\n          optional: true\n        userId:\n          type: String\n          optional: true\n        updatedAt:\n          type: Date\n          optional: true\n        versions:\n          type: Object\n          blackbox: true\n\n    check @debug, Boolean\n    check @schema, Object\n    check @public, Boolean\n    check @protected, Match.OneOf Boolean, Function\n    check @chunkSize, Number\n    check @downloadRoute, String\n    check @namingFunction, Match.OneOf false, Function\n    check @onBeforeUpload, Match.OneOf false, Function\n    check @onInitiateUpload, Match.OneOf false, Function\n    check @allowClientCode, Boolean\n    check @ddp, Match.Any\n\n    if @public and @protected\n      throw new Meteor.Error 500, \"[FilesCollection.#{@collectionName}]: Files can not be public and protected at the same time!\"\n\n    @_checkAccess = (http) ->\n      if self.protected\n        {user, userId} = self._getUser http\n\n        if _.isFunction self.protected\n          if http?.params?._id\n            fileRef = self.collection.findOne http.params._id\n\n          result = if http then self.protected.call(_.extend(http, {user, userId}), (fileRef or null)) else self.protected.call {user, userId}, (fileRef or null)\n        else\n          result = !!userId\n\n        if (http and result is true) or not http\n          return true\n        else\n          rc = if _.isNumber(result) then result else 401\n          console.warn '[FilesCollection._checkAccess] WARN: Access denied!' if self.debug\n          if http\n            text = 'Access denied!'\n            http.response.writeHead rc,\n              'Content-Length': text.length\n              'Content-Type':   'text/plain'\n            http.response.end text\n          return false\n      else\n        return true\n\n    @_methodNames =\n      _Abort:  \"_FilesCollectionAbort_#{@collectionName}\"\n      _Write:  \"_FilesCollectionWrite_#{@collectionName}\"\n      _Start:  \"_FilesCollectionStart_#{@collectionName}\"\n      _Remove: \"_FilesCollectionRemove_#{@collectionName}\"\n\n    if Meteor.isServer\n      @on '_handleUpload', @_handleUpload\n      @on '_finishUpload', @_finishUpload\n\n      WebApp.connectHandlers.use (request, response, next) ->\n        if !!~request._parsedUrl.path.indexOf \"#{self.downloadRoute}/#{self.collectionName}/__upload\"\n          if request.method is 'POST'\n\n            handleError = (error) ->\n              console.warn \"[FilesCollection] [Upload] [HTTP] Exception:\", error\n              response.writeHead 500\n              response.end JSON.stringify {error}\n              return\n\n            body = ''\n            request.on 'data', (data) -> bound ->\n              body += data\n              return\n\n            request.on 'end', -> bound ->\n              try\n                if request.headers['x-mtok'] and Meteor.server.sessions?[request.headers['x-mtok']]\n                  user = userId: Meteor.server.sessions[request.headers['x-mtok']]?.userId\n                else\n                  user = self._getUser {request, response}\n\n                unless request.headers['x-start'] is '1'\n                  opts = fileId: request.headers['x-fileid']\n                  if request.headers['x-eof'] is '1'\n                    opts.eof = true\n                  else\n                    if typeof Buffer.from is 'function'\n                      try\n                        opts.binData = Buffer.from body, 'base64'\n                      catch e\n                        opts.binData = new Buffer body, 'base64'\n                    else\n                      opts.binData = new Buffer body, 'base64'\n                    opts.chunkId = parseInt request.headers['x-chunkid']\n\n                  _continueUpload = self._continueUpload opts.fileId\n                  unless _continueUpload\n                    throw new Meteor.Error 408, 'Can\\'t continue upload, session expired. Start upload again.'\n\n                  {result, opts}  = self._prepareUpload _.extend(opts, _continueUpload), user.userId, 'HTTP'\n\n                  if opts.eof\n                    self._handleUpload result, opts, ->\n                      response.writeHead 200\n                      result.file.meta = fixJSONStringify result.file.meta if result?.file?.meta\n                      response.end JSON.stringify result\n                      return\n                    return\n                  else\n                    self.emit '_handleUpload', result, opts, NOOP\n\n                  response.writeHead 204\n                  response.end()\n\n                else\n                  opts           = JSON.parse body\n                  opts.___s      = true\n                  console.info \"[FilesCollection] [File Start HTTP] #{opts.file.name} - #{opts.fileId}\" if self.debug\n                  opts.file.meta = fixJSONParse opts.file.meta if opts?.file?.meta\n                  {result}       = self._prepareUpload _.clone(opts), user.userId, 'HTTP Start Method'\n                  if self.collection.findOne result._id\n                    throw new Meteor.Error 400, 'Can\\'t start upload, data substitution detected!'\n                  opts._id       = opts.fileId\n                  opts.createdAt = new Date()\n                  self._preCollection.insert _.omit(opts, '___s')\n                  self._createStream result._id, result.path, _.omit(opts, '___s')\n\n                  if opts.returnMeta\n                    response.writeHead 200\n                    response.end JSON.stringify {\n                      uploadRoute: \"#{self.downloadRoute}/#{self.collectionName}/__upload\"\n                      file: result\n                    }\n                  else\n                    response.writeHead 204\n                    response.end()\n              catch error\n                handleError error\n              return\n          else\n            next()\n          return\n\n        unless self.public\n          if !!~request._parsedUrl.path.indexOf \"#{self.downloadRoute}/#{self.collectionName}\"\n            uri = request._parsedUrl.path.replace \"#{self.downloadRoute}/#{self.collectionName}\", ''\n            if uri.indexOf('/') is 0\n              uri = uri.substring 1\n\n            uris = uri.split '/'\n            if uris.length is 3\n              params =\n                query: if request._parsedUrl.query then JSON.parse('{\"' + decodeURI(request._parsedUrl.query).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g,'\":\"') + '\"}') else {}\n                _id: uris[0]\n                version: uris[1]\n                name: uris[2]\n              http = {request, response, params}\n              self.download http, uris[1], self.collection.findOne(uris[0]) if self._checkAccess http\n            else\n              next()\n          else\n            next()\n        else\n          if !!~request._parsedUrl.path.indexOf \"#{self.downloadRoute}\"\n            uri = request._parsedUrl.path.replace \"#{self.downloadRoute}\", ''\n            if uri.indexOf('/') is 0\n              uri = uri.substring 1\n\n            uris  = uri.split '/'\n            _file = uris[uris.length - 1]\n            if _file\n              if !!~_file.indexOf '-'\n                version = _file.split('-')[0]\n                _file   = _file.split('-')[1].split('?')[0]\n              else\n                version = 'original'\n                _file   = _file.split('?')[0]\n\n              params =\n                query: if request._parsedUrl.query then JSON.parse('{\"' + decodeURI(request._parsedUrl.query).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g,'\":\"') + '\"}') else {}\n                file: _file\n                _id: _file.split('.')[0]\n                version: version\n                name: _file\n              http = {request, response, params}\n              self.download http, version, self.collection.findOne params._id\n            else\n              next()\n          else\n            next()\n        return\n\n      _methods = {}\n\n\n      # Method used to remove file\n      # from Client side\n      _methods[self._methodNames._Remove] = (selector) ->\n        check selector, Match.OneOf String, Object\n        console.info \"[FilesCollection] [Unlink Method] [.remove(#{selector})]\" if self.debug\n\n        if self.allowClientCode\n          if self.onBeforeRemove and _.isFunction self.onBeforeRemove\n            user = false\n            userFuncs = {\n              userId: @userId\n              user: -> if Meteor.users then Meteor.users.findOne(@userId) else null\n            }\n\n            unless self.onBeforeRemove.call userFuncs, (self.find(selector) or null)\n              throw new Meteor.Error 403, '[FilesCollection] [remove] Not permitted!'\n\n          self.remove selector\n          return true\n        else\n          throw new Meteor.Error 401, '[FilesCollection] [remove] Run code from client is not allowed!'\n        return\n\n\n      # Method used to receive \"first byte\" of upload\n      # and all file's meta-data, so\n      # it won't be transferred with every chunk\n      # Basically it prepares everything\n      # So user can pause/disconnect and\n      # continue upload later, during `continueUploadTTL`\n      _methods[self._methodNames._Start] = (opts, returnMeta) ->\n        check opts, {\n          file:       Object\n          fileId:     String\n          FSName:     Match.Optional String\n          chunkSize:  Number\n          fileLength: Number\n        }\n\n        check returnMeta, Match.Optional Boolean\n\n        console.info \"[FilesCollection] [File Start Method] #{opts.file.name} - #{opts.fileId}\" if self.debug\n        opts.___s      = true\n        {result}       = self._prepareUpload _.clone(opts), @userId, 'DDP Start Method'\n        if self.collection.findOne result._id\n          throw new Meteor.Error 400, 'Can\\'t start upload, data substitution detected!'\n        opts._id       = opts.fileId\n        opts.createdAt = new Date()\n        self._preCollection.insert _.omit(opts, '___s')\n        self._createStream result._id, result.path, _.omit(opts, '___s')\n\n        if returnMeta\n          return {\n            uploadRoute: \"#{self.downloadRoute}/#{self.collectionName}/__upload\"\n            file: result\n          }\n        else\n          return true\n\n\n      # Method used to write file chunks\n      # it receives very limited amount of meta-data\n      # This method also responsible for EOF\n      _methods[self._methodNames._Write] = (opts) ->\n        check opts, {\n          eof:     Match.Optional Boolean\n          fileId:  String\n          binData: Match.Optional String\n          chunkId: Match.Optional Number\n        }\n\n        if opts.binData\n          if typeof Buffer.from is 'function'\n            try\n              opts.binData = Buffer.from opts.binData, 'base64'\n            catch e\n              opts.binData = new Buffer opts.binData, 'base64'\n          else\n            opts.binData = new Buffer opts.binData, 'base64'\n\n        _continueUpload = self._continueUpload opts.fileId\n        unless _continueUpload\n          throw new Meteor.Error 408, 'Can\\'t continue upload, session expired. Start upload again.'\n\n        @unblock()\n        {result, opts} = self._prepareUpload _.extend(opts, _continueUpload), @userId, 'DDP'\n\n        if opts.eof\n          try\n            return Meteor.wrapAsync(self._handleUpload.bind(self, result, opts))()\n          catch e\n            console.warn \"[FilesCollection] [Write Method] [DDP] Exception:\", e if self.debug\n            throw e\n        else\n          self.emit '_handleUpload', result, opts, NOOP\n        return true\n\n      # Method used to Abort upload\n      # - Feeing memory by .end()ing writableStreams\n      # - Removing temporary record from @_preCollection\n      # - Removing record from @collection\n      # - .unlink()ing chunks from FS\n      _methods[self._methodNames._Abort] = (_id) ->\n        check _id, String\n\n        _continueUpload = self._continueUpload _id\n        console.info \"[FilesCollection] [Abort Method]: #{_id} - #{_continueUpload?.file?.path}\" if self.debug\n\n        if self._currentUploads?[_id]\n          self._currentUploads[_id].stop()\n          self._currentUploads[_id].abort()\n\n        if _continueUpload\n          self._preCollection.remove {_id}\n          self.remove {_id}\n          self.unlink {_id, path: _continueUpload.file.path} if _continueUpload?.file?.path\n        return true\n\n      Meteor.methods _methods\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name _prepareUpload\n  @summary Internal method. Used to optimize received data and check upload permission\n  @returns {Object}\n  ###\n  _prepareUpload: if Meteor.isServer then (opts, userId, transport) ->\n    opts.eof       ?= false\n    opts.binData   ?= 'EOF'\n    opts.chunkId   ?= -1\n    opts.FSName    ?= opts.fileId\n    opts.file.meta ?= {}\n\n    console.info \"[FilesCollection] [Upload] [#{transport}] Got ##{opts.chunkId}/#{opts.fileLength} chunks, dst: #{opts.file.name or opts.file.fileName}\" if @debug\n\n    fileName = @_getFileName opts.file\n    {extension, extensionWithDot} = @_getExt fileName\n\n    result           = opts.file\n    result.name      = fileName\n    result.meta      = opts.file.meta\n    result.extension = extension\n    result.ext       = extension\n    result._id       = opts.fileId\n    result.userId    = userId or null\n    result.path      = \"#{@storagePath(result)}#{nodePath.sep}#{opts.FSName}#{extensionWithDot}\"\n    result           = _.extend result, @_dataToSchema result\n\n    if @onBeforeUpload and _.isFunction @onBeforeUpload\n      ctx = _.extend {\n        file: opts.file\n      }, {\n        chunkId: opts.chunkId\n        userId:  result.userId\n        user:    -> if Meteor.users then Meteor.users.findOne(result.userId) else null\n        eof:     opts.eof\n      }\n      isUploadAllowed = @onBeforeUpload.call ctx, result\n\n      if isUploadAllowed isnt true\n        throw new Meteor.Error(403, if _.isString(isUploadAllowed) then isUploadAllowed else '@onBeforeUpload() returned false')\n      else\n        if opts.___s is true and @onInitiateUpload and _.isFunction @onInitiateUpload\n          @onInitiateUpload.call ctx, result\n\n    return {result, opts}\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name _finishUpload\n  @summary Internal method. Finish upload, close Writable stream, add record to MongoDB and flush used memory\n  @returns {undefined}\n  ###\n  _finishUpload: if Meteor.isServer then (result, opts, cb) ->\n    console.info \"[FilesCollection] [Upload] [finish(ing)Upload] -> #{result.path}\" if @debug\n    fs.chmod result.path, @permissions, NOOP\n    self          = @\n    result.type   = @_getMimeType opts.file\n    result.public = @public\n    @_updateFileTypes result\n\n    @collection.insert _.clone(result), (error, _id) ->\n      if error\n        cb and cb error\n        console.error '[FilesCollection] [Upload] [_finishUpload] Error:', error if self.debug\n      else\n        self._preCollection.update {_id: opts.fileId}, {$set: {isFinished: true}}\n        result._id = _id\n        console.info \"[FilesCollection] [Upload] [finish(ed)Upload] -> #{result.path}\" if self.debug\n        self.onAfterUpload and self.onAfterUpload.call self, result\n        self.emit 'afterUpload', result\n        cb and cb null, result\n      return\n    return\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name _handleUpload\n  @summary Internal method to handle upload process, pipe incoming data to Writable stream\n  @returns {undefined}\n  ###\n  _handleUpload: if Meteor.isServer then (result, opts, cb) ->\n    try\n      if opts.eof\n        self = @\n        @_currentUploads[result._id].end -> bound ->\n          self.emit '_finishUpload', result, opts, cb\n          return\n      else\n        @_currentUploads[result._id].write opts.chunkId, opts.binData, cb\n    catch e\n      console.warn \"[_handleUpload] [EXCEPTION:]\", e if @debug\n      cb and cb e\n    return\n  else undefined\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _getMimeType\n  @param {Object} fileData - File Object\n  @summary Returns file's mime-type\n  @returns {String}\n  ###\n  _getMimeType: (fileData) ->\n    check fileData, Object\n    mime = fileData.type if fileData?.type\n    if Meteor.isServer and fileData.path and (not mime or not _.isString mime)\n      try\n        buf = new Buffer 262\n        fd  = fs.openSync fileData.path, 'r'\n        br  = fs.readSync fd, buf, 0, 262, 0\n        fs.close fd, NOOP\n        buf = buf.slice 0, br if br < 262\n        {mime, ext} = fileType buf\n      catch error\n    if not mime or not _.isString mime\n      mime = 'application/octet-stream'\n    return mime\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _getFileName\n  @param {Object} fileData - File Object\n  @summary Returns file's name\n  @returns {String}\n  ###\n  _getFileName: (fileData) ->\n    fileName = fileData.name or fileData.fileName\n    if _.isString(fileName) and fileName.length > 0\n      return (fileData.name or fileData.fileName).replace(/\\.\\./g, '').replace /\\//g, ''\n    else\n      return ''\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _getUser\n  @summary Returns object with `userId` and `user()` method which return user's object\n  @returns {Object}\n  ###\n  _getUser: (http) ->\n    result =\n      user: -> return null\n      userId: null\n\n    if Meteor.isServer\n      if http\n        mtok = null\n        if http.request.headers['x-mtok']\n          mtok = http.request.headers['x-mtok']\n        else\n          cookie = http.request.Cookies\n          if cookie.has 'x_mtok'\n            mtok = cookie.get 'x_mtok'\n\n        if mtok\n          userId = Meteor.server.sessions?[mtok]?.userId\n          if userId\n            result.user   = -> Meteor.users.findOne userId\n            result.userId = userId\n    else\n      if Meteor.userId?()\n        result.user = -> return Meteor.user()\n        result.userId = Meteor.userId()\n\n    return result\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _getExt\n  @param {String} FileName - File name\n  @summary Get extension from FileName\n  @returns {Object}\n  ###\n  _getExt: (fileName) ->\n    if !!~fileName.indexOf('.')\n      extension = (fileName.split('.').pop().split('?')[0] or '').toLowerCase()\n      return { ext: extension, extension, extensionWithDot: '.' + extension }\n    else\n      return { ext: '', extension: '', extensionWithDot: '' }\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _updateFileTypes\n  @param {Object} data - File data\n  @summary Internal method. Classify file based on 'type' field\n  ###\n  _updateFileTypes: (data) ->\n    data.isVideo  = /^video\\//i.test data.type\n    data.isAudio  = /^audio\\//i.test data.type\n    data.isImage  = /^image\\//i.test data.type\n    data.isText   = /^text\\//i.test data.type\n    data.isJSON   = /^application\\/json$/i.test data.type\n    data.isPDF    = /^application\\/(x-)?pdf$/i.test data.type\n    return\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _dataToSchema\n  @param {Object} data - File data\n  @summary Internal method. Build object in accordance with default schema from File data\n  @returns {Object}\n  ###\n  _dataToSchema: (data) ->\n    ds =\n      name:       data.name\n      extension:  data.extension\n      path:       data.path\n      meta:       data.meta\n      type:       data.type\n      size:       data.size\n      userId:     data.userId or null\n      versions:\n        original:\n          path: data.path\n          size: data.size\n          type: data.type\n          extension: data.extension\n      _downloadRoute:  data._downloadRoute or @downloadRoute\n      _collectionName: data._collectionName or @collectionName\n    @_updateFileTypes ds\n    ds._storagePath = data._storagePath or @storagePath(_.extend(data, ds))\n    return ds\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name write\n  @param {Buffer} buffer - Binary File's Buffer\n  @param {Object} opts - Object with file-data\n  @param {String} opts.name - File name, alias: `fileName`\n  @param {String} opts.type - File mime-type\n  @param {Object} opts.meta - File additional meta-data\n  @param {String} opts.userId - UserId, default *null*\n  @param {Function} callback - function(error, fileObj){...}\n  @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n  @summary Write buffer to FS and add to FilesCollection Collection\n  @returns {FilesCollection} Instance\n  ###\n  write: if Meteor.isServer then (buffer, opts = {}, callback, proceedAfterUpload) ->\n    console.info '[FilesCollection] [write()]' if @debug\n\n    if _.isFunction opts\n      proceedAfterUpload = callback\n      callback = opts\n      opts     = {}\n    else if _.isBoolean callback\n      proceedAfterUpload = callback\n    else if _.isBoolean opts\n      proceedAfterUpload = opts\n\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n    check proceedAfterUpload, Match.Optional Boolean\n\n    fileId   = Random.id()\n    FSName   = if @namingFunction then @namingFunction() else fileId\n    fileName = if (opts.name or opts.fileName) then (opts.name or opts.fileName) else FSName\n\n    {extension, extensionWithDot} = @_getExt fileName\n\n    self         = @\n    opts        ?= {}\n    opts.path    = \"#{@storagePath(opts)}#{nodePath.sep}#{FSName}#{extensionWithDot}\"\n    opts.type    = @_getMimeType opts\n    opts.meta   ?= {}\n    opts.size   ?= buffer.length\n\n    result = @_dataToSchema\n      name:      fileName\n      path:      opts.path\n      meta:      opts.meta\n      type:      opts.type\n      size:      opts.size\n      userId:    opts.userId\n      extension: extension\n\n    result._id = fileId\n\n    stream = fs.createWriteStream opts.path, {flags: 'w', mode: @permissions}\n    stream.end buffer, (error) -> bound ->\n      if error\n        callback and callback error\n      else\n        self.collection.insert result, (error, _id) ->\n          if error\n            callback and callback error\n            console.warn \"[FilesCollection] [write] [insert] Error: #{fileName} -> #{self.collectionName}\", error if self.debug\n          else\n            fileRef = self.collection.findOne _id\n            callback and callback null, fileRef\n            if proceedAfterUpload is true\n              self.onAfterUpload and self.onAfterUpload.call self, fileRef\n              self.emit 'afterUpload', fileRef\n            console.info \"[FilesCollection] [write]: #{fileName} -> #{self.collectionName}\" if self.debug\n          return\n      return\n    return @\n  else\n    undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name load\n  @param {String} url - URL to file\n  @param {Object} opts - Object with file-data\n  @param {String} opts.name - File name, alias: `fileName`\n  @param {String} opts.type - File mime-type\n  @param {Object} opts.meta - File additional meta-data\n  @param {String} opts.userId - UserId, default *null*\n  @param {Function} callback - function(error, fileObj){...}\n  @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n  @summary Download file, write stream to FS and add to FilesCollection Collection\n  @returns {FilesCollection} Instance\n  ###\n  load: if Meteor.isServer then (url, opts, callback, proceedAfterUpload) ->\n    console.info \"[FilesCollection] [load(#{url}, #{JSON.stringify(opts)}, callback)]\" if @debug\n\n    if _.isFunction opts\n      proceedAfterUpload = callback\n      callback = opts\n      opts     = {}\n    else if _.isBoolean callback\n      proceedAfterUpload = callback\n    else if _.isBoolean opts\n      proceedAfterUpload = opts\n\n    check url, String\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n    check proceedAfterUpload, Match.Optional Boolean\n\n    self      = @\n    opts     ?= {}\n    fileId    = Random.id()\n    FSName    = if @namingFunction then @namingFunction() else fileId\n    pathParts = url.split('/')\n    fileName  = if (opts.name or opts.fileName) then (opts.name or opts.fileName) else pathParts[pathParts.length - 1] or FSName\n\n    {extension, extensionWithDot} = @_getExt fileName\n    opts.meta ?= {}\n    opts.path  = \"#{@storagePath(opts)}#{nodePath.sep}#{FSName}#{extensionWithDot}\"\n\n    storeResult = (result, callback) ->\n      result._id = fileId\n\n      self.collection.insert result, (error, _id) ->\n        if error\n          callback and callback error\n          console.error \"[FilesCollection] [load] [insert] Error: #{fileName} -> #{self.collectionName}\", error if self.debug\n        else\n          fileRef = self.collection.findOne _id\n          callback and callback null, fileRef\n          if proceedAfterUpload is true\n            self.onAfterUpload and self.onAfterUpload.call self, fileRef\n            self.emit 'afterUpload', fileRef\n          console.info \"[FilesCollection] [load] [insert] #{fileName} -> #{self.collectionName}\" if self.debug\n        return\n      return\n\n    request.get(url).on('error', (error)-> bound ->\n      callback and callback error\n      console.error \"[FilesCollection] [load] [request.get(#{url})] Error:\", error if self.debug\n    ).on('response', (response) -> bound ->\n      response.on 'end', -> bound ->\n        console.info \"[FilesCollection] [load] Received: #{url}\" if self.debug\n        result = self._dataToSchema\n          name:      fileName\n          path:      opts.path\n          meta:      opts.meta\n          type:      opts.type or response.headers['content-type'] or self._getMimeType {path: opts.path}\n          size:      opts.size or parseInt(response.headers['content-length'] or 0)\n          userId:    opts.userId\n          extension: extension\n\n        unless result.size\n          fs.stat opts.path, (error, stats) -> bound ->\n            if error\n              callback and callback error\n            else\n              result.versions.original.size = result.size = stats.size\n              storeResult result, callback\n            return\n        else\n          storeResult result, callback\n        return\n      return\n\n    ).pipe fs.createWriteStream(opts.path, {flags: 'w', mode: @permissions})\n\n    return @\n  else\n    undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name addFile\n  @param {String} path          - Path to file\n  @param {String} opts          - [Optional] Object with file-data\n  @param {String} opts.type     - [Optional] File mime-type\n  @param {Object} opts.meta     - [Optional] File additional meta-data\n  @param {Object} opts.fileName - [Optional] File name, if not specified file name and extension will be taken from path\n  @param {String} opts.userId   - [Optional] UserId, default *null*\n  @param {Function} callback    - [Optional] function(error, fileObj){...}\n  @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n  @summary Add file from FS to FilesCollection\n  @returns {FilesCollection} Instance\n  ###\n  addFile: if Meteor.isServer then (path, opts, callback, proceedAfterUpload) ->\n    console.info \"[FilesCollection] [addFile(#{path})]\" if @debug\n\n    if _.isFunction opts\n      proceedAfterUpload = callback\n      callback = opts\n      opts     = {}\n    else if _.isBoolean callback\n      proceedAfterUpload = callback\n    else if _.isBoolean opts\n      proceedAfterUpload = opts\n\n    throw new Meteor.Error 403, 'Can not run [addFile] on public collection! Just Move file to root of your server, then add record to Collection' if @public\n    check path, String\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n    check proceedAfterUpload, Match.Optional Boolean\n\n    self = @\n    fs.stat path, (error, stats) -> bound ->\n      if error\n        callback and callback error\n      else if stats.isFile()\n        opts      ?= {}\n        opts.path  = path\n\n        unless opts.fileName\n          pathParts     = path.split nodePath.sep\n          opts.fileName = pathParts[pathParts.length - 1]\n\n        {extension, extensionWithDot} = self._getExt opts.fileName\n\n        opts.type ?= self._getMimeType opts\n        opts.meta ?= {}\n        opts.size ?= stats.size\n\n        result = self._dataToSchema\n          name:         opts.fileName\n          path:         path\n          meta:         opts.meta\n          type:         opts.type\n          size:         opts.size\n          userId:       opts.userId\n          extension:    extension\n          _storagePath: path.replace \"#{nodePath.sep}#{opts.fileName}\", ''\n\n        self.collection.insert result, (error, _id) ->\n          if error\n            callback and callback error\n            console.warn \"[FilesCollection] [addFile] [insert] Error: #{fileName} -> #{self.collectionName}\", error if self.debug\n          else\n            fileRef = self.collection.findOne _id\n            callback and callback null, fileRef\n            if proceedAfterUpload is true\n              self.onAfterUpload and self.onAfterUpload.call self, fileRef\n              self.emit 'afterUpload', fileRef\n            console.info \"[FilesCollection] [addFile]: #{fileName} -> #{self.collectionName}\" if self.debug\n          return\n      else\n        callback and callback new Meteor.Error 400, \"[FilesCollection] [addFile(#{path})]: File does not exist\"\n      return\n\n    return @\n  else\n    undefined\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name findOne\n  @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n  @param {Object} options - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#sortspecifiers)\n  @summary Find and return Cursor for matching document Object\n  @returns {FileCursor} Instance\n  ###\n  findOne: (selector, options) ->\n    console.info \"[FilesCollection] [findOne(#{JSON.stringify(selector)}, #{JSON.stringify(options)})]\" if @debug\n    check selector, Match.Optional Match.OneOf Object, String, Boolean, Number, null\n    check options, Match.Optional Object\n\n    selector = {} unless arguments.length\n    doc = @collection.findOne selector, options\n    return if doc then new FileCursor(doc, @) else doc\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name find\n  @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n  @param {Object}        options  - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#sortspecifiers)\n  @summary Find and return Cursor for matching documents\n  @returns {FilesCursor} Instance\n  ###\n  find: (selector, options) ->\n    console.info \"[FilesCollection] [find(#{JSON.stringify(selector)}, #{JSON.stringify(options)})]\" if @debug\n    check selector, Match.Optional Match.OneOf Object, String, Boolean, Number, null\n    check options, Match.Optional Object\n\n    selector = {} unless arguments.length\n    return new FilesCursor selector, options, @\n\n  ###\n  @locus Client\n  @memberOf FilesCollection\n  @name insert\n  @see https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n  @param {Object} config - Configuration object with next properties:\n    {File|Object} file           - HTML5 `files` item, like in change event: `e.currentTarget.files[0]`\n    {Object}      meta           - Additional data as object, use later for search\n    {Boolean}     allowWebWorkers- Allow/Deny WebWorkers usage\n    {Number|dynamic} streams     - Quantity of parallel upload streams, default: 2\n    {Number|dynamic} chunkSize   - Chunk size for upload\n    {String}      transport      - Upload transport `http` or `ddp`\n    {Object}      ddp            - Custom DDP connection. Object returned form `DDP.connect()`\n    {Function}    onUploaded     - Callback triggered when upload is finished, with two arguments `error` and `fileRef`\n    {Function}    onStart        - Callback triggered when upload is started after all successful validations, with two arguments `error` (always null) and `fileRef`\n    {Function}    onError        - Callback triggered on error in upload and/or FileReader, with two arguments `error` and `fileData`\n    {Function}    onProgress     - Callback triggered when chunk is sent, with only argument `progress`\n    {Function}    onBeforeUpload - Callback triggered right before upload is started:\n        return true to continue\n        return false to abort upload\n  @param {Boolean} autoStart     - Start upload immediately. If set to false, you need manually call .start() method on returned class. Useful to set EventListeners.\n  @summary Upload file to server over DDP or HTTP\n  @returns {UploadInstance} Instance. UploadInstance has next properties:\n    {ReactiveVar} onPause  - Is upload process on the pause?\n    {ReactiveVar} state    - active|paused|aborted|completed\n    {ReactiveVar} progress - Current progress in percentage\n    {Function}    pause    - Pause upload process\n    {Function}    continue - Continue paused upload process\n    {Function}    toggle   - Toggle continue/pause if upload process\n    {Function}    abort    - Abort upload\n    {Function}    readAsDataURL - Current file as data URL, use to create image preview and etc. Be aware of big files, may lead to browser crash\n  ###\n  insert: if Meteor.isClient then (config, autoStart = true) ->\n    return (new @_UploadInstance(config, @))[if autoStart then 'start' else 'manual']()\n  else undefined\n\n  ###\n  @locus Client\n  @memberOf FilesCollection\n  @name _UploadInstance\n  @class UploadInstance\n  @summary Internal Class, used in upload\n  ###\n  _UploadInstance: if Meteor.isClient then class UploadInstance\n    __proto__: EventEmitter.prototype\n    constructor: (@config, @collection) ->\n      EventEmitter.call @\n      console.info '[FilesCollection] [insert()]' if @collection.debug\n      self                     = @\n      @config.ddp             ?= @collection.ddp\n      @config.meta            ?= {}\n      @config.streams         ?= 2\n      @config.streams          = 2 if @config.streams < 1\n      @config.transport       ?= 'ddp'\n      @config.chunkSize       ?= @collection.chunkSize\n      @config.allowWebWorkers ?= true\n      @config.transport        = @config.transport.toLowerCase()\n\n      check @config, {\n        file:            Match.Any\n        fileName:        Match.Optional String\n        meta:            Match.Optional Object\n        type:            Match.Optional String\n        onError:         Match.Optional Function\n        onAbort:         Match.Optional Function\n        streams:         Match.OneOf 'dynamic', Number\n        onStart:         Match.Optional Function\n        isBase64:        Match.Optional Boolean\n        transport:       Match.OneOf 'http', 'ddp'\n        chunkSize:       Match.OneOf 'dynamic', Number\n        onUploaded:      Match.Optional Function\n        onProgress:      Match.Optional Function\n        onBeforeUpload:  Match.Optional Function\n        allowWebWorkers: Boolean\n        ddp:             Match.Any\n      }\n\n      if not @config.fileName and not @config.file.name\n        throw new Meteor.Error 400, '\"fileName\" must me specified for base64 upload!'\n\n      if @config.isBase64 is true\n        check @config.file, String\n        if !!~@config.file.indexOf('data:')\n          @config.file = @config.file.replace 'data:', ''\n        if !!~@config.file.indexOf(',')\n          _file = @config.file.split ','\n          @fileData =\n            size: Math.floor (_file[1].replace(/\\=/g, '')).length / 4 * 3\n            type: _file[0].split(';')[0]\n            name: @config.fileName\n            meta: @config.meta\n          @config.file = _file[1]\n        else if not @config.type\n          throw new Meteor.Error 400, '\"type\" must me specified for base64 upload! And represent mime-type of the file'\n        else\n          @fileData =\n            size: Math.floor (@config.file.replace(/\\=/g, '')).length / 4 * 3\n            type: @config.type\n            name: @config.fileName\n            meta: @config.meta\n\n      if @config.file\n        unless @config.isBase64\n          @fileData =\n            size: @config.file.size\n            type: @config.type or @config.file.type\n            name: @config.fileName or @config.file.name\n            meta: @config.meta\n\n        if @collection.debug\n          console.time('insert ' + @fileData.name)\n          console.time('loadFile ' + @fileData.name)\n\n        if @collection._supportWebWorker and @config.allowWebWorkers\n          try\n            @worker = new Worker @collection._webWorkerUrl\n          catch wwError\n            @worker = false\n            console.warn '[FilesCollection] [insert] [create WebWorker]: Can\\'t create WebWorker, fallback to MainThread', wwError if @collection.debug\n        else\n          @worker = null\n\n        @startTime    = {}\n        @config.debug = @collection.debug\n        @currentChunk = 0\n        @transferTime = 0\n        @trackerComp  = null\n        @sentChunks   = 0\n        @fileLength   = 1\n        @EOFsent      = false\n        @fileId       = Random.id()\n        @FSName       = if @collection.namingFunction then @collection.namingFunction(@fileData) else @fileId\n        @pipes        = []\n\n        @fileData = _.extend @fileData, @collection._getExt(self.fileData.name), {mime: @collection._getMimeType(@fileData)}\n        @fileData['mime-type'] = @fileData.mime\n\n        @result = new @collection._FileUpload _.extend self.config, {@fileData, @fileId, _Abort: @collection._methodNames._Abort}\n\n        @beforeunload = (e) ->\n          message = if _.isFunction(self.collection.onbeforeunloadMessage) then self.collection.onbeforeunloadMessage.call(self.result, self.fileData) else self.collection.onbeforeunloadMessage\n          e.returnValue = message if e\n          return message\n        @result.config.beforeunload = @beforeunload\n        window.addEventListener 'beforeunload', @beforeunload, false\n\n        @result.config._onEnd = -> self.emitEvent '_onEnd'\n\n        @addListener 'end', @end\n        @addListener 'start', @start\n        @addListener 'upload', @upload\n        @addListener 'sendEOF', @sendEOF\n        @addListener 'prepare', @prepare\n        @addListener 'sendChunk', @sendChunk\n        @addListener 'proceedChunk', @proceedChunk\n        @addListener 'createStreams', @createStreams\n\n        @addListener 'calculateStats', _.throttle ->\n          _t = (self.transferTime / self.sentChunks) / self.config.streams\n          self.result.estimateTime.set (_t * (self.fileLength - self.sentChunks))\n          self.result.estimateSpeed.set (self.config.chunkSize / (_t / 1000))\n          progress = Math.round((self.sentChunks / self.fileLength) * 100)\n          self.result.progress.set progress\n          self.config.onProgress and self.config.onProgress.call self.result, progress, self.fileData\n          self.result.emitEvent 'progress', [progress, self.fileData]\n          return\n        , 250\n\n        @addListener '_onEnd', ->\n          Meteor.clearInterval(self.result.estimateTimer) if self.result.estimateTimer\n          self.worker.terminate() if self.worker\n          self.trackerComp.stop() if self.trackerComp\n          window.removeEventListener('beforeunload', self.beforeunload, false) if self.beforeunload\n          self.result.progress.set(0) if self.result\n      else\n        throw new Meteor.Error 500, '[FilesCollection] [insert] Have you forget to pass a File itself?'\n\n    end: (error, data) ->\n      console.timeEnd('insert ' + @fileData.name) if @collection.debug\n      @emitEvent '_onEnd'\n      @result.emitEvent 'uploaded', [error, data]\n      @config.onUploaded and @config.onUploaded.call @result, error, data\n      if error\n        console.error '[FilesCollection] [insert] [end] Error:', error if @collection.debug\n        @result.abort()\n        @result.state.set 'aborted'\n        @result.emitEvent 'error', [error, @fileData]\n        @config.onError and @config.onError.call @result, error, @fileData\n      else\n        @result.state.set 'completed'\n        @collection.emitEvent 'afterUpload', [data]\n      @result.emitEvent 'end', [error, (data or @fileData)]\n      return @result\n\n    sendChunk: (evt) ->\n      self = @\n      opts =\n        fileId:  @fileId\n        binData: evt.data.bin\n        chunkId: evt.data.chunkId\n\n      if @config.isBase64\n        pad = opts.binData.length % 4\n        if pad\n          p = 0\n          while p < pad\n            opts.binData += '='\n            p++\n\n      @emitEvent 'data', [evt.data.bin]\n      if @pipes.length\n        for pipeFunc in @pipes\n          opts.binData = pipeFunc opts.binData\n\n      if @fileLength is evt.data.chunkId\n        console.timeEnd('loadFile ' + @fileData.name) if @collection.debug\n        @emitEvent 'readEnd'\n\n      if opts.binData\n        if @config.transport is 'ddp'\n          @config.ddp.call @collection._methodNames._Write, opts, (error) ->\n            self.transferTime += (+new Date) - self.startTime[opts.chunkId]\n            if error\n              if self.result.state.get() isnt 'aborted'\n                self.emitEvent 'end', [error]\n            else\n              ++self.sentChunks\n              if self.sentChunks >= self.fileLength\n                self.emitEvent 'sendEOF'\n              else if self.currentChunk < self.fileLength\n                self.emitEvent 'upload'\n              self.emitEvent 'calculateStats'\n            return\n        else\n          HTTP.call 'POST', \"#{@collection.downloadRoute}/#{@collection.collectionName}/__upload\", {\n            content: opts.binData\n            headers:\n              'x-mtok':       Meteor.connection?._lastSessionId or null\n              'x-fileid':     opts.fileId\n              'x-chunkid':    opts.chunkId\n              'content-type': 'text/plain'\n          }, (error) ->\n            self.transferTime += (+new Date) - self.startTime[opts.chunkId]\n            if error\n              if \"#{error}\" is \"Error: network\"\n                self.result.pause()\n              else\n                if self.result.state.get() isnt 'aborted'\n                  self.emitEvent 'end', [error]\n            else\n              ++self.sentChunks\n              if self.sentChunks >= self.fileLength\n                self.emitEvent 'sendEOF'\n              else if self.currentChunk < self.fileLength\n                self.emitEvent 'upload'\n              self.emitEvent 'calculateStats'\n            return\n      return\n\n    sendEOF: ->\n      unless @EOFsent\n        @EOFsent = true\n        self = @\n        opts =\n          eof:    true\n          fileId: @fileId\n\n        if @config.transport is 'ddp'\n          @config.ddp.call @collection._methodNames._Write, opts, ->\n            self.emitEvent 'end', arguments\n            return\n        else\n          HTTP.call 'POST', \"#{@collection.downloadRoute}/#{@collection.collectionName}/__upload\", {\n            content: ''\n            headers:\n              'x-mtok':       Meteor.connection?._lastSessionId or null\n              'x-eof':        '1'\n              'x-fileId':     opts.fileId\n              'content-type': 'text/plain'\n          }, (error, result) ->\n            result      = JSON.parse result?.content or {}\n            result.meta = fixJSONParse result.meta if result?.meta\n            self.emitEvent 'end', [error, result]\n            return\n      return\n\n    proceedChunk: (chunkId) ->\n      self  = @\n      chunk = @config.file.slice (@config.chunkSize * (chunkId - 1)), (@config.chunkSize * chunkId)\n\n      if @config.isBase64\n        self.emitEvent 'sendChunk', [{\n          data: {\n            bin: chunk\n            chunkId: chunkId\n          }\n        }]\n      else\n        if FileReader\n          fileReader = new FileReader\n\n          fileReader.onloadend = (evt) ->\n            self.emitEvent 'sendChunk', [{\n              data: {\n                bin: (fileReader?.result or evt.srcElement?.result or evt.target?.result).split(',')[1]\n                chunkId: chunkId\n              }\n            }]\n            return\n\n          fileReader.onerror = (e) ->\n            self.emitEvent 'end', [(e.target or e.srcElement).error]\n            return\n\n          fileReader.readAsDataURL chunk\n\n        else if FileReaderSync\n          fileReader = new FileReaderSync\n\n          self.emitEvent 'sendChunk', [{\n            data: {\n              bin: fileReader.readAsDataURL(chunk).split(',')[1]\n              chunkId: chunkId\n            }\n          }]\n        else\n          self.emitEvent 'end', ['File API is not supported in this Browser!']\n      return\n\n    upload: ->\n      if @result.onPause.get()\n        return\n\n      if @result.state.get() is 'aborted'\n        return @\n\n      if @currentChunk <= @fileLength\n        ++@currentChunk\n        if @worker\n          @worker.postMessage({sc: @sentChunks, cc: @currentChunk, cs: @config.chunkSize, f: @config.file, ib: @config.isBase64})\n        else\n          @emitEvent 'proceedChunk', [@currentChunk]\n      @startTime[@currentChunk] = +new Date\n      return\n\n    createStreams: ->\n      i    = 1\n      self = @\n      while i <= @config.streams\n        self.emitEvent 'upload'\n        i++\n      return\n\n    prepare: ->\n      self = @\n\n      @config.onStart and @config.onStart.call @result, null, @fileData\n      @result.emitEvent 'start', [null, @fileData]\n\n      if @config.chunkSize is 'dynamic'\n        @config.chunkSize = @fileData.size / 1000\n        if @config.chunkSize < 327680\n          @config.chunkSize = 327680\n        else if @config.chunkSize > 1048576\n          @config.chunkSize = 1048576\n\n        if @config.transport is 'http'\n          @config.chunkSize = Math.round @config.chunkSize / 2\n\n      if @config.isBase64\n        @config.chunkSize = Math.floor(@config.chunkSize / 4) * 4\n        _len = Math.ceil(@config.file.length / @config.chunkSize)\n      else\n        @config.chunkSize = Math.floor(@config.chunkSize / 8) * 8\n        _len = Math.ceil(@fileData.size / @config.chunkSize)\n\n      if @config.streams is 'dynamic'\n        @config.streams = _.clone _len\n        @config.streams = 24 if @config.streams > 24\n\n        if @config.transport is 'http'\n          @config.streams = Math.round @config.streams / 2\n\n      @fileLength               = if _len <= 0 then 1 else _len\n      @config.streams           = @fileLength if @config.streams > @fileLength\n      @result.config.fileLength = @fileLength\n\n      opts =\n        file:       @fileData\n        fileId:     @fileId\n        chunkSize:  if @config.isBase64 then ((@config.chunkSize  / 4) * 3) else @config.chunkSize\n        fileLength: @fileLength\n      opts.FSName = @FSName if @FSName isnt @fileId\n\n      handleStart = (error) ->\n        if error\n          console.error '[FilesCollection] [_Start] Error:', error if self.collection.debug\n          self.emitEvent 'end', [error]\n        else\n          self.result.continueFunc = ->\n            console.info '[FilesCollection] [insert] [continueFunc]' if self.collection.debug\n            self.emitEvent 'createStreams'\n            return\n          self.emitEvent 'createStreams'\n        return\n\n      if @config.transport is 'ddp'\n        @config.ddp.call @collection._methodNames._Start, opts, handleStart\n      else\n        opts.file.meta = fixJSONStringify opts.file.meta if opts.file?.meta\n        HTTP.call 'POST', \"#{@collection.downloadRoute}/#{@collection.collectionName}/__upload\", {\n          data: opts\n          headers:\n            'x-start': '1'\n            'x-mtok': Meteor.connection?._lastSessionId or null\n        }, handleStart\n      return\n\n    pipe: (func) ->\n      @pipes.push func\n      return @\n\n    start: ->\n      self = @\n      if @fileData.size <= 0\n        @end new Meteor.Error 400, 'Can\\'t upload empty file'\n        return @result\n\n      if @config.onBeforeUpload and _.isFunction @config.onBeforeUpload\n        isUploadAllowed = @config.onBeforeUpload.call _.extend(@result, @collection._getUser()), @fileData\n        if isUploadAllowed isnt true\n          return @end new Meteor.Error(403, if _.isString(isUploadAllowed) then isUploadAllowed else 'config.onBeforeUpload() returned false')\n\n      if @collection.onBeforeUpload and _.isFunction @collection.onBeforeUpload\n        isUploadAllowed = @collection.onBeforeUpload.call _.extend(@result, @collection._getUser()), @fileData\n        if isUploadAllowed isnt true\n          return @end new Meteor.Error(403, if _.isString(isUploadAllowed) then isUploadAllowed else 'collection.onBeforeUpload() returned false')\n\n      Tracker.autorun (computation) ->\n        self.trackerComp = computation\n        unless self.result.onPause.get()\n          if Meteor.status().connected\n            console.info '[FilesCollection] [insert] [Tracker] [continue]' if self.collection.debug\n            self.result.continue()\n          else\n            console.info '[FilesCollection] [insert] [Tracker] [pause]' if self.collection.debug\n            self.result.pause()\n        return\n\n      if @worker\n        @worker.onmessage = (evt) ->\n          if evt.data.error\n            console.warn '[FilesCollection] [insert] [worker] [onmessage] [ERROR:]', evt.data.error if self.collection.debug\n            self.emitEvent 'proceedChunk', [evt.data.chunkId]\n          else\n            self.emitEvent 'sendChunk', [evt]\n          return\n        @worker.onerror   = (e) ->\n          console.error '[FilesCollection] [insert] [worker] [onerror] [ERROR:]', e if self.collection.debug\n          self.emitEvent 'end', [e.message]\n          return\n\n      if @collection.debug\n        if @worker\n          console.info '[FilesCollection] [insert] using WebWorkers'\n        else\n          console.info '[FilesCollection] [insert] using MainThread'\n\n      self.emitEvent 'prepare'\n      return @result\n\n    manual: ->\n      self = @\n      @result.start = ->\n        self.emitEvent 'start'\n        return\n      @result.pipe = (func) ->\n        self.pipe func\n        return @\n      return @result\n  else undefined\n\n  ###\n  @locus Client\n  @memberOf FilesCollection\n  @name _FileUpload\n  @class FileUpload\n  @summary Internal Class, instance of this class is returned from `insert()` method\n  ###\n  _FileUpload: if Meteor.isClient then class FileUpload\n    __proto__: EventEmitter.prototype\n    constructor: (@config) ->\n      EventEmitter.call @\n      self           = @\n      unless @config.isBase64\n        @file        = _.extend @config.file, @config.fileData\n      else\n        @file        = @config.fileData\n      @state         = new ReactiveVar 'active'\n      @onPause       = new ReactiveVar false\n      @progress      = new ReactiveVar 0\n      @estimateTime  = new ReactiveVar 1000\n      @estimateSpeed = new ReactiveVar 0\n      @estimateTimer = Meteor.setInterval ->\n        if self.state.get() is 'active'\n          _currentTime = self.estimateTime.get()\n          if _currentTime > 1000\n            self.estimateTime.set _currentTime - 1000\n        return\n      , 1000\n    continueFunc:  -> return\n    pause: ->\n      console.info '[FilesCollection] [insert] [.pause()]' if @config.debug\n      unless @onPause.get()\n        @onPause.set true\n        @state.set 'paused'\n        @emitEvent 'pause', [@file]\n      return\n    continue: ->\n      console.info '[FilesCollection] [insert] [.continue()]' if @config.debug\n      if @onPause.get()\n        @onPause.set false\n        @state.set 'active'\n        @emitEvent 'continue', [@file]\n        @continueFunc()\n      return\n    toggle: ->\n      console.info '[FilesCollection] [insert] [.toggle()]' if @config.debug\n      if @onPause.get() then @continue() else @pause()\n      return\n    abort: ->\n      console.info '[FilesCollection] [insert] [.abort()]' if @config.debug\n      window.removeEventListener 'beforeunload', @config.beforeunload, false\n      @config.onAbort and @config.onAbort.call @, @file\n      @emitEvent 'abort', [@file]\n      @pause()\n      @config._onEnd()\n      @state.set 'aborted'\n      console.timeEnd('insert ' + @config.fileData.name) if @config.debug\n      @config.ddp.call @config._Abort, @config.fileId\n      return\n  else undefined\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name remove\n  @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n  @param {Function} callback - Callback with one `error` argument\n  @summary Remove documents from the collection\n  @returns {FilesCollection} Instance\n  ###\n  remove: (selector = {}, callback) ->\n    console.info \"[FilesCollection] [remove(#{JSON.stringify(selector)})]\" if @debug\n    check selector, Match.OneOf Object, String\n    check callback, Match.Optional Function\n\n    if Meteor.isClient\n      if @allowClientCode\n        @ddp.call @_methodNames._Remove, selector, (callback or NOOP)\n      else\n        callback and callback new Meteor.Error 401, '[FilesCollection] [remove] Run code from client is not allowed!'\n        console.warn '[FilesCollection] [remove] Run code from client is not allowed!' if @debug\n    else\n      files = @collection.find selector\n      if files.count() > 0\n        self = @\n        files.forEach (file) ->\n          self.unlink file\n          return\n\n      if @onAfterRemove\n        self = @\n        docs = files.fetch()\n\n        @collection.remove selector, ->\n          callback and callback.apply @, arguments\n          self.onAfterRemove docs\n          return\n      else\n        @collection.remove selector, (callback or NOOP)\n    return @\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name update\n  @see http://docs.meteor.com/#/full/update\n  @summary link Mongo.Collection update method\n  @returns {Mongo.Collection} Instance\n  ###\n  update: ->\n    @collection.update.apply @collection, arguments\n    return @collection\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name deny\n  @param {Object} rules\n  @see  https://docs.meteor.com/api/collections.html#Mongo-Collection-deny\n  @summary link Mongo.Collection deny methods\n  @returns {Mongo.Collection} Instance\n  ###\n  deny: if Meteor.isServer then (rules) ->\n    @collection.deny rules\n    return @collection\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name allow\n  @param {Object} rules\n  @see https://docs.meteor.com/api/collections.html#Mongo-Collection-allow\n  @summary link Mongo.Collection allow methods\n  @returns {Mongo.Collection} Instance\n  ###\n  allow: if Meteor.isServer then (rules) ->\n    @collection.allow rules\n    return @collection\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name denyClient\n  @see https://docs.meteor.com/api/collections.html#Mongo-Collection-deny\n  @summary Shorthands for Mongo.Collection deny method\n  @returns {Mongo.Collection} Instance\n  ###\n  denyClient: if Meteor.isServer then ->\n    @collection.deny\n      insert: -> true\n      update: -> true\n      remove: -> true\n    return @collection\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name allowClient\n  @see https://docs.meteor.com/api/collections.html#Mongo-Collection-allow\n  @summary Shorthands for Mongo.Collection allow method\n  @returns {Mongo.Collection} Instance\n  ###\n  allowClient: if Meteor.isServer then ->\n    @collection.allow\n      insert: -> true\n      update: -> true\n      remove: -> true\n    return @collection\n  else undefined\n\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name unlink\n  @param {Object} fileRef - fileObj\n  @param {String} version - [Optional] file's version\n  @param {Function} callback - [Optional] callback function\n  @summary Unlink files and it's versions from FS\n  @returns {FilesCollection} Instance\n  ###\n  unlink: if Meteor.isServer then (fileRef, version, callback) ->\n    console.info \"[FilesCollection] [unlink(#{fileRef._id}, #{version})]\" if @debug\n    if version\n      if fileRef.versions?[version] and fileRef.versions[version]?.path\n        fs.unlink fileRef.versions[version].path, (callback or NOOP)\n    else\n      if fileRef.versions and not _.isEmpty fileRef.versions\n        _.each fileRef.versions, (vRef) -> bound ->\n          fs.unlink vRef.path, (callback or NOOP)\n          return\n      else\n        fs.unlink fileRef.path, (callback or NOOP)\n    return @\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name _404\n  @summary Internal method, used to return 404 error\n  @returns {undefined}\n  ###\n  _404: if Meteor.isServer then (http) ->\n    console.warn \"[FilesCollection] [download(#{http.request.originalUrl})] [_404] File not found\" if @debug\n    text = 'File Not Found :('\n    http.response.writeHead 404,\n      'Content-Length': text.length\n      'Content-Type':   'text/plain'\n    http.response.end text\n    return\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name download\n  @param {Object} http    - Server HTTP object\n  @param {String} version - Requested file version\n  @param {Object} fileRef - Requested file Object\n  @summary Initiates the HTTP response\n  @returns {undefined}\n  ###\n  download: if Meteor.isServer then (http, version = 'original', fileRef) ->\n    console.info \"[FilesCollection] [download(#{http.request.originalUrl}, #{version})]\" if @debug\n    if fileRef\n      if _.has(fileRef, 'versions') and _.has fileRef.versions, version\n        vRef = fileRef.versions[version]\n        vRef._id = fileRef._id\n      else\n        vRef = fileRef\n    else\n      vRef = false\n\n    if not vRef or not _.isObject(vRef)\n      return @_404 http\n    else if fileRef\n      self = @\n\n      if @downloadCallback\n        unless @downloadCallback.call _.extend(http, @_getUser(http)), fileRef\n          return @_404 http\n\n      if @interceptDownload and _.isFunction @interceptDownload\n        if @interceptDownload(http, fileRef, version) is true\n          return\n\n      fs.stat vRef.path, (statErr, stats) -> bound ->\n        if statErr or not stats.isFile()\n          return self._404 http\n\n        vRef.size    = stats.size if stats.size isnt vRef.size and not self.integrityCheck\n        responseType = '400' if stats.size isnt vRef.size and self.integrityCheck\n        self.serve http, fileRef, vRef, version, null, (responseType or '200')\n      return\n    else\n      return @_404 http\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name serve\n  @param {Object} http    - Server HTTP object\n  @param {Object} fileRef - Requested file Object\n  @param {Object} vRef    - Requested file version Object\n  @param {String} version - Requested file version\n  @param {stream.Readable|null} readableStream - Readable stream, which serves binary file data\n  @param {String} responseType - Response code\n  @param {Boolean} force200 - Force 200 response code over 206\n  @summary Handle and reply to incoming request\n  @returns {undefined}\n  ###\n  serve: if Meteor.isServer then (http, fileRef, vRef, version = 'original', readableStream = null, responseType = '200', force200 = false) ->\n    self     = @\n    partiral = false\n    reqRange = false\n\n    if http.params.query.download and http.params.query.download == 'true'\n      dispositionType = 'attachment; '\n    else\n      dispositionType = 'inline; '\n\n    dispositionName     = \"filename=\\\"#{encodeURIComponent(fileRef.name)}\\\"; filename=*UTF-8\\\"#{encodeURIComponent(fileRef.name)}\\\"; \"\n    dispositionEncoding = 'charset=utf-8'\n\n    http.response.setHeader 'Content-Disposition', dispositionType + dispositionName + dispositionEncoding\n\n    if http.request.headers.range and not force200\n      partiral = true\n      array    = http.request.headers.range.split /bytes=([0-9]*)-([0-9]*)/\n      start    = parseInt array[1]\n      end      = parseInt array[2]\n      end      = vRef.size - 1 if isNaN(end)\n      take     = end - start\n    else\n      start    = 0\n      end      = vRef.size - 1\n      take     = vRef.size\n\n    if partiral or (http.params.query.play and http.params.query.play == 'true')\n      reqRange = {start, end}\n      if isNaN(start) and not isNaN end\n        reqRange.start = end - take\n        reqRange.end   = end\n      if not isNaN(start) and isNaN end\n        reqRange.start = start\n        reqRange.end   = start + take\n\n      reqRange.end = vRef.size - 1 if ((start + take) >= vRef.size)\n\n      if self.strict and (reqRange.start >= (vRef.size - 1) or reqRange.end > (vRef.size - 1))\n        responseType = '416'\n      else\n        responseType = '206'\n    else\n      responseType = '200'\n\n    streamErrorHandler = (error) ->\n      http.response.writeHead 500\n      http.response.end error.toString()\n      console.error \"[FilesCollection] [serve(#{vRef.path}, #{version})] [500]\", error if self.debug\n      return\n\n    headers = if _.isFunction(self.responseHeaders) then self.responseHeaders(responseType, fileRef, vRef, version) else self.responseHeaders\n\n    unless headers['Cache-Control']\n      http.response.setHeader 'Cache-Control', self.cacheControl\n\n    for key, value of headers\n      http.response.setHeader key, value\n\n    switch responseType\n      when '400'\n        console.warn \"[FilesCollection] [serve(#{vRef.path}, #{version})] [400] Content-Length mismatch!\" if self.debug\n        text = 'Content-Length mismatch!'\n        http.response.writeHead 400,\n          'Content-Type':   'text/plain'\n          'Content-Length': text.length\n        http.response.end text\n        break\n      when '404'\n        return self._404 http\n        break\n      when '416'\n        console.warn \"[FilesCollection] [serve(#{vRef.path}, #{version})] [416] Content-Range is not specified!\" if self.debug\n        http.response.writeHead 416\n        http.response.end()\n        break\n      when '200'\n        console.info \"[FilesCollection] [serve(#{vRef.path}, #{version})] [200]\" if self.debug\n        stream = readableStream or fs.createReadStream vRef.path\n        http.response.writeHead 200 if readableStream\n        stream.on('open', ->\n          http.response.writeHead 200\n          return\n        ).on('error', streamErrorHandler\n        ).on 'end', ->\n          http.response.end()\n          return\n        stream.pipe new Throttle {bps: self.throttle, chunksize: self.chunkSize} if self.throttle\n        stream.pipe http.response\n        break\n      when '206'\n        console.info \"[FilesCollection] [serve(#{vRef.path}, #{version})] [206]\" if self.debug\n        http.response.setHeader 'Content-Range', \"bytes #{reqRange.start}-#{reqRange.end}/#{vRef.size}\"\n        stream = readableStream or fs.createReadStream vRef.path, {start: reqRange.start, end: reqRange.end}\n        http.response.writeHead 206 if readableStream\n        stream.on('open', ->\n          http.response.writeHead 206\n          return\n        ).on('error', streamErrorHandler\n        ).on 'end', ->\n          http.response.end()\n          return\n        stream.pipe new Throttle {bps: self.throttle, chunksize: self.chunkSize} if self.throttle\n        stream.pipe http.response\n        break\n    return\n  else undefined\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name link\n  @param {Object} fileRef - File reference object\n  @param {String} version - Version of file you would like to request\n  @summary Returns downloadable URL\n  @returns {String} Empty string returned in case if file not found in DB\n  ###\n  link: (fileRef, version = 'original') ->\n    console.info \"[FilesCollection] [link(#{fileRef?._id}, #{version})]\" if @debug\n    check fileRef, Object\n    check version, String\n    return '' if not fileRef\n    return formatFleURL fileRef, version\n\n###\n@locus Anywhere\n@private\n@name formatFleURL\n@param {Object} fileRef - File reference object\n@param {String} version - [Optional] Version of file you would like build URL for\n@summary Returns formatted URL for file\n@returns {String} Downloadable link\n###\nformatFleURL = (fileRef, version = 'original') ->\n  check fileRef, Object\n  check version, String\n\n  root = __meteor_runtime_config__.ROOT_URL.replace(/\\/+$/, '')\n\n  if fileRef.extension?.length\n    ext = '.' + fileRef.extension\n  else\n    ext = ''\n\n  if fileRef.public is true\n    return root + (if version is 'original' then \"#{fileRef._downloadRoute}/#{fileRef._id}#{ext}\" else \"#{fileRef._downloadRoute}/#{version}-#{fileRef._id}#{ext}\")\n  else\n    return root + \"#{fileRef._downloadRoute}/#{fileRef._collectionName}/#{fileRef._id}/#{version}/#{fileRef._id}#{ext}\"\n\nif Meteor.isClient\n  ###\n  @locus Client\n  @TemplateHelper\n  @name fileURL\n  @param {Object} fileRef - File reference object\n  @param {String} version - [Optional] Version of file you would like to request\n  @summary Get download URL for file by fileRef, even without subscription\n  @example {{fileURL fileRef}}\n  @returns {String}\n  ###\n  Meteor.startup ->\n    if Template?\n      Template.registerHelper 'fileURL', (fileRef, version) ->\n        return undefined if not fileRef or not _.isObject fileRef\n        version = if not version or not _.isString(version) then 'original' else version\n        if fileRef._id\n          return formatFleURL fileRef, version\n        else\n          return ''\n    return\n\n###\nExport the FilesCollection class\n###\nMeteor.Files = FilesCollection\n`export { FilesCollection }`\n","var EventEmitter, FileCursor, FilesCursor, NOOP, Throttle, bound, events, fileType, fixJSONParse, fixJSONStringify, formatFleURL, fs, nodePath, request, writeStream;                 \n\nNOOP = function() {};\n\nif (Meteor.isServer) {\n\n  /*\n  @summary Require NPM packages\n   */\n  fs = Npm.require('fs-extra');\n  events = Npm.require('events');\n  request = Npm.require('request');\n  Throttle = Npm.require('throttle');\n  fileType = Npm.require('file-type');\n  nodePath = Npm.require('path');\n\n  /*\n  @var {Object} bound - Meteor.bindEnvironment (Fiber wrapper)\n   */\n  bound = Meteor.bindEnvironment(function(callback) {\n    return callback();\n  });\n\n  /*\n  @private\n  @locus Server\n  @class writeStream\n  @param path      {String} - Path to file on FS\n  @param maxLength {Number} - Max amount of chunks in stream\n  @param file      {Object} - fileRef Object\n  @summary writableStream wrapper class, makes sure chunks is written in given order. Implementation of queue stream.\n   */\n  writeStream = (function() {\n    function writeStream(path1, maxLength, file1, permissions) {\n      var self;\n      this.path = path1;\n      this.maxLength = maxLength;\n      this.file = file1;\n      this.permissions = permissions;\n      if (!this.path || !_.isString(this.path)) {\n        return;\n      }\n      self = this;\n      this.fd = null;\n      fs.open(this.path, 'w+', this.permissions, function(error, fd) {\n        return bound(function() {\n          if (error) {\n            throw new Meteor.Error(500, '[FilesCollection] [writeStream] [Exception:]', error);\n          } else {\n            self.fd = fd;\n          }\n        });\n      });\n      this.ended = false;\n      this.aborted = false;\n      this.writtenChunks = 0;\n    }\n\n\n    /*\n    @memberOf writeStream\n    @name write\n    @param {Number} num - Chunk position in stream\n    @param {Buffer} chunk - Chunk binary data\n    @param {Function} callback - Callback\n    @summary Write chunk in given order\n    @returns {Boolean} - True if chunk is sent to stream, false if chunk is set into queue\n     */\n\n    writeStream.prototype.write = function(num, chunk, callback) {\n      var _stream, self;\n      if (!this.aborted && !this.ended) {\n        self = this;\n        if (this.fd) {\n          _stream = fs.createWriteStream(this.path, {\n            flags: 'r+',\n            mode: this.permissions,\n            highWaterMark: 0,\n            fd: this.fd,\n            autoClose: true,\n            start: (num - 1) * this.file.chunkSize\n          });\n          _stream.on('error', function(error) {\n            return bound(function() {\n              console.error(\"[FilesCollection] [writeStream] [ERROR:]\", error);\n              self.abort();\n            });\n          });\n          _stream.write(chunk, function() {\n            return bound(function() {\n              ++self.writtenChunks;\n              callback && callback();\n            });\n          });\n        } else {\n          Meteor.setTimeout(function() {\n            self.write(num, chunk, callback);\n          }, 25);\n        }\n      }\n      return false;\n    };\n\n\n    /*\n    @memberOf writeStream\n    @name end\n    @param {Function} callback - Callback\n    @summary Finishes writing to writableStream, only after all chunks in queue is written\n    @returns {Boolean} - True if stream is fulfilled, false if queue is in progress\n     */\n\n    writeStream.prototype.end = function(callback) {\n      var self;\n      if (!this.aborted && !this.ended) {\n        if (this.writtenChunks === this.maxLength) {\n          self = this;\n          fs.close(this.fd, function() {\n            return bound(function() {\n              self.ended = true;\n              callback && callback(true);\n            });\n          });\n          return true;\n        } else {\n          self = this;\n          Meteor.setTimeout(function() {\n            self.end(callback);\n          }, 25);\n        }\n      } else {\n        callback && callback(false);\n      }\n      return false;\n    };\n\n\n    /*\n    @memberOf writeStream\n    @name abort\n    @param {Function} callback - Callback\n    @summary Aborts writing to writableStream, removes created file\n    @returns {Boolean} - True\n     */\n\n    writeStream.prototype.abort = function(callback) {\n      this.aborted = true;\n      fs.unlink(this.path, callback || NOOP);\n      return true;\n    };\n\n\n    /*\n    @memberOf writeStream\n    @name stop\n    @summary Stop writing to writableStream\n    @returns {Boolean} - True\n     */\n\n    writeStream.prototype.stop = function() {\n      this.aborted = true;\n      this.ended = true;\n      return true;\n    };\n\n    return writeStream;\n\n  })();\n} else {\n  EventEmitter = require('./event-emitter.jsx').EventEmitter;\n}\n\n\n/*\n@private\n@locus Anywhere\n@class FileCursor\n@param _fileRef    {Object} - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n@param _collection {FilesCollection} - FilesCollection Instance\n@summary Internal class, represents each record in `FilesCursor.each()` or document returned from `.findOne()` method\n */\n\nFileCursor = (function() {\n  function FileCursor(_fileRef, _collection) {\n    var self;\n    this._fileRef = _fileRef;\n    this._collection = _collection;\n    self = this;\n    self = _.extend(self, this._fileRef);\n  }\n\n\n  /*\n  @locus Anywhere\n  @memberOf FileCursor\n  @name remove\n  @param callback {Function} - Triggered asynchronously after item is removed or failed to be removed\n  @summary Remove document\n  @returns {FileCursor}\n   */\n\n  FileCursor.prototype.remove = function(callback) {\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FileCursor] [remove()]');\n    }\n    if (this._fileRef) {\n      this._collection.remove(this._fileRef._id, callback);\n    } else {\n      callback && callback(new Meteor.Error(404, 'No such file'));\n    }\n    return this;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FileCursor\n  @name link\n  @param version {String} - Name of file's subversion\n  @summary Returns downloadable URL to File\n  @returns {String}\n   */\n\n  FileCursor.prototype.link = function(version) {\n    if (this._collection.debug) {\n      console.info(\"[FilesCollection] [FileCursor] [link(\" + version + \")]\");\n    }\n    if (this._fileRef) {\n      return this._collection.link(this._fileRef, version);\n    } else {\n      return '';\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FileCursor\n  @name get\n  @param property {String} - Name of sub-object property\n  @summary Returns current document as a plain Object, if `property` is specified - returns value of sub-object property\n  @returns {Object|mix}\n   */\n\n  FileCursor.prototype.get = function(property) {\n    if (this._collection.debug) {\n      console.info(\"[FilesCollection] [FileCursor] [get(\" + property + \")]\");\n    }\n    if (property) {\n      return this._fileRef[property];\n    } else {\n      return this._fileRef;\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FileCursor\n  @name fetch\n  @summary Returns document as plain Object in Array\n  @returns {[Object]}\n   */\n\n  FileCursor.prototype.fetch = function() {\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FileCursor] [fetch()]');\n    }\n    return [this._fileRef];\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FileCursor\n  @name with\n  @summary Returns reactive version of current FileCursor, useful to use with `{{#with}}...{{/with}}` block template helper\n  @returns {[Object]}\n   */\n\n  FileCursor.prototype[\"with\"] = function() {\n    var self;\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FileCursor] [with()]');\n    }\n    self = this;\n    return _.extend(self, this._collection.collection.findOne(this._fileRef._id));\n  };\n\n  return FileCursor;\n\n})();\n\n\n/*\n@private\n@locus Anywhere\n@class FilesCursor\n@param _selector   {String|Object}   - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n@param options     {Object}          - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#selectors)\n@param _collection {FilesCollection} - FilesCollection Instance\n@summary Implementation of Cursor for FilesCollection\n */\n\nFilesCursor = (function() {\n  function FilesCursor(_selector, options, _collection) {\n    this._selector = _selector != null ? _selector : {};\n    this._collection = _collection;\n    this._current = -1;\n    this.cursor = this._collection.collection.find(this._selector, options);\n  }\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name get\n  @summary Returns all matching document(s) as an Array. Alias of `.fetch()`\n  @returns {[Object]}\n   */\n\n  FilesCursor.prototype.get = function() {\n    if (this._collection.debug) {\n      console.info(\"[FilesCollection] [FilesCursor] [get()]\");\n    }\n    return this.cursor.fetch();\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name hasNext\n  @summary Returns `true` if there is next item available on Cursor\n  @returns {Boolean}\n   */\n\n  FilesCursor.prototype.hasNext = function() {\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FilesCursor] [hasNext()]');\n    }\n    return this._current < this.cursor.count() - 1;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name next\n  @summary Returns next item on Cursor, if available\n  @returns {Object|undefined}\n   */\n\n  FilesCursor.prototype.next = function() {\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FilesCursor] [next()]');\n    }\n    if (this.hasNext()) {\n      return this.cursor.fetch()[++this._current];\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name hasPrevious\n  @summary Returns `true` if there is previous item available on Cursor\n  @returns {Boolean}\n   */\n\n  FilesCursor.prototype.hasPrevious = function() {\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FilesCursor] [hasPrevious()]');\n    }\n    return this._current !== -1;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name previous\n  @summary Returns previous item on Cursor, if available\n  @returns {Object|undefined}\n   */\n\n  FilesCursor.prototype.previous = function() {\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FilesCursor] [previous()]');\n    }\n    if (this.hasPrevious()) {\n      return this.cursor.fetch()[--this._current];\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name fetch\n  @summary Returns all matching document(s) as an Array.\n  @returns {[Object]}\n   */\n\n  FilesCursor.prototype.fetch = function() {\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FilesCursor] [fetch()]');\n    }\n    return this.cursor.fetch();\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name first\n  @summary Returns first item on Cursor, if available\n  @returns {Object|undefined}\n   */\n\n  FilesCursor.prototype.first = function() {\n    var ref;\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FilesCursor] [first()]');\n    }\n    this._current = 0;\n    return (ref = this.fetch()) != null ? ref[this._current] : void 0;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name last\n  @summary Returns last item on Cursor, if available\n  @returns {Object|undefined}\n   */\n\n  FilesCursor.prototype.last = function() {\n    var ref;\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FilesCursor] [last()]');\n    }\n    this._current = this.count() - 1;\n    return (ref = this.fetch()) != null ? ref[this._current] : void 0;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name count\n  @summary Returns the number of documents that match a query\n  @returns {Number}\n   */\n\n  FilesCursor.prototype.count = function() {\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FilesCursor] [count()]');\n    }\n    return this.cursor.count();\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name remove\n  @param callback {Function} - Triggered asynchronously after item is removed or failed to be removed\n  @summary Removes all documents that match a query\n  @returns {FilesCursor}\n   */\n\n  FilesCursor.prototype.remove = function(callback) {\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FilesCursor] [remove()]');\n    }\n    this._collection.remove(this._selector, callback);\n    return this;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name forEach\n  @param callback {Function} - Function to call. It will be called with three arguments: the `file`, a 0-based index, and cursor itself\n  @param context {Object} - An object which will be the value of `this` inside `callback`\n  @summary Call `callback` once for each matching document, sequentially and synchronously.\n  @returns {undefined}\n   */\n\n  FilesCursor.prototype.forEach = function(callback, context) {\n    if (context == null) {\n      context = {};\n    }\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FilesCursor] [forEach()]');\n    }\n    this.cursor.forEach(callback, context);\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name each\n  @summary Returns an Array of FileCursor made for each document on current cursor\n           Useful when using in {{#each FilesCursor#each}}...{{/each}} block template helper\n  @returns {[FileCursor]}\n   */\n\n  FilesCursor.prototype.each = function() {\n    var self;\n    self = this;\n    return this.map(function(file) {\n      return new FileCursor(file, self._collection);\n    });\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name map\n  @param callback {Function} - Function to call. It will be called with three arguments: the `file`, a 0-based index, and cursor itself\n  @param context {Object} - An object which will be the value of `this` inside `callback`\n  @summary Map `callback` over all matching documents. Returns an Array.\n  @returns {Array}\n   */\n\n  FilesCursor.prototype.map = function(callback, context) {\n    if (context == null) {\n      context = {};\n    }\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FilesCursor] [map()]');\n    }\n    return this.cursor.map(callback, context);\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name current\n  @summary Returns current item on Cursor, if available\n  @returns {Object|undefined}\n   */\n\n  FilesCursor.prototype.current = function() {\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FilesCursor] [current()]');\n    }\n    if (this._current < 0) {\n      this._current = 0;\n    }\n    return this.fetch()[this._current];\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name observe\n  @param callbacks {Object} - Functions to call to deliver the result set as it changes\n  @summary Watch a query. Receive callbacks as the result set changes.\n  @url http://docs.meteor.com/api/collections.html#Mongo-Cursor-observe\n  @returns {Object} - live query handle\n   */\n\n  FilesCursor.prototype.observe = function(callbacks) {\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FilesCursor] [observe()]');\n    }\n    return this.cursor.observe(callbacks);\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCursor\n  @name observeChanges\n  @param callbacks {Object} - Functions to call to deliver the result set as it changes\n  @summary Watch a query. Receive callbacks as the result set changes. Only the differences between the old and new documents are passed to the callbacks.\n  @url http://docs.meteor.com/api/collections.html#Mongo-Cursor-observeChanges\n  @returns {Object} - live query handle\n   */\n\n  FilesCursor.prototype.observeChanges = function(callbacks) {\n    if (this._collection.debug) {\n      console.info('[FilesCollection] [FilesCursor] [observeChanges()]');\n    }\n    return this.cursor.observeChanges(callbacks);\n  };\n\n  return FilesCursor;\n\n})();\n\n\n/*\n@var {Function} fixJSONParse - Fix issue with Date parse\n */\n\nfixJSONParse = function(obj) {\n  var i, j, key, len, v, value;\n  for (key in obj) {\n    value = obj[key];\n    if (_.isString(value) && !!~value.indexOf('=--JSON-DATE--=')) {\n      value = value.replace('=--JSON-DATE--=', '');\n      obj[key] = new Date(parseInt(value));\n    } else if (_.isObject(value)) {\n      obj[key] = fixJSONParse(value);\n    } else if (_.isArray(value)) {\n      for (i = j = 0, len = value.length; j < len; i = ++j) {\n        v = value[i];\n        if (_.isObject(v)) {\n          obj[key][i] = fixJSONParse(v);\n        } else if (_.isString(v) && !!~v.indexOf('=--JSON-DATE--=')) {\n          v = v.replace('=--JSON-DATE--=', '');\n          obj[key][i] = new Date(parseInt(v));\n        }\n      }\n    }\n  }\n  return obj;\n};\n\n\n/*\n@var {Function} fixJSONStringify - Fix issue with Date stringify\n */\n\nfixJSONStringify = function(obj) {\n  var i, j, key, len, v, value;\n  for (key in obj) {\n    value = obj[key];\n    if (_.isDate(value)) {\n      obj[key] = '=--JSON-DATE--=' + (+value);\n    } else if (_.isObject(value)) {\n      obj[key] = fixJSONStringify(value);\n    } else if (_.isArray(value)) {\n      for (i = j = 0, len = value.length; j < len; i = ++j) {\n        v = value[i];\n        if (_.isObject(v)) {\n          obj[key][i] = fixJSONStringify(v);\n        } else if (_.isDate(v)) {\n          obj[key][i] = '=--JSON-DATE--=' + (+v);\n        }\n      }\n    }\n  }\n  return obj;\n};\n\n\n/*\n@locus Anywhere\n@class FilesCollection\n@param config           {Object}   - [Both]   Configuration object with next properties:\n@param config.debug     {Boolean}  - [Both]   Turn on/of debugging and extra logging\n@param config.ddp       {Object}   - [Client] Custom DDP connection. Object returned form `DDP.connect()`\n@param config.schema    {Object}   - [Both]   Collection Schema\n@param config.public    {Boolean}  - [Both]   Store files in folder accessible for proxy servers, for limits, and more - read docs\n@param config.strict    {Boolean}  - [Server] Strict mode for partial content, if is `true` server will return `416` response code, when `range` is not specified, otherwise server return `206`\n@param config.protected {Function} - [Both]   If `true` - files will be served only to authorized users, if `function()` - you're able to check visitor's permissions in your own way function's context has:\n  - `request` - On server only\n  - `response` - On server only\n  - `user()`\n  - `userId`\n@param config.chunkSize      {Number}  - [Both] Upload chunk size, default: 524288 bytes (0,5 Mb)\n@param config.permissions    {Number}  - [Server] Permissions which will be set to uploaded files (octal), like: `511` or `0o755`. Default: 0644\n@param config.parentDirPermissions {Number}  - [Server] Permissions which will be set to parent directory of uploaded files (octal), like: `611` or `0o777`. Default: 0755\n@param config.storagePath    {String|Function}  - [Server] Storage path on file system\n@param config.cacheControl   {String}  - [Server] Default `Cache-Control` header\n@param config.responseHeaders {Object|Function} - [Server] Custom response headers, if function is passed, must return Object\n@param config.throttle       {Number}  - [Server] bps throttle threshold\n@param config.downloadRoute  {String}  - [Both]   Server Route used to retrieve files\n@param config.collection     {Mongo.Collection} - [Both] Mongo Collection Instance\n@param config.collectionName {String}  - [Both]   Collection name\n@param config.namingFunction {Function}- [Both]   Function which returns `String`\n@param config.integrityCheck {Boolean} - [Server] Check file's integrity before serving to users\n@param config.onAfterUpload  {Function}- [Server] Called right after file is ready on FS. Use to transfer file somewhere else, or do other thing with file directly\n@param config.onAfterRemove  {Function} - [Server] Called right after file is removed. Removed objects is passed to callback\n@param config.continueUploadTTL {Number} - [Server] Time in seconds, during upload may be continued, default 3 hours (10800 seconds)\n@param config.onBeforeUpload {Function}- [Both]   Function which executes on server after receiving each chunk and on client right before beginning upload. Function context is `File` - so you are able to check for extension, mime-type, size and etc.\nreturn `true` to continue\nreturn `false` or `String` to abort upload\n@param config.onInitiateUpload {Function} - [Server] Function which executes on server right before upload is begin and right after `onBeforeUpload` hook. This hook is fully asynchronous.\n@param config.onBeforeRemove {Function} - [Server] Executes before removing file on server, so you can check permissions. Return `true` to allow action and `false` to deny.\n@param config.allowClientCode  {Boolean}  - [Both]   Allow to run `remove` from client\n@param config.downloadCallback {Function} - [Server] Callback triggered each time file is requested, return truthy value to continue download, or falsy to abort\n@param config.interceptDownload {Function} - [Server] Intercept download request, so you can serve file from third-party resource, arguments {http: {request: {...}, response: {...}}, fileRef: {...}}\n@param config.onbeforeunloadMessage {String|Function} - [Client] Message shown to user when closing browser's window or tab while upload process is running\n@summary Create new instance of FilesCollection\n */\n\nFilesCollection = (function() {\n  var FileUpload, UploadInstance;\n\n  FilesCollection.prototype.__proto__ = (function() {\n    if (Meteor.isServer) {\n      return events.EventEmitter.prototype;\n    } else {\n      return EventEmitter.prototype;\n    }\n  })();\n\n  function FilesCollection(config) {\n    var _URL, _methods, _preCollectionCursor, cookie, self, setTokenCookie, storagePath, unsetTokenCookie;\n    if (Meteor.isServer) {\n      events.EventEmitter.call(this);\n    } else {\n      EventEmitter.call(this);\n    }\n    if (config) {\n      storagePath = config.storagePath, this.ddp = config.ddp, this.collection = config.collection, this.collectionName = config.collectionName, this.downloadRoute = config.downloadRoute, this.schema = config.schema, this.chunkSize = config.chunkSize, this.namingFunction = config.namingFunction, this.debug = config.debug, this.onbeforeunloadMessage = config.onbeforeunloadMessage, this.permissions = config.permissions, this.parentDirPermissions = config.parentDirPermissions, this.allowClientCode = config.allowClientCode, this.onBeforeUpload = config.onBeforeUpload, this.onInitiateUpload = config.onInitiateUpload, this.integrityCheck = config.integrityCheck, this[\"protected\"] = config[\"protected\"], this[\"public\"] = config[\"public\"], this.strict = config.strict, this.downloadCallback = config.downloadCallback, this.cacheControl = config.cacheControl, this.responseHeaders = config.responseHeaders, this.throttle = config.throttle, this.onAfterUpload = config.onAfterUpload, this.onAfterRemove = config.onAfterRemove, this.interceptDownload = config.interceptDownload, this.onBeforeRemove = config.onBeforeRemove, this.continueUploadTTL = config.continueUploadTTL;\n    }\n    self = this;\n    cookie = new Cookies();\n    if (this.debug == null) {\n      this.debug = false;\n    }\n    if (this[\"public\"] == null) {\n      this[\"public\"] = false;\n    }\n    if (this[\"protected\"] == null) {\n      this[\"protected\"] = false;\n    }\n    if (this.chunkSize == null) {\n      this.chunkSize = 1024 * 512;\n    }\n    this.chunkSize = Math.floor(this.chunkSize / 8) * 8;\n    if (this[\"public\"] && !this.downloadRoute) {\n      throw new Meteor.Error(500, \"[FilesCollection.\" + this.collectionName + \"]: \\\"downloadRoute\\\" must be precisely provided on \\\"public\\\" collections! Note: \\\"downloadRoute\\\" must be equal or be inside of your web/proxy-server (relative) root.\");\n    }\n    if (this.collection == null) {\n      this.collection = new Mongo.Collection(this.collectionName);\n    }\n    if (this.collectionName == null) {\n      this.collectionName = this.collection._name;\n    }\n    check(this.collectionName, String);\n    if (this.downloadRoute == null) {\n      this.downloadRoute = '/cdn/storage';\n    }\n    this.downloadRoute = this.downloadRoute.replace(/\\/$/, '');\n    if (this.collectionName == null) {\n      this.collectionName = 'MeteorUploadFiles';\n    }\n    if (this.namingFunction == null) {\n      this.namingFunction = false;\n    }\n    if (this.onBeforeUpload == null) {\n      this.onBeforeUpload = false;\n    }\n    if (this.allowClientCode == null) {\n      this.allowClientCode = true;\n    }\n    if (this.ddp == null) {\n      this.ddp = Meteor;\n    }\n    if (this.onInitiateUpload == null) {\n      this.onInitiateUpload = false;\n    }\n    if (this.interceptDownload == null) {\n      this.interceptDownload = false;\n    }\n    if (storagePath == null) {\n      storagePath = function() {\n        return \"assets\" + nodePath.sep + \"app\" + nodePath.sep + \"uploads\" + nodePath.sep + this.collectionName;\n      };\n    }\n    if (_.isString(storagePath)) {\n      this.storagePath = function() {\n        return storagePath;\n      };\n    } else {\n      this.storagePath = function() {\n        var sp;\n        sp = storagePath.apply(this, arguments);\n        if (!_.isString(sp)) {\n          throw new Meteor.Error(400, \"[FilesCollection.\" + self.collectionName + \"] \\\"storagePath\\\" function must return a String!\");\n        }\n        sp = sp.replace(/\\/$/, '');\n        if (Meteor.isServer) {\n          return nodePath.normalize(sp);\n        } else {\n          return sp;\n        }\n      };\n    }\n    if (Meteor.isClient) {\n      if (this.onbeforeunloadMessage == null) {\n        this.onbeforeunloadMessage = 'Upload in a progress... Do you want to abort?';\n      }\n      delete this.strict;\n      delete this.throttle;\n      delete this.permissions;\n      delete this.parentDirPermissions;\n      delete this.cacheControl;\n      delete this.onAfterUpload;\n      delete this.onAfterRemove;\n      delete this.onBeforeRemove;\n      this.onInitiateUpload = false;\n      delete this.integrityCheck;\n      delete this.downloadCallback;\n      delete this.interceptDownload;\n      delete this.continueUploadTTL;\n      delete this.responseHeaders;\n      setTokenCookie = function() {\n        Meteor.setTimeout(function() {\n          if ((!cookie.has('x_mtok') && Meteor.connection._lastSessionId) || (cookie.has('x_mtok') && (cookie.get('x_mtok') !== Meteor.connection._lastSessionId))) {\n            cookie.set('x_mtok', Meteor.connection._lastSessionId, {\n              path: '/'\n            });\n          }\n        }, 25);\n      };\n      unsetTokenCookie = function() {\n        if (cookie.has('x_mtok')) {\n          cookie.remove('x_mtok', '/');\n        }\n      };\n      if (typeof Accounts !== \"undefined\" && Accounts !== null) {\n        Meteor.startup(function() {\n          setTokenCookie();\n        });\n        Accounts.onLogin(function() {\n          setTokenCookie();\n        });\n        Accounts.onLogout(function() {\n          unsetTokenCookie();\n        });\n      }\n      check(this.onbeforeunloadMessage, Match.OneOf(String, Function));\n      _URL = window.URL || window.webkitURL || window.mozURL || window.msURL || window.oURL || false;\n      if ((typeof window !== \"undefined\" && window !== null ? window.Worker : void 0) && (typeof window !== \"undefined\" && window !== null ? window.Blob : void 0) && _URL) {\n        this._supportWebWorker = true;\n        this._webWorkerUrl = _URL.createObjectURL(new Blob(['!function(a){\"use strict\";a.onmessage=function(b){var c=b.data.f.slice(b.data.cs*(b.data.cc-1),b.data.cs*b.data.cc);if(b.data.ib===!0)postMessage({bin:c,chunkId:b.data.cc});else{var d;a.FileReader?(d=new FileReader,d.onloadend=function(a){postMessage({bin:(d.result||a.srcElement||a.target).split(\",\")[1],chunkId:b.data.cc,s:b.data.s})},d.onerror=function(a){throw(a.target||a.srcElement).error},d.readAsDataURL(c)):a.FileReaderSync?(d=new FileReaderSync,postMessage({bin:d.readAsDataURL(c).split(\",\")[1],chunkId:b.data.cc})):postMessage({bin:null,chunkId:b.data.cc,error:\"File API is not supported in WebWorker!\"})}}}(this);'], {\n          type: 'application/javascript'\n        }));\n      } else if (typeof window !== \"undefined\" && window !== null ? window.Worker : void 0) {\n        this._supportWebWorker = true;\n        this._webWorkerUrl = Meteor.absoluteUrl('packages/ostrio_files/worker.min.js');\n      } else {\n        this._supportWebWorker = false;\n      }\n    } else {\n      if (this.strict == null) {\n        this.strict = true;\n      }\n      if (this.throttle == null) {\n        this.throttle = false;\n      }\n      if (this.permissions == null) {\n        this.permissions = parseInt('644', 8);\n      }\n      if (this.parentDirPermissions == null) {\n        this.parentDirPermissions = parseInt('755', 8);\n      }\n      if (this.cacheControl == null) {\n        this.cacheControl = 'public, max-age=31536000, s-maxage=31536000';\n      }\n      if (this.onAfterUpload == null) {\n        this.onAfterUpload = false;\n      }\n      if (this.onAfterRemove == null) {\n        this.onAfterRemove = false;\n      }\n      if (this.onBeforeRemove == null) {\n        this.onBeforeRemove = false;\n      }\n      if (this.integrityCheck == null) {\n        this.integrityCheck = true;\n      }\n      if (this._currentUploads == null) {\n        this._currentUploads = {};\n      }\n      if (this.downloadCallback == null) {\n        this.downloadCallback = false;\n      }\n      if (this.continueUploadTTL == null) {\n        this.continueUploadTTL = 10800;\n      }\n      if (this.responseHeaders == null) {\n        this.responseHeaders = function(responseCode, fileRef, versionRef) {\n          var headers;\n          headers = {};\n          switch (responseCode) {\n            case '206':\n              headers['Pragma'] = 'private';\n              headers['Trailer'] = 'expires';\n              headers['Transfer-Encoding'] = 'chunked';\n              break;\n            case '400':\n              headers['Cache-Control'] = 'no-cache';\n              break;\n            case '416':\n              headers['Content-Range'] = \"bytes */\" + versionRef.size;\n          }\n          headers['Connection'] = 'keep-alive';\n          headers['Content-Type'] = versionRef.type || 'application/octet-stream';\n          headers['Accept-Ranges'] = 'bytes';\n          return headers;\n        };\n      }\n      if (this[\"public\"] && !storagePath) {\n        throw new Meteor.Error(500, \"[FilesCollection.\" + this.collectionName + \"] \\\"storagePath\\\" must be set on \\\"public\\\" collections! Note: \\\"storagePath\\\" must be equal on be inside of your web/proxy-server (absolute) root.\");\n      }\n      if (this.debug) {\n        console.info('[FilesCollection.storagePath] Set to:', this.storagePath({}));\n      }\n      fs.mkdirs(this.storagePath({}), {\n        mode: this.parentDirPermissions\n      }, function(error) {\n        if (error) {\n          throw new Meteor.Error(401, \"[FilesCollection.\" + self.collectionName + \"] Path \\\"\" + (self.storagePath({})) + \"\\\" is not writable!\", error);\n        }\n      });\n      check(this.strict, Boolean);\n      check(this.throttle, Match.OneOf(false, Number));\n      check(this.permissions, Number);\n      check(this.storagePath, Function);\n      check(this.cacheControl, String);\n      check(this.onAfterRemove, Match.OneOf(false, Function));\n      check(this.onAfterUpload, Match.OneOf(false, Function));\n      check(this.integrityCheck, Boolean);\n      check(this.onBeforeRemove, Match.OneOf(false, Function));\n      check(this.downloadCallback, Match.OneOf(false, Function));\n      check(this.interceptDownload, Match.OneOf(false, Function));\n      check(this.continueUploadTTL, Number);\n      check(this.responseHeaders, Match.OneOf(Object, Function));\n      this._preCollection = new Mongo.Collection('__pre_' + this.collectionName);\n      this._preCollection._ensureIndex({\n        createdAt: 1\n      }, {\n        expireAfterSeconds: this.continueUploadTTL,\n        background: true\n      });\n      _preCollectionCursor = this._preCollection.find({}, {\n        fields: {\n          _id: 1,\n          isFinished: 1\n        }\n      });\n      _preCollectionCursor.observe({\n        changed: function(doc) {\n          if (doc.isFinished) {\n            if (self.debug) {\n              console.info(\"[FilesCollection] [_preCollectionCursor.observe] [changed]: \" + doc._id);\n            }\n            self._preCollection.remove({\n              _id: doc._id\n            }, NOOP);\n          }\n        },\n        removed: function(doc) {\n          var ref;\n          if (self.debug) {\n            console.info(\"[FilesCollection] [_preCollectionCursor.observe] [removed]: \" + doc._id);\n          }\n          if ((ref = self._currentUploads) != null ? ref[doc._id] : void 0) {\n            self._currentUploads[doc._id].stop();\n            self._currentUploads[doc._id].end();\n            if (!doc.isFinished) {\n              if (self.debug) {\n                console.info(\"[FilesCollection] [_preCollectionCursor.observe] [removeUnfinishedUpload]: \" + doc._id);\n              }\n              self._currentUploads[doc._id].abort();\n            }\n            delete self._currentUploads[doc._id];\n          }\n        }\n      });\n      this._createStream = function(_id, path, opts) {\n        return self._currentUploads[_id] = new writeStream(path, opts.fileLength, opts, self.permissions);\n      };\n      this._continueUpload = function(_id) {\n        var contUpld, ref, ref1;\n        if ((ref = self._currentUploads) != null ? (ref1 = ref[_id]) != null ? ref1.file : void 0 : void 0) {\n          if (!self._currentUploads[_id].aborted && !self._currentUploads[_id].ended) {\n            return self._currentUploads[_id].file;\n          } else {\n            self._createStream(_id, self._currentUploads[_id].file.file.path, self._currentUploads[_id].file);\n            return self._currentUploads[_id].file;\n          }\n        } else {\n          contUpld = self._preCollection.findOne({\n            _id: _id\n          });\n          if (contUpld) {\n            self._createStream(_id, contUpld.file.path, contUpld.file);\n          }\n          return contUpld;\n        }\n      };\n    }\n    if (!this.schema) {\n      this.schema = {\n        size: {\n          type: Number\n        },\n        name: {\n          type: String\n        },\n        type: {\n          type: String\n        },\n        path: {\n          type: String\n        },\n        isVideo: {\n          type: Boolean\n        },\n        isAudio: {\n          type: Boolean\n        },\n        isImage: {\n          type: Boolean\n        },\n        isText: {\n          type: Boolean\n        },\n        isJSON: {\n          type: Boolean\n        },\n        isPDF: {\n          type: Boolean\n        },\n        extension: {\n          type: String,\n          optional: true\n        },\n        _storagePath: {\n          type: String\n        },\n        _downloadRoute: {\n          type: String\n        },\n        _collectionName: {\n          type: String\n        },\n        \"public\": {\n          type: Boolean,\n          optional: true\n        },\n        meta: {\n          type: Object,\n          blackbox: true,\n          optional: true\n        },\n        userId: {\n          type: String,\n          optional: true\n        },\n        updatedAt: {\n          type: Date,\n          optional: true\n        },\n        versions: {\n          type: Object,\n          blackbox: true\n        }\n      };\n    }\n    check(this.debug, Boolean);\n    check(this.schema, Object);\n    check(this[\"public\"], Boolean);\n    check(this[\"protected\"], Match.OneOf(Boolean, Function));\n    check(this.chunkSize, Number);\n    check(this.downloadRoute, String);\n    check(this.namingFunction, Match.OneOf(false, Function));\n    check(this.onBeforeUpload, Match.OneOf(false, Function));\n    check(this.onInitiateUpload, Match.OneOf(false, Function));\n    check(this.allowClientCode, Boolean);\n    check(this.ddp, Match.Any);\n    if (this[\"public\"] && this[\"protected\"]) {\n      throw new Meteor.Error(500, \"[FilesCollection.\" + this.collectionName + \"]: Files can not be public and protected at the same time!\");\n    }\n    this._checkAccess = function(http) {\n      var fileRef, rc, ref, ref1, result, text, user, userId;\n      if (self[\"protected\"]) {\n        ref = self._getUser(http), user = ref.user, userId = ref.userId;\n        if (_.isFunction(self[\"protected\"])) {\n          if (http != null ? (ref1 = http.params) != null ? ref1._id : void 0 : void 0) {\n            fileRef = self.collection.findOne(http.params._id);\n          }\n          result = http ? self[\"protected\"].call(_.extend(http, {\n            user: user,\n            userId: userId\n          }), fileRef || null) : self[\"protected\"].call({\n            user: user,\n            userId: userId\n          }, fileRef || null);\n        } else {\n          result = !!userId;\n        }\n        if ((http && result === true) || !http) {\n          return true;\n        } else {\n          rc = _.isNumber(result) ? result : 401;\n          if (self.debug) {\n            console.warn('[FilesCollection._checkAccess] WARN: Access denied!');\n          }\n          if (http) {\n            text = 'Access denied!';\n            http.response.writeHead(rc, {\n              'Content-Length': text.length,\n              'Content-Type': 'text/plain'\n            });\n            http.response.end(text);\n          }\n          return false;\n        }\n      } else {\n        return true;\n      }\n    };\n    this._methodNames = {\n      _Abort: \"_FilesCollectionAbort_\" + this.collectionName,\n      _Write: \"_FilesCollectionWrite_\" + this.collectionName,\n      _Start: \"_FilesCollectionStart_\" + this.collectionName,\n      _Remove: \"_FilesCollectionRemove_\" + this.collectionName\n    };\n    if (Meteor.isServer) {\n      this.on('_handleUpload', this._handleUpload);\n      this.on('_finishUpload', this._finishUpload);\n      WebApp.connectHandlers.use(function(request, response, next) {\n        var _file, body, handleError, http, params, uri, uris, version;\n        if (!!~request._parsedUrl.path.indexOf(self.downloadRoute + \"/\" + self.collectionName + \"/__upload\")) {\n          if (request.method === 'POST') {\n            handleError = function(error) {\n              console.warn(\"[FilesCollection] [Upload] [HTTP] Exception:\", error);\n              response.writeHead(500);\n              response.end(JSON.stringify({\n                error: error\n              }));\n            };\n            body = '';\n            request.on('data', function(data) {\n              return bound(function() {\n                body += data;\n              });\n            });\n            request.on('end', function() {\n              return bound(function() {\n                var _continueUpload, e, error, opts, ref, ref1, ref2, ref3, result, user;\n                try {\n                  if (request.headers['x-mtok'] && ((ref = Meteor.server.sessions) != null ? ref[request.headers['x-mtok']] : void 0)) {\n                    user = {\n                      userId: (ref1 = Meteor.server.sessions[request.headers['x-mtok']]) != null ? ref1.userId : void 0\n                    };\n                  } else {\n                    user = self._getUser({\n                      request: request,\n                      response: response\n                    });\n                  }\n                  if (request.headers['x-start'] !== '1') {\n                    opts = {\n                      fileId: request.headers['x-fileid']\n                    };\n                    if (request.headers['x-eof'] === '1') {\n                      opts.eof = true;\n                    } else {\n                      if (typeof Buffer.from === 'function') {\n                        try {\n                          opts.binData = Buffer.from(body, 'base64');\n                        } catch (error1) {\n                          e = error1;\n                          opts.binData = new Buffer(body, 'base64');\n                        }\n                      } else {\n                        opts.binData = new Buffer(body, 'base64');\n                      }\n                      opts.chunkId = parseInt(request.headers['x-chunkid']);\n                    }\n                    _continueUpload = self._continueUpload(opts.fileId);\n                    if (!_continueUpload) {\n                      throw new Meteor.Error(408, 'Can\\'t continue upload, session expired. Start upload again.');\n                    }\n                    ref2 = self._prepareUpload(_.extend(opts, _continueUpload), user.userId, 'HTTP'), result = ref2.result, opts = ref2.opts;\n                    if (opts.eof) {\n                      self._handleUpload(result, opts, function() {\n                        var ref3;\n                        response.writeHead(200);\n                        if (result != null ? (ref3 = result.file) != null ? ref3.meta : void 0 : void 0) {\n                          result.file.meta = fixJSONStringify(result.file.meta);\n                        }\n                        response.end(JSON.stringify(result));\n                      });\n                      return;\n                    } else {\n                      self.emit('_handleUpload', result, opts, NOOP);\n                    }\n                    response.writeHead(204);\n                    response.end();\n                  } else {\n                    opts = JSON.parse(body);\n                    opts.___s = true;\n                    if (self.debug) {\n                      console.info(\"[FilesCollection] [File Start HTTP] \" + opts.file.name + \" - \" + opts.fileId);\n                    }\n                    if (opts != null ? (ref3 = opts.file) != null ? ref3.meta : void 0 : void 0) {\n                      opts.file.meta = fixJSONParse(opts.file.meta);\n                    }\n                    result = self._prepareUpload(_.clone(opts), user.userId, 'HTTP Start Method').result;\n                    if (self.collection.findOne(result._id)) {\n                      throw new Meteor.Error(400, 'Can\\'t start upload, data substitution detected!');\n                    }\n                    opts._id = opts.fileId;\n                    opts.createdAt = new Date();\n                    self._preCollection.insert(_.omit(opts, '___s'));\n                    self._createStream(result._id, result.path, _.omit(opts, '___s'));\n                    if (opts.returnMeta) {\n                      response.writeHead(200);\n                      response.end(JSON.stringify({\n                        uploadRoute: self.downloadRoute + \"/\" + self.collectionName + \"/__upload\",\n                        file: result\n                      }));\n                    } else {\n                      response.writeHead(204);\n                      response.end();\n                    }\n                  }\n                } catch (error1) {\n                  error = error1;\n                  handleError(error);\n                }\n              });\n            });\n          } else {\n            next();\n          }\n          return;\n        }\n        if (!self[\"public\"]) {\n          if (!!~request._parsedUrl.path.indexOf(self.downloadRoute + \"/\" + self.collectionName)) {\n            uri = request._parsedUrl.path.replace(self.downloadRoute + \"/\" + self.collectionName, '');\n            if (uri.indexOf('/') === 0) {\n              uri = uri.substring(1);\n            }\n            uris = uri.split('/');\n            if (uris.length === 3) {\n              params = {\n                query: request._parsedUrl.query ? JSON.parse('{\"' + decodeURI(request._parsedUrl.query).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}') : {},\n                _id: uris[0],\n                version: uris[1],\n                name: uris[2]\n              };\n              http = {\n                request: request,\n                response: response,\n                params: params\n              };\n              if (self._checkAccess(http)) {\n                self.download(http, uris[1], self.collection.findOne(uris[0]));\n              }\n            } else {\n              next();\n            }\n          } else {\n            next();\n          }\n        } else {\n          if (!!~request._parsedUrl.path.indexOf(\"\" + self.downloadRoute)) {\n            uri = request._parsedUrl.path.replace(\"\" + self.downloadRoute, '');\n            if (uri.indexOf('/') === 0) {\n              uri = uri.substring(1);\n            }\n            uris = uri.split('/');\n            _file = uris[uris.length - 1];\n            if (_file) {\n              if (!!~_file.indexOf('-')) {\n                version = _file.split('-')[0];\n                _file = _file.split('-')[1].split('?')[0];\n              } else {\n                version = 'original';\n                _file = _file.split('?')[0];\n              }\n              params = {\n                query: request._parsedUrl.query ? JSON.parse('{\"' + decodeURI(request._parsedUrl.query).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}') : {},\n                file: _file,\n                _id: _file.split('.')[0],\n                version: version,\n                name: _file\n              };\n              http = {\n                request: request,\n                response: response,\n                params: params\n              };\n              self.download(http, version, self.collection.findOne(params._id));\n            } else {\n              next();\n            }\n          } else {\n            next();\n          }\n        }\n      });\n      _methods = {};\n      _methods[self._methodNames._Remove] = function(selector) {\n        var user, userFuncs;\n        check(selector, Match.OneOf(String, Object));\n        if (self.debug) {\n          console.info(\"[FilesCollection] [Unlink Method] [.remove(\" + selector + \")]\");\n        }\n        if (self.allowClientCode) {\n          if (self.onBeforeRemove && _.isFunction(self.onBeforeRemove)) {\n            user = false;\n            userFuncs = {\n              userId: this.userId,\n              user: function() {\n                if (Meteor.users) {\n                  return Meteor.users.findOne(this.userId);\n                } else {\n                  return null;\n                }\n              }\n            };\n            if (!self.onBeforeRemove.call(userFuncs, self.find(selector) || null)) {\n              throw new Meteor.Error(403, '[FilesCollection] [remove] Not permitted!');\n            }\n          }\n          self.remove(selector);\n          return true;\n        } else {\n          throw new Meteor.Error(401, '[FilesCollection] [remove] Run code from client is not allowed!');\n        }\n      };\n      _methods[self._methodNames._Start] = function(opts, returnMeta) {\n        var result;\n        check(opts, {\n          file: Object,\n          fileId: String,\n          FSName: Match.Optional(String),\n          chunkSize: Number,\n          fileLength: Number\n        });\n        check(returnMeta, Match.Optional(Boolean));\n        if (self.debug) {\n          console.info(\"[FilesCollection] [File Start Method] \" + opts.file.name + \" - \" + opts.fileId);\n        }\n        opts.___s = true;\n        result = self._prepareUpload(_.clone(opts), this.userId, 'DDP Start Method').result;\n        if (self.collection.findOne(result._id)) {\n          throw new Meteor.Error(400, 'Can\\'t start upload, data substitution detected!');\n        }\n        opts._id = opts.fileId;\n        opts.createdAt = new Date();\n        self._preCollection.insert(_.omit(opts, '___s'));\n        self._createStream(result._id, result.path, _.omit(opts, '___s'));\n        if (returnMeta) {\n          return {\n            uploadRoute: self.downloadRoute + \"/\" + self.collectionName + \"/__upload\",\n            file: result\n          };\n        } else {\n          return true;\n        }\n      };\n      _methods[self._methodNames._Write] = function(opts) {\n        var _continueUpload, e, ref, result;\n        check(opts, {\n          eof: Match.Optional(Boolean),\n          fileId: String,\n          binData: Match.Optional(String),\n          chunkId: Match.Optional(Number)\n        });\n        if (opts.binData) {\n          if (typeof Buffer.from === 'function') {\n            try {\n              opts.binData = Buffer.from(opts.binData, 'base64');\n            } catch (error1) {\n              e = error1;\n              opts.binData = new Buffer(opts.binData, 'base64');\n            }\n          } else {\n            opts.binData = new Buffer(opts.binData, 'base64');\n          }\n        }\n        _continueUpload = self._continueUpload(opts.fileId);\n        if (!_continueUpload) {\n          throw new Meteor.Error(408, 'Can\\'t continue upload, session expired. Start upload again.');\n        }\n        this.unblock();\n        ref = self._prepareUpload(_.extend(opts, _continueUpload), this.userId, 'DDP'), result = ref.result, opts = ref.opts;\n        if (opts.eof) {\n          try {\n            return Meteor.wrapAsync(self._handleUpload.bind(self, result, opts))();\n          } catch (error1) {\n            e = error1;\n            if (self.debug) {\n              console.warn(\"[FilesCollection] [Write Method] [DDP] Exception:\", e);\n            }\n            throw e;\n          }\n        } else {\n          self.emit('_handleUpload', result, opts, NOOP);\n        }\n        return true;\n      };\n      _methods[self._methodNames._Abort] = function(_id) {\n        var _continueUpload, ref, ref1, ref2;\n        check(_id, String);\n        _continueUpload = self._continueUpload(_id);\n        if (self.debug) {\n          console.info(\"[FilesCollection] [Abort Method]: \" + _id + \" - \" + (_continueUpload != null ? (ref = _continueUpload.file) != null ? ref.path : void 0 : void 0));\n        }\n        if ((ref1 = self._currentUploads) != null ? ref1[_id] : void 0) {\n          self._currentUploads[_id].stop();\n          self._currentUploads[_id].abort();\n        }\n        if (_continueUpload) {\n          self._preCollection.remove({\n            _id: _id\n          });\n          self.remove({\n            _id: _id\n          });\n          if (_continueUpload != null ? (ref2 = _continueUpload.file) != null ? ref2.path : void 0 : void 0) {\n            self.unlink({\n              _id: _id,\n              path: _continueUpload.file.path\n            });\n          }\n        }\n        return true;\n      };\n      Meteor.methods(_methods);\n    }\n  }\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name _prepareUpload\n  @summary Internal method. Used to optimize received data and check upload permission\n  @returns {Object}\n   */\n\n  FilesCollection.prototype._prepareUpload = Meteor.isServer ? function(opts, userId, transport) {\n    var base, ctx, extension, extensionWithDot, fileName, isUploadAllowed, ref, result;\n    if (opts.eof == null) {\n      opts.eof = false;\n    }\n    if (opts.binData == null) {\n      opts.binData = 'EOF';\n    }\n    if (opts.chunkId == null) {\n      opts.chunkId = -1;\n    }\n    if (opts.FSName == null) {\n      opts.FSName = opts.fileId;\n    }\n    if ((base = opts.file).meta == null) {\n      base.meta = {};\n    }\n    if (this.debug) {\n      console.info(\"[FilesCollection] [Upload] [\" + transport + \"] Got #\" + opts.chunkId + \"/\" + opts.fileLength + \" chunks, dst: \" + (opts.file.name || opts.file.fileName));\n    }\n    fileName = this._getFileName(opts.file);\n    ref = this._getExt(fileName), extension = ref.extension, extensionWithDot = ref.extensionWithDot;\n    result = opts.file;\n    result.name = fileName;\n    result.meta = opts.file.meta;\n    result.extension = extension;\n    result.ext = extension;\n    result._id = opts.fileId;\n    result.userId = userId || null;\n    result.path = \"\" + (this.storagePath(result)) + nodePath.sep + opts.FSName + extensionWithDot;\n    result = _.extend(result, this._dataToSchema(result));\n    if (this.onBeforeUpload && _.isFunction(this.onBeforeUpload)) {\n      ctx = _.extend({\n        file: opts.file\n      }, {\n        chunkId: opts.chunkId,\n        userId: result.userId,\n        user: function() {\n          if (Meteor.users) {\n            return Meteor.users.findOne(result.userId);\n          } else {\n            return null;\n          }\n        },\n        eof: opts.eof\n      });\n      isUploadAllowed = this.onBeforeUpload.call(ctx, result);\n      if (isUploadAllowed !== true) {\n        throw new Meteor.Error(403, _.isString(isUploadAllowed) ? isUploadAllowed : '@onBeforeUpload() returned false');\n      } else {\n        if (opts.___s === true && this.onInitiateUpload && _.isFunction(this.onInitiateUpload)) {\n          this.onInitiateUpload.call(ctx, result);\n        }\n      }\n    }\n    return {\n      result: result,\n      opts: opts\n    };\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name _finishUpload\n  @summary Internal method. Finish upload, close Writable stream, add record to MongoDB and flush used memory\n  @returns {undefined}\n   */\n\n  FilesCollection.prototype._finishUpload = Meteor.isServer ? function(result, opts, cb) {\n    var self;\n    if (this.debug) {\n      console.info(\"[FilesCollection] [Upload] [finish(ing)Upload] -> \" + result.path);\n    }\n    fs.chmod(result.path, this.permissions, NOOP);\n    self = this;\n    result.type = this._getMimeType(opts.file);\n    result[\"public\"] = this[\"public\"];\n    this._updateFileTypes(result);\n    this.collection.insert(_.clone(result), function(error, _id) {\n      if (error) {\n        cb && cb(error);\n        if (self.debug) {\n          console.error('[FilesCollection] [Upload] [_finishUpload] Error:', error);\n        }\n      } else {\n        self._preCollection.update({\n          _id: opts.fileId\n        }, {\n          $set: {\n            isFinished: true\n          }\n        });\n        result._id = _id;\n        if (self.debug) {\n          console.info(\"[FilesCollection] [Upload] [finish(ed)Upload] -> \" + result.path);\n        }\n        self.onAfterUpload && self.onAfterUpload.call(self, result);\n        self.emit('afterUpload', result);\n        cb && cb(null, result);\n      }\n    });\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name _handleUpload\n  @summary Internal method to handle upload process, pipe incoming data to Writable stream\n  @returns {undefined}\n   */\n\n  FilesCollection.prototype._handleUpload = Meteor.isServer ? function(result, opts, cb) {\n    var e, self;\n    try {\n      if (opts.eof) {\n        self = this;\n        this._currentUploads[result._id].end(function() {\n          return bound(function() {\n            self.emit('_finishUpload', result, opts, cb);\n          });\n        });\n      } else {\n        this._currentUploads[result._id].write(opts.chunkId, opts.binData, cb);\n      }\n    } catch (error1) {\n      e = error1;\n      if (this.debug) {\n        console.warn(\"[_handleUpload] [EXCEPTION:]\", e);\n      }\n      cb && cb(e);\n    }\n  } : void 0;\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _getMimeType\n  @param {Object} fileData - File Object\n  @summary Returns file's mime-type\n  @returns {String}\n   */\n\n  FilesCollection.prototype._getMimeType = function(fileData) {\n    var br, buf, error, ext, fd, mime, ref;\n    check(fileData, Object);\n    if (fileData != null ? fileData.type : void 0) {\n      mime = fileData.type;\n    }\n    if (Meteor.isServer && fileData.path && (!mime || !_.isString(mime))) {\n      try {\n        buf = new Buffer(262);\n        fd = fs.openSync(fileData.path, 'r');\n        br = fs.readSync(fd, buf, 0, 262, 0);\n        fs.close(fd, NOOP);\n        if (br < 262) {\n          buf = buf.slice(0, br);\n        }\n        ref = fileType(buf), mime = ref.mime, ext = ref.ext;\n      } catch (error1) {\n        error = error1;\n      }\n    }\n    if (!mime || !_.isString(mime)) {\n      mime = 'application/octet-stream';\n    }\n    return mime;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _getFileName\n  @param {Object} fileData - File Object\n  @summary Returns file's name\n  @returns {String}\n   */\n\n  FilesCollection.prototype._getFileName = function(fileData) {\n    var fileName;\n    fileName = fileData.name || fileData.fileName;\n    if (_.isString(fileName) && fileName.length > 0) {\n      return (fileData.name || fileData.fileName).replace(/\\.\\./g, '').replace(/\\//g, '');\n    } else {\n      return '';\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _getUser\n  @summary Returns object with `userId` and `user()` method which return user's object\n  @returns {Object}\n   */\n\n  FilesCollection.prototype._getUser = function(http) {\n    var cookie, mtok, ref, ref1, result, userId;\n    result = {\n      user: function() {\n        return null;\n      },\n      userId: null\n    };\n    if (Meteor.isServer) {\n      if (http) {\n        mtok = null;\n        if (http.request.headers['x-mtok']) {\n          mtok = http.request.headers['x-mtok'];\n        } else {\n          cookie = http.request.Cookies;\n          if (cookie.has('x_mtok')) {\n            mtok = cookie.get('x_mtok');\n          }\n        }\n        if (mtok) {\n          userId = (ref = Meteor.server.sessions) != null ? (ref1 = ref[mtok]) != null ? ref1.userId : void 0 : void 0;\n          if (userId) {\n            result.user = function() {\n              return Meteor.users.findOne(userId);\n            };\n            result.userId = userId;\n          }\n        }\n      }\n    } else {\n      if (typeof Meteor.userId === \"function\" ? Meteor.userId() : void 0) {\n        result.user = function() {\n          return Meteor.user();\n        };\n        result.userId = Meteor.userId();\n      }\n    }\n    return result;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _getExt\n  @param {String} FileName - File name\n  @summary Get extension from FileName\n  @returns {Object}\n   */\n\n  FilesCollection.prototype._getExt = function(fileName) {\n    var extension;\n    if (!!~fileName.indexOf('.')) {\n      extension = (fileName.split('.').pop().split('?')[0] || '').toLowerCase();\n      return {\n        ext: extension,\n        extension: extension,\n        extensionWithDot: '.' + extension\n      };\n    } else {\n      return {\n        ext: '',\n        extension: '',\n        extensionWithDot: ''\n      };\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _updateFileTypes\n  @param {Object} data - File data\n  @summary Internal method. Classify file based on 'type' field\n   */\n\n  FilesCollection.prototype._updateFileTypes = function(data) {\n    data.isVideo = /^video\\//i.test(data.type);\n    data.isAudio = /^audio\\//i.test(data.type);\n    data.isImage = /^image\\//i.test(data.type);\n    data.isText = /^text\\//i.test(data.type);\n    data.isJSON = /^application\\/json$/i.test(data.type);\n    data.isPDF = /^application\\/(x-)?pdf$/i.test(data.type);\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name _dataToSchema\n  @param {Object} data - File data\n  @summary Internal method. Build object in accordance with default schema from File data\n  @returns {Object}\n   */\n\n  FilesCollection.prototype._dataToSchema = function(data) {\n    var ds;\n    ds = {\n      name: data.name,\n      extension: data.extension,\n      path: data.path,\n      meta: data.meta,\n      type: data.type,\n      size: data.size,\n      userId: data.userId || null,\n      versions: {\n        original: {\n          path: data.path,\n          size: data.size,\n          type: data.type,\n          extension: data.extension\n        }\n      },\n      _downloadRoute: data._downloadRoute || this.downloadRoute,\n      _collectionName: data._collectionName || this.collectionName\n    };\n    this._updateFileTypes(ds);\n    ds._storagePath = data._storagePath || this.storagePath(_.extend(data, ds));\n    return ds;\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name write\n  @param {Buffer} buffer - Binary File's Buffer\n  @param {Object} opts - Object with file-data\n  @param {String} opts.name - File name, alias: `fileName`\n  @param {String} opts.type - File mime-type\n  @param {Object} opts.meta - File additional meta-data\n  @param {String} opts.userId - UserId, default *null*\n  @param {Function} callback - function(error, fileObj){...}\n  @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n  @summary Write buffer to FS and add to FilesCollection Collection\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.write = Meteor.isServer ? function(buffer, opts, callback, proceedAfterUpload) {\n    var FSName, extension, extensionWithDot, fileId, fileName, ref, result, self, stream;\n    if (opts == null) {\n      opts = {};\n    }\n    if (this.debug) {\n      console.info('[FilesCollection] [write()]');\n    }\n    if (_.isFunction(opts)) {\n      proceedAfterUpload = callback;\n      callback = opts;\n      opts = {};\n    } else if (_.isBoolean(callback)) {\n      proceedAfterUpload = callback;\n    } else if (_.isBoolean(opts)) {\n      proceedAfterUpload = opts;\n    }\n    check(opts, Match.Optional(Object));\n    check(callback, Match.Optional(Function));\n    check(proceedAfterUpload, Match.Optional(Boolean));\n    fileId = Random.id();\n    FSName = this.namingFunction ? this.namingFunction() : fileId;\n    fileName = opts.name || opts.fileName ? opts.name || opts.fileName : FSName;\n    ref = this._getExt(fileName), extension = ref.extension, extensionWithDot = ref.extensionWithDot;\n    self = this;\n    if (opts == null) {\n      opts = {};\n    }\n    opts.path = \"\" + (this.storagePath(opts)) + nodePath.sep + FSName + extensionWithDot;\n    opts.type = this._getMimeType(opts);\n    if (opts.meta == null) {\n      opts.meta = {};\n    }\n    if (opts.size == null) {\n      opts.size = buffer.length;\n    }\n    result = this._dataToSchema({\n      name: fileName,\n      path: opts.path,\n      meta: opts.meta,\n      type: opts.type,\n      size: opts.size,\n      userId: opts.userId,\n      extension: extension\n    });\n    result._id = fileId;\n    stream = fs.createWriteStream(opts.path, {\n      flags: 'w',\n      mode: this.permissions\n    });\n    stream.end(buffer, function(error) {\n      return bound(function() {\n        if (error) {\n          callback && callback(error);\n        } else {\n          self.collection.insert(result, function(error, _id) {\n            var fileRef;\n            if (error) {\n              callback && callback(error);\n              if (self.debug) {\n                console.warn(\"[FilesCollection] [write] [insert] Error: \" + fileName + \" -> \" + self.collectionName, error);\n              }\n            } else {\n              fileRef = self.collection.findOne(_id);\n              callback && callback(null, fileRef);\n              if (proceedAfterUpload === true) {\n                self.onAfterUpload && self.onAfterUpload.call(self, fileRef);\n                self.emit('afterUpload', fileRef);\n              }\n              if (self.debug) {\n                console.info(\"[FilesCollection] [write]: \" + fileName + \" -> \" + self.collectionName);\n              }\n            }\n          });\n        }\n      });\n    });\n    return this;\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name load\n  @param {String} url - URL to file\n  @param {Object} opts - Object with file-data\n  @param {String} opts.name - File name, alias: `fileName`\n  @param {String} opts.type - File mime-type\n  @param {Object} opts.meta - File additional meta-data\n  @param {String} opts.userId - UserId, default *null*\n  @param {Function} callback - function(error, fileObj){...}\n  @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n  @summary Download file, write stream to FS and add to FilesCollection Collection\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.load = Meteor.isServer ? function(url, opts, callback, proceedAfterUpload) {\n    var FSName, extension, extensionWithDot, fileId, fileName, pathParts, ref, self, storeResult;\n    if (this.debug) {\n      console.info(\"[FilesCollection] [load(\" + url + \", \" + (JSON.stringify(opts)) + \", callback)]\");\n    }\n    if (_.isFunction(opts)) {\n      proceedAfterUpload = callback;\n      callback = opts;\n      opts = {};\n    } else if (_.isBoolean(callback)) {\n      proceedAfterUpload = callback;\n    } else if (_.isBoolean(opts)) {\n      proceedAfterUpload = opts;\n    }\n    check(url, String);\n    check(opts, Match.Optional(Object));\n    check(callback, Match.Optional(Function));\n    check(proceedAfterUpload, Match.Optional(Boolean));\n    self = this;\n    if (opts == null) {\n      opts = {};\n    }\n    fileId = Random.id();\n    FSName = this.namingFunction ? this.namingFunction() : fileId;\n    pathParts = url.split('/');\n    fileName = opts.name || opts.fileName ? opts.name || opts.fileName : pathParts[pathParts.length - 1] || FSName;\n    ref = this._getExt(fileName), extension = ref.extension, extensionWithDot = ref.extensionWithDot;\n    if (opts.meta == null) {\n      opts.meta = {};\n    }\n    opts.path = \"\" + (this.storagePath(opts)) + nodePath.sep + FSName + extensionWithDot;\n    storeResult = function(result, callback) {\n      result._id = fileId;\n      self.collection.insert(result, function(error, _id) {\n        var fileRef;\n        if (error) {\n          callback && callback(error);\n          if (self.debug) {\n            console.error(\"[FilesCollection] [load] [insert] Error: \" + fileName + \" -> \" + self.collectionName, error);\n          }\n        } else {\n          fileRef = self.collection.findOne(_id);\n          callback && callback(null, fileRef);\n          if (proceedAfterUpload === true) {\n            self.onAfterUpload && self.onAfterUpload.call(self, fileRef);\n            self.emit('afterUpload', fileRef);\n          }\n          if (self.debug) {\n            console.info(\"[FilesCollection] [load] [insert] \" + fileName + \" -> \" + self.collectionName);\n          }\n        }\n      });\n    };\n    request.get(url).on('error', function(error) {\n      return bound(function() {\n        callback && callback(error);\n        if (self.debug) {\n          return console.error(\"[FilesCollection] [load] [request.get(\" + url + \")] Error:\", error);\n        }\n      });\n    }).on('response', function(response) {\n      return bound(function() {\n        response.on('end', function() {\n          return bound(function() {\n            var result;\n            if (self.debug) {\n              console.info(\"[FilesCollection] [load] Received: \" + url);\n            }\n            result = self._dataToSchema({\n              name: fileName,\n              path: opts.path,\n              meta: opts.meta,\n              type: opts.type || response.headers['content-type'] || self._getMimeType({\n                path: opts.path\n              }),\n              size: opts.size || parseInt(response.headers['content-length'] || 0),\n              userId: opts.userId,\n              extension: extension\n            });\n            if (!result.size) {\n              fs.stat(opts.path, function(error, stats) {\n                return bound(function() {\n                  if (error) {\n                    callback && callback(error);\n                  } else {\n                    result.versions.original.size = result.size = stats.size;\n                    storeResult(result, callback);\n                  }\n                });\n              });\n            } else {\n              storeResult(result, callback);\n            }\n          });\n        });\n      });\n    }).pipe(fs.createWriteStream(opts.path, {\n      flags: 'w',\n      mode: this.permissions\n    }));\n    return this;\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name addFile\n  @param {String} path          - Path to file\n  @param {String} opts          - [Optional] Object with file-data\n  @param {String} opts.type     - [Optional] File mime-type\n  @param {Object} opts.meta     - [Optional] File additional meta-data\n  @param {Object} opts.fileName - [Optional] File name, if not specified file name and extension will be taken from path\n  @param {String} opts.userId   - [Optional] UserId, default *null*\n  @param {Function} callback    - [Optional] function(error, fileObj){...}\n  @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n  @summary Add file from FS to FilesCollection\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.addFile = Meteor.isServer ? function(path, opts, callback, proceedAfterUpload) {\n    var self;\n    if (this.debug) {\n      console.info(\"[FilesCollection] [addFile(\" + path + \")]\");\n    }\n    if (_.isFunction(opts)) {\n      proceedAfterUpload = callback;\n      callback = opts;\n      opts = {};\n    } else if (_.isBoolean(callback)) {\n      proceedAfterUpload = callback;\n    } else if (_.isBoolean(opts)) {\n      proceedAfterUpload = opts;\n    }\n    if (this[\"public\"]) {\n      throw new Meteor.Error(403, 'Can not run [addFile] on public collection! Just Move file to root of your server, then add record to Collection');\n    }\n    check(path, String);\n    check(opts, Match.Optional(Object));\n    check(callback, Match.Optional(Function));\n    check(proceedAfterUpload, Match.Optional(Boolean));\n    self = this;\n    fs.stat(path, function(error, stats) {\n      return bound(function() {\n        var extension, extensionWithDot, pathParts, ref, result;\n        if (error) {\n          callback && callback(error);\n        } else if (stats.isFile()) {\n          if (opts == null) {\n            opts = {};\n          }\n          opts.path = path;\n          if (!opts.fileName) {\n            pathParts = path.split(nodePath.sep);\n            opts.fileName = pathParts[pathParts.length - 1];\n          }\n          ref = self._getExt(opts.fileName), extension = ref.extension, extensionWithDot = ref.extensionWithDot;\n          if (opts.type == null) {\n            opts.type = self._getMimeType(opts);\n          }\n          if (opts.meta == null) {\n            opts.meta = {};\n          }\n          if (opts.size == null) {\n            opts.size = stats.size;\n          }\n          result = self._dataToSchema({\n            name: opts.fileName,\n            path: path,\n            meta: opts.meta,\n            type: opts.type,\n            size: opts.size,\n            userId: opts.userId,\n            extension: extension,\n            _storagePath: path.replace(\"\" + nodePath.sep + opts.fileName, '')\n          });\n          self.collection.insert(result, function(error, _id) {\n            var fileRef;\n            if (error) {\n              callback && callback(error);\n              if (self.debug) {\n                console.warn(\"[FilesCollection] [addFile] [insert] Error: \" + fileName + \" -> \" + self.collectionName, error);\n              }\n            } else {\n              fileRef = self.collection.findOne(_id);\n              callback && callback(null, fileRef);\n              if (proceedAfterUpload === true) {\n                self.onAfterUpload && self.onAfterUpload.call(self, fileRef);\n                self.emit('afterUpload', fileRef);\n              }\n              if (self.debug) {\n                console.info(\"[FilesCollection] [addFile]: \" + fileName + \" -> \" + self.collectionName);\n              }\n            }\n          });\n        } else {\n          callback && callback(new Meteor.Error(400, \"[FilesCollection] [addFile(\" + path + \")]: File does not exist\"));\n        }\n      });\n    });\n    return this;\n  } : void 0;\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name findOne\n  @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n  @param {Object} options - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#sortspecifiers)\n  @summary Find and return Cursor for matching document Object\n  @returns {FileCursor} Instance\n   */\n\n  FilesCollection.prototype.findOne = function(selector, options) {\n    var doc;\n    if (this.debug) {\n      console.info(\"[FilesCollection] [findOne(\" + (JSON.stringify(selector)) + \", \" + (JSON.stringify(options)) + \")]\");\n    }\n    check(selector, Match.Optional(Match.OneOf(Object, String, Boolean, Number, null)));\n    check(options, Match.Optional(Object));\n    if (!arguments.length) {\n      selector = {};\n    }\n    doc = this.collection.findOne(selector, options);\n    if (doc) {\n      return new FileCursor(doc, this);\n    } else {\n      return doc;\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name find\n  @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n  @param {Object}        options  - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#sortspecifiers)\n  @summary Find and return Cursor for matching documents\n  @returns {FilesCursor} Instance\n   */\n\n  FilesCollection.prototype.find = function(selector, options) {\n    if (this.debug) {\n      console.info(\"[FilesCollection] [find(\" + (JSON.stringify(selector)) + \", \" + (JSON.stringify(options)) + \")]\");\n    }\n    check(selector, Match.Optional(Match.OneOf(Object, String, Boolean, Number, null)));\n    check(options, Match.Optional(Object));\n    if (!arguments.length) {\n      selector = {};\n    }\n    return new FilesCursor(selector, options, this);\n  };\n\n\n  /*\n  @locus Client\n  @memberOf FilesCollection\n  @name insert\n  @see https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n  @param {Object} config - Configuration object with next properties:\n    {File|Object} file           - HTML5 `files` item, like in change event: `e.currentTarget.files[0]`\n    {Object}      meta           - Additional data as object, use later for search\n    {Boolean}     allowWebWorkers- Allow/Deny WebWorkers usage\n    {Number|dynamic} streams     - Quantity of parallel upload streams, default: 2\n    {Number|dynamic} chunkSize   - Chunk size for upload\n    {String}      transport      - Upload transport `http` or `ddp`\n    {Object}      ddp            - Custom DDP connection. Object returned form `DDP.connect()`\n    {Function}    onUploaded     - Callback triggered when upload is finished, with two arguments `error` and `fileRef`\n    {Function}    onStart        - Callback triggered when upload is started after all successful validations, with two arguments `error` (always null) and `fileRef`\n    {Function}    onError        - Callback triggered on error in upload and/or FileReader, with two arguments `error` and `fileData`\n    {Function}    onProgress     - Callback triggered when chunk is sent, with only argument `progress`\n    {Function}    onBeforeUpload - Callback triggered right before upload is started:\n        return true to continue\n        return false to abort upload\n  @param {Boolean} autoStart     - Start upload immediately. If set to false, you need manually call .start() method on returned class. Useful to set EventListeners.\n  @summary Upload file to server over DDP or HTTP\n  @returns {UploadInstance} Instance. UploadInstance has next properties:\n    {ReactiveVar} onPause  - Is upload process on the pause?\n    {ReactiveVar} state    - active|paused|aborted|completed\n    {ReactiveVar} progress - Current progress in percentage\n    {Function}    pause    - Pause upload process\n    {Function}    continue - Continue paused upload process\n    {Function}    toggle   - Toggle continue/pause if upload process\n    {Function}    abort    - Abort upload\n    {Function}    readAsDataURL - Current file as data URL, use to create image preview and etc. Be aware of big files, may lead to browser crash\n   */\n\n  FilesCollection.prototype.insert = Meteor.isClient ? function(config, autoStart) {\n    if (autoStart == null) {\n      autoStart = true;\n    }\n    return (new this._UploadInstance(config, this))[autoStart ? 'start' : 'manual']();\n  } : void 0;\n\n\n  /*\n  @locus Client\n  @memberOf FilesCollection\n  @name _UploadInstance\n  @class UploadInstance\n  @summary Internal Class, used in upload\n   */\n\n  FilesCollection.prototype._UploadInstance = Meteor.isClient ? UploadInstance = (function() {\n    UploadInstance.prototype.__proto__ = EventEmitter.prototype;\n\n    function UploadInstance(config1, collection) {\n      var _file, base, base1, base2, base3, base4, base5, self, wwError;\n      this.config = config1;\n      this.collection = collection;\n      EventEmitter.call(this);\n      if (this.collection.debug) {\n        console.info('[FilesCollection] [insert()]');\n      }\n      self = this;\n      if ((base = this.config).ddp == null) {\n        base.ddp = this.collection.ddp;\n      }\n      if ((base1 = this.config).meta == null) {\n        base1.meta = {};\n      }\n      if ((base2 = this.config).streams == null) {\n        base2.streams = 2;\n      }\n      if (this.config.streams < 1) {\n        this.config.streams = 2;\n      }\n      if ((base3 = this.config).transport == null) {\n        base3.transport = 'ddp';\n      }\n      if ((base4 = this.config).chunkSize == null) {\n        base4.chunkSize = this.collection.chunkSize;\n      }\n      if ((base5 = this.config).allowWebWorkers == null) {\n        base5.allowWebWorkers = true;\n      }\n      this.config.transport = this.config.transport.toLowerCase();\n      check(this.config, {\n        file: Match.Any,\n        fileName: Match.Optional(String),\n        meta: Match.Optional(Object),\n        type: Match.Optional(String),\n        onError: Match.Optional(Function),\n        onAbort: Match.Optional(Function),\n        streams: Match.OneOf('dynamic', Number),\n        onStart: Match.Optional(Function),\n        isBase64: Match.Optional(Boolean),\n        transport: Match.OneOf('http', 'ddp'),\n        chunkSize: Match.OneOf('dynamic', Number),\n        onUploaded: Match.Optional(Function),\n        onProgress: Match.Optional(Function),\n        onBeforeUpload: Match.Optional(Function),\n        allowWebWorkers: Boolean,\n        ddp: Match.Any\n      });\n      if (!this.config.fileName && !this.config.file.name) {\n        throw new Meteor.Error(400, '\"fileName\" must me specified for base64 upload!');\n      }\n      if (this.config.isBase64 === true) {\n        check(this.config.file, String);\n        if (!!~this.config.file.indexOf('data:')) {\n          this.config.file = this.config.file.replace('data:', '');\n        }\n        if (!!~this.config.file.indexOf(',')) {\n          _file = this.config.file.split(',');\n          this.fileData = {\n            size: Math.floor((_file[1].replace(/\\=/g, '')).length / 4 * 3),\n            type: _file[0].split(';')[0],\n            name: this.config.fileName,\n            meta: this.config.meta\n          };\n          this.config.file = _file[1];\n        } else if (!this.config.type) {\n          throw new Meteor.Error(400, '\"type\" must me specified for base64 upload! And represent mime-type of the file');\n        } else {\n          this.fileData = {\n            size: Math.floor((this.config.file.replace(/\\=/g, '')).length / 4 * 3),\n            type: this.config.type,\n            name: this.config.fileName,\n            meta: this.config.meta\n          };\n        }\n      }\n      if (this.config.file) {\n        if (!this.config.isBase64) {\n          this.fileData = {\n            size: this.config.file.size,\n            type: this.config.type || this.config.file.type,\n            name: this.config.fileName || this.config.file.name,\n            meta: this.config.meta\n          };\n        }\n        if (this.collection.debug) {\n          console.time('insert ' + this.fileData.name);\n          console.time('loadFile ' + this.fileData.name);\n        }\n        if (this.collection._supportWebWorker && this.config.allowWebWorkers) {\n          try {\n            this.worker = new Worker(this.collection._webWorkerUrl);\n          } catch (error1) {\n            wwError = error1;\n            this.worker = false;\n            if (this.collection.debug) {\n              console.warn('[FilesCollection] [insert] [create WebWorker]: Can\\'t create WebWorker, fallback to MainThread', wwError);\n            }\n          }\n        } else {\n          this.worker = null;\n        }\n        this.startTime = {};\n        this.config.debug = this.collection.debug;\n        this.currentChunk = 0;\n        this.transferTime = 0;\n        this.trackerComp = null;\n        this.sentChunks = 0;\n        this.fileLength = 1;\n        this.EOFsent = false;\n        this.fileId = Random.id();\n        this.FSName = this.collection.namingFunction ? this.collection.namingFunction(this.fileData) : this.fileId;\n        this.pipes = [];\n        this.fileData = _.extend(this.fileData, this.collection._getExt(self.fileData.name), {\n          mime: this.collection._getMimeType(this.fileData)\n        });\n        this.fileData['mime-type'] = this.fileData.mime;\n        this.result = new this.collection._FileUpload(_.extend(self.config, {\n          fileData: this.fileData,\n          fileId: this.fileId,\n          _Abort: this.collection._methodNames._Abort\n        }));\n        this.beforeunload = function(e) {\n          var message;\n          message = _.isFunction(self.collection.onbeforeunloadMessage) ? self.collection.onbeforeunloadMessage.call(self.result, self.fileData) : self.collection.onbeforeunloadMessage;\n          if (e) {\n            e.returnValue = message;\n          }\n          return message;\n        };\n        this.result.config.beforeunload = this.beforeunload;\n        window.addEventListener('beforeunload', this.beforeunload, false);\n        this.result.config._onEnd = function() {\n          return self.emitEvent('_onEnd');\n        };\n        this.addListener('end', this.end);\n        this.addListener('start', this.start);\n        this.addListener('upload', this.upload);\n        this.addListener('sendEOF', this.sendEOF);\n        this.addListener('prepare', this.prepare);\n        this.addListener('sendChunk', this.sendChunk);\n        this.addListener('proceedChunk', this.proceedChunk);\n        this.addListener('createStreams', this.createStreams);\n        this.addListener('calculateStats', _.throttle(function() {\n          var _t, progress;\n          _t = (self.transferTime / self.sentChunks) / self.config.streams;\n          self.result.estimateTime.set(_t * (self.fileLength - self.sentChunks));\n          self.result.estimateSpeed.set(self.config.chunkSize / (_t / 1000));\n          progress = Math.round((self.sentChunks / self.fileLength) * 100);\n          self.result.progress.set(progress);\n          self.config.onProgress && self.config.onProgress.call(self.result, progress, self.fileData);\n          self.result.emitEvent('progress', [progress, self.fileData]);\n        }, 250));\n        this.addListener('_onEnd', function() {\n          if (self.result.estimateTimer) {\n            Meteor.clearInterval(self.result.estimateTimer);\n          }\n          if (self.worker) {\n            self.worker.terminate();\n          }\n          if (self.trackerComp) {\n            self.trackerComp.stop();\n          }\n          if (self.beforeunload) {\n            window.removeEventListener('beforeunload', self.beforeunload, false);\n          }\n          if (self.result) {\n            return self.result.progress.set(0);\n          }\n        });\n      } else {\n        throw new Meteor.Error(500, '[FilesCollection] [insert] Have you forget to pass a File itself?');\n      }\n    }\n\n    UploadInstance.prototype.end = function(error, data) {\n      if (this.collection.debug) {\n        console.timeEnd('insert ' + this.fileData.name);\n      }\n      this.emitEvent('_onEnd');\n      this.result.emitEvent('uploaded', [error, data]);\n      this.config.onUploaded && this.config.onUploaded.call(this.result, error, data);\n      if (error) {\n        if (this.collection.debug) {\n          console.error('[FilesCollection] [insert] [end] Error:', error);\n        }\n        this.result.abort();\n        this.result.state.set('aborted');\n        this.result.emitEvent('error', [error, this.fileData]);\n        this.config.onError && this.config.onError.call(this.result, error, this.fileData);\n      } else {\n        this.result.state.set('completed');\n        this.collection.emitEvent('afterUpload', [data]);\n      }\n      this.result.emitEvent('end', [error, data || this.fileData]);\n      return this.result;\n    };\n\n    UploadInstance.prototype.sendChunk = function(evt) {\n      var j, len, opts, p, pad, pipeFunc, ref, ref1, self;\n      self = this;\n      opts = {\n        fileId: this.fileId,\n        binData: evt.data.bin,\n        chunkId: evt.data.chunkId\n      };\n      if (this.config.isBase64) {\n        pad = opts.binData.length % 4;\n        if (pad) {\n          p = 0;\n          while (p < pad) {\n            opts.binData += '=';\n            p++;\n          }\n        }\n      }\n      this.emitEvent('data', [evt.data.bin]);\n      if (this.pipes.length) {\n        ref = this.pipes;\n        for (j = 0, len = ref.length; j < len; j++) {\n          pipeFunc = ref[j];\n          opts.binData = pipeFunc(opts.binData);\n        }\n      }\n      if (this.fileLength === evt.data.chunkId) {\n        if (this.collection.debug) {\n          console.timeEnd('loadFile ' + this.fileData.name);\n        }\n        this.emitEvent('readEnd');\n      }\n      if (opts.binData) {\n        if (this.config.transport === 'ddp') {\n          this.config.ddp.call(this.collection._methodNames._Write, opts, function(error) {\n            self.transferTime += (+(new Date)) - self.startTime[opts.chunkId];\n            if (error) {\n              if (self.result.state.get() !== 'aborted') {\n                self.emitEvent('end', [error]);\n              }\n            } else {\n              ++self.sentChunks;\n              if (self.sentChunks >= self.fileLength) {\n                self.emitEvent('sendEOF');\n              } else if (self.currentChunk < self.fileLength) {\n                self.emitEvent('upload');\n              }\n              self.emitEvent('calculateStats');\n            }\n          });\n        } else {\n          HTTP.call('POST', this.collection.downloadRoute + \"/\" + this.collection.collectionName + \"/__upload\", {\n            content: opts.binData,\n            headers: {\n              'x-mtok': ((ref1 = Meteor.connection) != null ? ref1._lastSessionId : void 0) || null,\n              'x-fileid': opts.fileId,\n              'x-chunkid': opts.chunkId,\n              'content-type': 'text/plain'\n            }\n          }, function(error) {\n            self.transferTime += (+(new Date)) - self.startTime[opts.chunkId];\n            if (error) {\n              if ((\"\" + error) === \"Error: network\") {\n                self.result.pause();\n              } else {\n                if (self.result.state.get() !== 'aborted') {\n                  self.emitEvent('end', [error]);\n                }\n              }\n            } else {\n              ++self.sentChunks;\n              if (self.sentChunks >= self.fileLength) {\n                self.emitEvent('sendEOF');\n              } else if (self.currentChunk < self.fileLength) {\n                self.emitEvent('upload');\n              }\n              self.emitEvent('calculateStats');\n            }\n          });\n        }\n      }\n    };\n\n    UploadInstance.prototype.sendEOF = function() {\n      var opts, ref, self;\n      if (!this.EOFsent) {\n        this.EOFsent = true;\n        self = this;\n        opts = {\n          eof: true,\n          fileId: this.fileId\n        };\n        if (this.config.transport === 'ddp') {\n          this.config.ddp.call(this.collection._methodNames._Write, opts, function() {\n            self.emitEvent('end', arguments);\n          });\n        } else {\n          HTTP.call('POST', this.collection.downloadRoute + \"/\" + this.collection.collectionName + \"/__upload\", {\n            content: '',\n            headers: {\n              'x-mtok': ((ref = Meteor.connection) != null ? ref._lastSessionId : void 0) || null,\n              'x-eof': '1',\n              'x-fileId': opts.fileId,\n              'content-type': 'text/plain'\n            }\n          }, function(error, result) {\n            result = JSON.parse((result != null ? result.content : void 0) || {});\n            if (result != null ? result.meta : void 0) {\n              result.meta = fixJSONParse(result.meta);\n            }\n            self.emitEvent('end', [error, result]);\n          });\n        }\n      }\n    };\n\n    UploadInstance.prototype.proceedChunk = function(chunkId) {\n      var chunk, fileReader, self;\n      self = this;\n      chunk = this.config.file.slice(this.config.chunkSize * (chunkId - 1), this.config.chunkSize * chunkId);\n      if (this.config.isBase64) {\n        self.emitEvent('sendChunk', [\n          {\n            data: {\n              bin: chunk,\n              chunkId: chunkId\n            }\n          }\n        ]);\n      } else {\n        if (FileReader) {\n          fileReader = new FileReader;\n          fileReader.onloadend = function(evt) {\n            var ref, ref1;\n            self.emitEvent('sendChunk', [\n              {\n                data: {\n                  bin: ((fileReader != null ? fileReader.result : void 0) || ((ref = evt.srcElement) != null ? ref.result : void 0) || ((ref1 = evt.target) != null ? ref1.result : void 0)).split(',')[1],\n                  chunkId: chunkId\n                }\n              }\n            ]);\n          };\n          fileReader.onerror = function(e) {\n            self.emitEvent('end', [(e.target || e.srcElement).error]);\n          };\n          fileReader.readAsDataURL(chunk);\n        } else if (FileReaderSync) {\n          fileReader = new FileReaderSync;\n          self.emitEvent('sendChunk', [\n            {\n              data: {\n                bin: fileReader.readAsDataURL(chunk).split(',')[1],\n                chunkId: chunkId\n              }\n            }\n          ]);\n        } else {\n          self.emitEvent('end', ['File API is not supported in this Browser!']);\n        }\n      }\n    };\n\n    UploadInstance.prototype.upload = function() {\n      if (this.result.onPause.get()) {\n        return;\n      }\n      if (this.result.state.get() === 'aborted') {\n        return this;\n      }\n      if (this.currentChunk <= this.fileLength) {\n        ++this.currentChunk;\n        if (this.worker) {\n          this.worker.postMessage({\n            sc: this.sentChunks,\n            cc: this.currentChunk,\n            cs: this.config.chunkSize,\n            f: this.config.file,\n            ib: this.config.isBase64\n          });\n        } else {\n          this.emitEvent('proceedChunk', [this.currentChunk]);\n        }\n      }\n      this.startTime[this.currentChunk] = +(new Date);\n    };\n\n    UploadInstance.prototype.createStreams = function() {\n      var i, self;\n      i = 1;\n      self = this;\n      while (i <= this.config.streams) {\n        self.emitEvent('upload');\n        i++;\n      }\n    };\n\n    UploadInstance.prototype.prepare = function() {\n      var _len, handleStart, opts, ref, ref1, self;\n      self = this;\n      this.config.onStart && this.config.onStart.call(this.result, null, this.fileData);\n      this.result.emitEvent('start', [null, this.fileData]);\n      if (this.config.chunkSize === 'dynamic') {\n        this.config.chunkSize = this.fileData.size / 1000;\n        if (this.config.chunkSize < 327680) {\n          this.config.chunkSize = 327680;\n        } else if (this.config.chunkSize > 1048576) {\n          this.config.chunkSize = 1048576;\n        }\n        if (this.config.transport === 'http') {\n          this.config.chunkSize = Math.round(this.config.chunkSize / 2);\n        }\n      }\n      if (this.config.isBase64) {\n        this.config.chunkSize = Math.floor(this.config.chunkSize / 4) * 4;\n        _len = Math.ceil(this.config.file.length / this.config.chunkSize);\n      } else {\n        this.config.chunkSize = Math.floor(this.config.chunkSize / 8) * 8;\n        _len = Math.ceil(this.fileData.size / this.config.chunkSize);\n      }\n      if (this.config.streams === 'dynamic') {\n        this.config.streams = _.clone(_len);\n        if (this.config.streams > 24) {\n          this.config.streams = 24;\n        }\n        if (this.config.transport === 'http') {\n          this.config.streams = Math.round(this.config.streams / 2);\n        }\n      }\n      this.fileLength = _len <= 0 ? 1 : _len;\n      if (this.config.streams > this.fileLength) {\n        this.config.streams = this.fileLength;\n      }\n      this.result.config.fileLength = this.fileLength;\n      opts = {\n        file: this.fileData,\n        fileId: this.fileId,\n        chunkSize: this.config.isBase64 ? (this.config.chunkSize / 4) * 3 : this.config.chunkSize,\n        fileLength: this.fileLength\n      };\n      if (this.FSName !== this.fileId) {\n        opts.FSName = this.FSName;\n      }\n      handleStart = function(error) {\n        if (error) {\n          if (self.collection.debug) {\n            console.error('[FilesCollection] [_Start] Error:', error);\n          }\n          self.emitEvent('end', [error]);\n        } else {\n          self.result.continueFunc = function() {\n            if (self.collection.debug) {\n              console.info('[FilesCollection] [insert] [continueFunc]');\n            }\n            self.emitEvent('createStreams');\n          };\n          self.emitEvent('createStreams');\n        }\n      };\n      if (this.config.transport === 'ddp') {\n        this.config.ddp.call(this.collection._methodNames._Start, opts, handleStart);\n      } else {\n        if ((ref = opts.file) != null ? ref.meta : void 0) {\n          opts.file.meta = fixJSONStringify(opts.file.meta);\n        }\n        HTTP.call('POST', this.collection.downloadRoute + \"/\" + this.collection.collectionName + \"/__upload\", {\n          data: opts,\n          headers: {\n            'x-start': '1',\n            'x-mtok': ((ref1 = Meteor.connection) != null ? ref1._lastSessionId : void 0) || null\n          }\n        }, handleStart);\n      }\n    };\n\n    UploadInstance.prototype.pipe = function(func) {\n      this.pipes.push(func);\n      return this;\n    };\n\n    UploadInstance.prototype.start = function() {\n      var isUploadAllowed, self;\n      self = this;\n      if (this.fileData.size <= 0) {\n        this.end(new Meteor.Error(400, 'Can\\'t upload empty file'));\n        return this.result;\n      }\n      if (this.config.onBeforeUpload && _.isFunction(this.config.onBeforeUpload)) {\n        isUploadAllowed = this.config.onBeforeUpload.call(_.extend(this.result, this.collection._getUser()), this.fileData);\n        if (isUploadAllowed !== true) {\n          return this.end(new Meteor.Error(403, _.isString(isUploadAllowed) ? isUploadAllowed : 'config.onBeforeUpload() returned false'));\n        }\n      }\n      if (this.collection.onBeforeUpload && _.isFunction(this.collection.onBeforeUpload)) {\n        isUploadAllowed = this.collection.onBeforeUpload.call(_.extend(this.result, this.collection._getUser()), this.fileData);\n        if (isUploadAllowed !== true) {\n          return this.end(new Meteor.Error(403, _.isString(isUploadAllowed) ? isUploadAllowed : 'collection.onBeforeUpload() returned false'));\n        }\n      }\n      Tracker.autorun(function(computation) {\n        self.trackerComp = computation;\n        if (!self.result.onPause.get()) {\n          if (Meteor.status().connected) {\n            if (self.collection.debug) {\n              console.info('[FilesCollection] [insert] [Tracker] [continue]');\n            }\n            self.result[\"continue\"]();\n          } else {\n            if (self.collection.debug) {\n              console.info('[FilesCollection] [insert] [Tracker] [pause]');\n            }\n            self.result.pause();\n          }\n        }\n      });\n      if (this.worker) {\n        this.worker.onmessage = function(evt) {\n          if (evt.data.error) {\n            if (self.collection.debug) {\n              console.warn('[FilesCollection] [insert] [worker] [onmessage] [ERROR:]', evt.data.error);\n            }\n            self.emitEvent('proceedChunk', [evt.data.chunkId]);\n          } else {\n            self.emitEvent('sendChunk', [evt]);\n          }\n        };\n        this.worker.onerror = function(e) {\n          if (self.collection.debug) {\n            console.error('[FilesCollection] [insert] [worker] [onerror] [ERROR:]', e);\n          }\n          self.emitEvent('end', [e.message]);\n        };\n      }\n      if (this.collection.debug) {\n        if (this.worker) {\n          console.info('[FilesCollection] [insert] using WebWorkers');\n        } else {\n          console.info('[FilesCollection] [insert] using MainThread');\n        }\n      }\n      self.emitEvent('prepare');\n      return this.result;\n    };\n\n    UploadInstance.prototype.manual = function() {\n      var self;\n      self = this;\n      this.result.start = function() {\n        self.emitEvent('start');\n      };\n      this.result.pipe = function(func) {\n        self.pipe(func);\n        return this;\n      };\n      return this.result;\n    };\n\n    return UploadInstance;\n\n  })() : void 0;\n\n\n  /*\n  @locus Client\n  @memberOf FilesCollection\n  @name _FileUpload\n  @class FileUpload\n  @summary Internal Class, instance of this class is returned from `insert()` method\n   */\n\n  FilesCollection.prototype._FileUpload = Meteor.isClient ? FileUpload = (function() {\n    FileUpload.prototype.__proto__ = EventEmitter.prototype;\n\n    function FileUpload(config1) {\n      var self;\n      this.config = config1;\n      EventEmitter.call(this);\n      self = this;\n      if (!this.config.isBase64) {\n        this.file = _.extend(this.config.file, this.config.fileData);\n      } else {\n        this.file = this.config.fileData;\n      }\n      this.state = new ReactiveVar('active');\n      this.onPause = new ReactiveVar(false);\n      this.progress = new ReactiveVar(0);\n      this.estimateTime = new ReactiveVar(1000);\n      this.estimateSpeed = new ReactiveVar(0);\n      this.estimateTimer = Meteor.setInterval(function() {\n        var _currentTime;\n        if (self.state.get() === 'active') {\n          _currentTime = self.estimateTime.get();\n          if (_currentTime > 1000) {\n            self.estimateTime.set(_currentTime - 1000);\n          }\n        }\n      }, 1000);\n    }\n\n    FileUpload.prototype.continueFunc = function() {};\n\n    FileUpload.prototype.pause = function() {\n      if (this.config.debug) {\n        console.info('[FilesCollection] [insert] [.pause()]');\n      }\n      if (!this.onPause.get()) {\n        this.onPause.set(true);\n        this.state.set('paused');\n        this.emitEvent('pause', [this.file]);\n      }\n    };\n\n    FileUpload.prototype[\"continue\"] = function() {\n      if (this.config.debug) {\n        console.info('[FilesCollection] [insert] [.continue()]');\n      }\n      if (this.onPause.get()) {\n        this.onPause.set(false);\n        this.state.set('active');\n        this.emitEvent('continue', [this.file]);\n        this.continueFunc();\n      }\n    };\n\n    FileUpload.prototype.toggle = function() {\n      if (this.config.debug) {\n        console.info('[FilesCollection] [insert] [.toggle()]');\n      }\n      if (this.onPause.get()) {\n        this[\"continue\"]();\n      } else {\n        this.pause();\n      }\n    };\n\n    FileUpload.prototype.abort = function() {\n      if (this.config.debug) {\n        console.info('[FilesCollection] [insert] [.abort()]');\n      }\n      window.removeEventListener('beforeunload', this.config.beforeunload, false);\n      this.config.onAbort && this.config.onAbort.call(this, this.file);\n      this.emitEvent('abort', [this.file]);\n      this.pause();\n      this.config._onEnd();\n      this.state.set('aborted');\n      if (this.config.debug) {\n        console.timeEnd('insert ' + this.config.fileData.name);\n      }\n      this.config.ddp.call(this.config._Abort, this.config.fileId);\n    };\n\n    return FileUpload;\n\n  })() : void 0;\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name remove\n  @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n  @param {Function} callback - Callback with one `error` argument\n  @summary Remove documents from the collection\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.remove = function(selector, callback) {\n    var docs, files, self;\n    if (selector == null) {\n      selector = {};\n    }\n    if (this.debug) {\n      console.info(\"[FilesCollection] [remove(\" + (JSON.stringify(selector)) + \")]\");\n    }\n    check(selector, Match.OneOf(Object, String));\n    check(callback, Match.Optional(Function));\n    if (Meteor.isClient) {\n      if (this.allowClientCode) {\n        this.ddp.call(this._methodNames._Remove, selector, callback || NOOP);\n      } else {\n        callback && callback(new Meteor.Error(401, '[FilesCollection] [remove] Run code from client is not allowed!'));\n        if (this.debug) {\n          console.warn('[FilesCollection] [remove] Run code from client is not allowed!');\n        }\n      }\n    } else {\n      files = this.collection.find(selector);\n      if (files.count() > 0) {\n        self = this;\n        files.forEach(function(file) {\n          self.unlink(file);\n        });\n      }\n      if (this.onAfterRemove) {\n        self = this;\n        docs = files.fetch();\n        this.collection.remove(selector, function() {\n          callback && callback.apply(this, arguments);\n          self.onAfterRemove(docs);\n        });\n      } else {\n        this.collection.remove(selector, callback || NOOP);\n      }\n    }\n    return this;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name update\n  @see http://docs.meteor.com/#/full/update\n  @summary link Mongo.Collection update method\n  @returns {Mongo.Collection} Instance\n   */\n\n  FilesCollection.prototype.update = function() {\n    this.collection.update.apply(this.collection, arguments);\n    return this.collection;\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name deny\n  @param {Object} rules\n  @see  https://docs.meteor.com/api/collections.html#Mongo-Collection-deny\n  @summary link Mongo.Collection deny methods\n  @returns {Mongo.Collection} Instance\n   */\n\n  FilesCollection.prototype.deny = Meteor.isServer ? function(rules) {\n    this.collection.deny(rules);\n    return this.collection;\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name allow\n  @param {Object} rules\n  @see https://docs.meteor.com/api/collections.html#Mongo-Collection-allow\n  @summary link Mongo.Collection allow methods\n  @returns {Mongo.Collection} Instance\n   */\n\n  FilesCollection.prototype.allow = Meteor.isServer ? function(rules) {\n    this.collection.allow(rules);\n    return this.collection;\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name denyClient\n  @see https://docs.meteor.com/api/collections.html#Mongo-Collection-deny\n  @summary Shorthands for Mongo.Collection deny method\n  @returns {Mongo.Collection} Instance\n   */\n\n  FilesCollection.prototype.denyClient = Meteor.isServer ? function() {\n    this.collection.deny({\n      insert: function() {\n        return true;\n      },\n      update: function() {\n        return true;\n      },\n      remove: function() {\n        return true;\n      }\n    });\n    return this.collection;\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name allowClient\n  @see https://docs.meteor.com/api/collections.html#Mongo-Collection-allow\n  @summary Shorthands for Mongo.Collection allow method\n  @returns {Mongo.Collection} Instance\n   */\n\n  FilesCollection.prototype.allowClient = Meteor.isServer ? function() {\n    this.collection.allow({\n      insert: function() {\n        return true;\n      },\n      update: function() {\n        return true;\n      },\n      remove: function() {\n        return true;\n      }\n    });\n    return this.collection;\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name unlink\n  @param {Object} fileRef - fileObj\n  @param {String} version - [Optional] file's version\n  @param {Function} callback - [Optional] callback function\n  @summary Unlink files and it's versions from FS\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.unlink = Meteor.isServer ? function(fileRef, version, callback) {\n    var ref, ref1;\n    if (this.debug) {\n      console.info(\"[FilesCollection] [unlink(\" + fileRef._id + \", \" + version + \")]\");\n    }\n    if (version) {\n      if (((ref = fileRef.versions) != null ? ref[version] : void 0) && ((ref1 = fileRef.versions[version]) != null ? ref1.path : void 0)) {\n        fs.unlink(fileRef.versions[version].path, callback || NOOP);\n      }\n    } else {\n      if (fileRef.versions && !_.isEmpty(fileRef.versions)) {\n        _.each(fileRef.versions, function(vRef) {\n          return bound(function() {\n            fs.unlink(vRef.path, callback || NOOP);\n          });\n        });\n      } else {\n        fs.unlink(fileRef.path, callback || NOOP);\n      }\n    }\n    return this;\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name _404\n  @summary Internal method, used to return 404 error\n  @returns {undefined}\n   */\n\n  FilesCollection.prototype._404 = Meteor.isServer ? function(http) {\n    var text;\n    if (this.debug) {\n      console.warn(\"[FilesCollection] [download(\" + http.request.originalUrl + \")] [_404] File not found\");\n    }\n    text = 'File Not Found :(';\n    http.response.writeHead(404, {\n      'Content-Length': text.length,\n      'Content-Type': 'text/plain'\n    });\n    http.response.end(text);\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name download\n  @param {Object} http    - Server HTTP object\n  @param {String} version - Requested file version\n  @param {Object} fileRef - Requested file Object\n  @summary Initiates the HTTP response\n  @returns {undefined}\n   */\n\n  FilesCollection.prototype.download = Meteor.isServer ? function(http, version, fileRef) {\n    var self, vRef;\n    if (version == null) {\n      version = 'original';\n    }\n    if (this.debug) {\n      console.info(\"[FilesCollection] [download(\" + http.request.originalUrl + \", \" + version + \")]\");\n    }\n    if (fileRef) {\n      if (_.has(fileRef, 'versions') && _.has(fileRef.versions, version)) {\n        vRef = fileRef.versions[version];\n        vRef._id = fileRef._id;\n      } else {\n        vRef = fileRef;\n      }\n    } else {\n      vRef = false;\n    }\n    if (!vRef || !_.isObject(vRef)) {\n      return this._404(http);\n    } else if (fileRef) {\n      self = this;\n      if (this.downloadCallback) {\n        if (!this.downloadCallback.call(_.extend(http, this._getUser(http)), fileRef)) {\n          return this._404(http);\n        }\n      }\n      if (this.interceptDownload && _.isFunction(this.interceptDownload)) {\n        if (this.interceptDownload(http, fileRef, version) === true) {\n          return;\n        }\n      }\n      fs.stat(vRef.path, function(statErr, stats) {\n        return bound(function() {\n          var responseType;\n          if (statErr || !stats.isFile()) {\n            return self._404(http);\n          }\n          if (stats.size !== vRef.size && !self.integrityCheck) {\n            vRef.size = stats.size;\n          }\n          if (stats.size !== vRef.size && self.integrityCheck) {\n            responseType = '400';\n          }\n          return self.serve(http, fileRef, vRef, version, null, responseType || '200');\n        });\n      });\n    } else {\n      return this._404(http);\n    }\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name serve\n  @param {Object} http    - Server HTTP object\n  @param {Object} fileRef - Requested file Object\n  @param {Object} vRef    - Requested file version Object\n  @param {String} version - Requested file version\n  @param {stream.Readable|null} readableStream - Readable stream, which serves binary file data\n  @param {String} responseType - Response code\n  @param {Boolean} force200 - Force 200 response code over 206\n  @summary Handle and reply to incoming request\n  @returns {undefined}\n   */\n\n  FilesCollection.prototype.serve = Meteor.isServer ? function(http, fileRef, vRef, version, readableStream, responseType, force200) {\n    var array, dispositionEncoding, dispositionName, dispositionType, end, headers, key, partiral, reqRange, self, start, stream, streamErrorHandler, take, text, value;\n    if (version == null) {\n      version = 'original';\n    }\n    if (readableStream == null) {\n      readableStream = null;\n    }\n    if (responseType == null) {\n      responseType = '200';\n    }\n    if (force200 == null) {\n      force200 = false;\n    }\n    self = this;\n    partiral = false;\n    reqRange = false;\n    if (http.params.query.download && http.params.query.download === 'true') {\n      dispositionType = 'attachment; ';\n    } else {\n      dispositionType = 'inline; ';\n    }\n    dispositionName = \"filename=\\\"\" + (encodeURIComponent(fileRef.name)) + \"\\\"; filename=*UTF-8\\\"\" + (encodeURIComponent(fileRef.name)) + \"\\\"; \";\n    dispositionEncoding = 'charset=utf-8';\n    http.response.setHeader('Content-Disposition', dispositionType + dispositionName + dispositionEncoding);\n    if (http.request.headers.range && !force200) {\n      partiral = true;\n      array = http.request.headers.range.split(/bytes=([0-9]*)-([0-9]*)/);\n      start = parseInt(array[1]);\n      end = parseInt(array[2]);\n      if (isNaN(end)) {\n        end = vRef.size - 1;\n      }\n      take = end - start;\n    } else {\n      start = 0;\n      end = vRef.size - 1;\n      take = vRef.size;\n    }\n    if (partiral || (http.params.query.play && http.params.query.play === 'true')) {\n      reqRange = {\n        start: start,\n        end: end\n      };\n      if (isNaN(start) && !isNaN(end)) {\n        reqRange.start = end - take;\n        reqRange.end = end;\n      }\n      if (!isNaN(start) && isNaN(end)) {\n        reqRange.start = start;\n        reqRange.end = start + take;\n      }\n      if ((start + take) >= vRef.size) {\n        reqRange.end = vRef.size - 1;\n      }\n      if (self.strict && (reqRange.start >= (vRef.size - 1) || reqRange.end > (vRef.size - 1))) {\n        responseType = '416';\n      } else {\n        responseType = '206';\n      }\n    } else {\n      responseType = '200';\n    }\n    streamErrorHandler = function(error) {\n      http.response.writeHead(500);\n      http.response.end(error.toString());\n      if (self.debug) {\n        console.error(\"[FilesCollection] [serve(\" + vRef.path + \", \" + version + \")] [500]\", error);\n      }\n    };\n    headers = _.isFunction(self.responseHeaders) ? self.responseHeaders(responseType, fileRef, vRef, version) : self.responseHeaders;\n    if (!headers['Cache-Control']) {\n      http.response.setHeader('Cache-Control', self.cacheControl);\n    }\n    for (key in headers) {\n      value = headers[key];\n      http.response.setHeader(key, value);\n    }\n    switch (responseType) {\n      case '400':\n        if (self.debug) {\n          console.warn(\"[FilesCollection] [serve(\" + vRef.path + \", \" + version + \")] [400] Content-Length mismatch!\");\n        }\n        text = 'Content-Length mismatch!';\n        http.response.writeHead(400, {\n          'Content-Type': 'text/plain',\n          'Content-Length': text.length\n        });\n        http.response.end(text);\n        break;\n      case '404':\n        return self._404(http);\n        break;\n      case '416':\n        if (self.debug) {\n          console.warn(\"[FilesCollection] [serve(\" + vRef.path + \", \" + version + \")] [416] Content-Range is not specified!\");\n        }\n        http.response.writeHead(416);\n        http.response.end();\n        break;\n      case '200':\n        if (self.debug) {\n          console.info(\"[FilesCollection] [serve(\" + vRef.path + \", \" + version + \")] [200]\");\n        }\n        stream = readableStream || fs.createReadStream(vRef.path);\n        if (readableStream) {\n          http.response.writeHead(200);\n        }\n        stream.on('open', function() {\n          http.response.writeHead(200);\n        }).on('error', streamErrorHandler).on('end', function() {\n          http.response.end();\n        });\n        if (self.throttle) {\n          stream.pipe(new Throttle({\n            bps: self.throttle,\n            chunksize: self.chunkSize\n          }));\n        }\n        stream.pipe(http.response);\n        break;\n      case '206':\n        if (self.debug) {\n          console.info(\"[FilesCollection] [serve(\" + vRef.path + \", \" + version + \")] [206]\");\n        }\n        http.response.setHeader('Content-Range', \"bytes \" + reqRange.start + \"-\" + reqRange.end + \"/\" + vRef.size);\n        stream = readableStream || fs.createReadStream(vRef.path, {\n          start: reqRange.start,\n          end: reqRange.end\n        });\n        if (readableStream) {\n          http.response.writeHead(206);\n        }\n        stream.on('open', function() {\n          http.response.writeHead(206);\n        }).on('error', streamErrorHandler).on('end', function() {\n          http.response.end();\n        });\n        if (self.throttle) {\n          stream.pipe(new Throttle({\n            bps: self.throttle,\n            chunksize: self.chunkSize\n          }));\n        }\n        stream.pipe(http.response);\n        break;\n    }\n  } : void 0;\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name link\n  @param {Object} fileRef - File reference object\n  @param {String} version - Version of file you would like to request\n  @summary Returns downloadable URL\n  @returns {String} Empty string returned in case if file not found in DB\n   */\n\n  FilesCollection.prototype.link = function(fileRef, version) {\n    if (version == null) {\n      version = 'original';\n    }\n    if (this.debug) {\n      console.info(\"[FilesCollection] [link(\" + (fileRef != null ? fileRef._id : void 0) + \", \" + version + \")]\");\n    }\n    check(fileRef, Object);\n    check(version, String);\n    if (!fileRef) {\n      return '';\n    }\n    return formatFleURL(fileRef, version);\n  };\n\n  return FilesCollection;\n\n})();\n\n\n/*\n@locus Anywhere\n@private\n@name formatFleURL\n@param {Object} fileRef - File reference object\n@param {String} version - [Optional] Version of file you would like build URL for\n@summary Returns formatted URL for file\n@returns {String} Downloadable link\n */\n\nformatFleURL = function(fileRef, version) {\n  var ext, ref, root;\n  if (version == null) {\n    version = 'original';\n  }\n  check(fileRef, Object);\n  check(version, String);\n  root = __meteor_runtime_config__.ROOT_URL.replace(/\\/+$/, '');\n  if ((ref = fileRef.extension) != null ? ref.length : void 0) {\n    ext = '.' + fileRef.extension;\n  } else {\n    ext = '';\n  }\n  if (fileRef[\"public\"] === true) {\n    return root + (version === 'original' ? fileRef._downloadRoute + \"/\" + fileRef._id + ext : fileRef._downloadRoute + \"/\" + version + \"-\" + fileRef._id + ext);\n  } else {\n    return root + (fileRef._downloadRoute + \"/\" + fileRef._collectionName + \"/\" + fileRef._id + \"/\" + version + \"/\" + fileRef._id + ext);\n  }\n};\n\nif (Meteor.isClient) {\n\n  /*\n  @locus Client\n  @TemplateHelper\n  @name fileURL\n  @param {Object} fileRef - File reference object\n  @param {String} version - [Optional] Version of file you would like to request\n  @summary Get download URL for file by fileRef, even without subscription\n  @example {{fileURL fileRef}}\n  @returns {String}\n   */\n  Meteor.startup(function() {\n    if (typeof Template !== \"undefined\" && Template !== null) {\n      Template.registerHelper('fileURL', function(fileRef, version) {\n        if (!fileRef || !_.isObject(fileRef)) {\n          return void 0;\n        }\n        version = !version || !_.isString(version) ? 'original' : version;\n        if (fileRef._id) {\n          return formatFleURL(fileRef, version);\n        } else {\n          return '';\n        }\n      });\n    }\n  });\n}\n\n\n/*\nExport the FilesCollection class\n */\n\nMeteor.Files = FilesCollection;\n\nexport { FilesCollection };\n","/*!\n * EventEmitter v4.2.11 - git.io/ee\n * Unlicense - http://unlicense.org/\n * Oliver Caldwell - http://oli.me.uk/\n * @preserve\n */\n\n/**\n * Class for managing events.\n * Can be extended to provide event functionality in other classes.\n *\n * @class EventEmitter Manages event registering and emitting.\n */\nfunction EventEmitter() {}\n\n// Shortcuts to improve speed and size\nconst proto = EventEmitter.prototype;\nconst exports = this;\nconst originalGlobalValue = exports.EventEmitter;\n\n/**\n * Finds the index of the listener for the event in its storage array.\n *\n * @param {Function[]} listeners Array of listeners to search through.\n * @param {Function} listener Method to look for.\n * @return {Number} Index of the specified listener, -1 if not found\n * @api private\n */\nfunction indexOfListener(listeners, listener) {\n  let i = listeners.length;\n  while (i--) {\n    if (listeners[i].listener === listener) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Alias a method while keeping the context correct, to allow for overwriting of target method.\n *\n * @param {String} name The name of the target method.\n * @return {Function} The aliased method\n * @api private\n */\nfunction alias(name) {\n  return function aliasClosure() {\n    return this[name].apply(this, arguments);\n  };\n}\n\n/**\n * Returns the listener array for the specified event.\n * Will initialise the event object and listener arrays if required.\n * Will return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\n * Each property in the object response is an array of listener functions.\n *\n * @param {String|RegExp} evt Name of the event to return the listeners from.\n * @return {Function[]|Object} All listener functions for the event.\n */\nproto.getListeners = function getListeners(evt) {\n  const events = this._getEvents();\n  let response;\n  let key;\n\n  // Return a concatenated array of all matching events if\n  // the selector is a regular expression.\n  if (evt instanceof RegExp) {\n    response = {};\n    for (key in events) {\n      if (events.hasOwnProperty(key) && evt.test(key)) {\n        response[key] = events[key];\n      }\n    }\n  } else {\n    response = events[evt] || (events[evt] = []);\n  }\n\n  return response;\n};\n\n/**\n * Takes a list of listener objects and flattens it into a list of listener functions.\n *\n * @param {Object[]} listeners Raw listener objects.\n * @return {Function[]} Just the listener functions.\n */\nproto.flattenListeners = function flattenListeners(listeners) {\n  const flatListeners = [];\n  let i;\n\n  for (i = 0; i < listeners.length; i += 1) {\n    flatListeners.push(listeners[i].listener);\n  }\n\n  return flatListeners;\n};\n\n/**\n * Fetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.\n *\n * @param {String|RegExp} evt Name of the event to return the listeners from.\n * @return {Object} All listener functions for an event in an object.\n */\nproto.getListenersAsObject = function getListenersAsObject(evt) {\n  const listeners = this.getListeners(evt);\n  let response;\n\n  if (listeners instanceof Array) {\n    response = {};\n    response[evt] = listeners;\n  }\n\n  return response || listeners;\n};\n\n/**\n * Adds a listener function to the specified event.\n * The listener will not be added if it is a duplicate.\n * If the listener returns true then it will be removed after it is called.\n * If you pass a regular expression as the event name then the listener will be added to all events that match it.\n *\n * @param {String|RegExp} evt Name of the event to attach the listener to.\n * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n * @return {Object} Current instance of EventEmitter for chaining.\n */\nproto.addListener = function addListener(evt, listener) {\n  const listeners = this.getListenersAsObject(evt);\n  const listenerIsWrapped = typeof listener === 'object';\n  let key;\n\n  for (key in listeners) {\n    if (listeners.hasOwnProperty(key) && indexOfListener(listeners[key], listener) === -1) {\n      listeners[key].push(listenerIsWrapped ? listener : {\n        listener,\n        once: false\n      });\n    }\n  }\n\n  return this;\n};\n\n/**\n * Alias of addListener\n */\nproto.on = alias('addListener');\n\n/**\n * Semi-alias of addListener. It will add a listener that will be\n * automatically removed after its first execution.\n *\n * @param {String|RegExp} evt Name of the event to attach the listener to.\n * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n * @return {Object} Current instance of EventEmitter for chaining.\n */\nproto.addOnceListener = function addOnceListener(evt, listener) {\n  return this.addListener(evt, {\n    listener,\n    once: true\n  });\n};\n\n/**\n * Alias of addOnceListener.\n */\nproto.once = alias('addOnceListener');\n\n/**\n * Defines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\n * You need to tell it what event names should be matched by a regex.\n *\n * @param {String} evt Name of the event to create.\n * @return {Object} Current instance of EventEmitter for chaining.\n */\nproto.defineEvent = function defineEvent(evt) {\n  this.getListeners(evt);\n  return this;\n};\n\n/**\n * Uses defineEvent to define multiple events.\n *\n * @param {String[]} evts An array of event names to define.\n * @return {Object} Current instance of EventEmitter for chaining.\n */\nproto.defineEvents = function defineEvents(evts) {\n  for (let i = 0; i < evts.length; i += 1) {\n    this.defineEvent(evts[i]);\n  }\n  return this;\n};\n\n/**\n * Removes a listener function from the specified event.\n * When passed a regular expression as the event name, it will remove the listener from all events that match it.\n *\n * @param {String|RegExp} evt Name of the event to remove the listener from.\n * @param {Function} listener Method to remove from the event.\n * @return {Object} Current instance of EventEmitter for chaining.\n */\nproto.removeListener = function removeListener(evt, listener) {\n  const listeners = this.getListenersAsObject(evt);\n  let index;\n  let key;\n\n  for (key in listeners) {\n    if (listeners.hasOwnProperty(key)) {\n      index = indexOfListener(listeners[key], listener);\n\n      if (index !== -1) {\n        listeners[key].splice(index, 1);\n      }\n    }\n  }\n\n  return this;\n};\n\n/**\n * Alias of removeListener\n */\nproto.off = alias('removeListener');\n\n/**\n * Adds listeners in bulk using the manipulateListeners method.\n * If you pass an object as the second argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\n * You can also pass it a regular expression to add the array of listeners to all events that match it.\n * Yeah, this function does quite a bit. That's probably a bad thing.\n *\n * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add to multiple events at once.\n * @param {Function[]} [listeners] An optional array of listener functions to add.\n * @return {Object} Current instance of EventEmitter for chaining.\n */\nproto.addListeners = function addListeners(evt, listeners) {\n  // Pass through to manipulateListeners\n  return this.manipulateListeners(false, evt, listeners);\n};\n\n/**\n * Removes listeners in bulk using the manipulateListeners method.\n * If you pass an object as the second argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n * You can also pass it an event name and an array of listeners to be removed.\n * You can also pass it a regular expression to remove the listeners from all events that match it.\n *\n * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to remove from multiple events at once.\n * @param {Function[]} [listeners] An optional array of listener functions to remove.\n * @return {Object} Current instance of EventEmitter for chaining.\n */\nproto.removeListeners = function removeListeners(evt, listeners) {\n  // Pass through to manipulateListeners\n  return this.manipulateListeners(true, evt, listeners);\n};\n\n/**\n * Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\n * The first argument will determine if the listeners are removed (true) or added (false).\n * If you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n * You can also pass it an event name and an array of listeners to be added/removed.\n * You can also pass it a regular expression to manipulate the listeners of all events that match it.\n *\n * @param {Boolean} remove True if you want to remove listeners, false if you want to add.\n * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add/remove from multiple events at once.\n * @param {Function[]} [listeners] An optional array of listener functions to add/remove.\n * @return {Object} Current instance of EventEmitter for chaining.\n */\nproto.manipulateListeners = function manipulateListeners(remove, evt, listeners) {\n  let i;\n  let value;\n  const single = remove ? this.removeListener : this.addListener;\n  const multiple = remove ? this.removeListeners : this.addListeners;\n\n  // If evt is an object then pass each of its properties to this method\n  if (typeof evt === 'object' && !(evt instanceof RegExp)) {\n    for (i in evt) {\n      if (evt.hasOwnProperty(i) && (value = evt[i])) {\n        // Pass the single listener straight through to the singular method\n        if (typeof value === 'function') {\n          single.call(this, i, value);\n        } else {\n          // Otherwise pass back to the multiple function\n          multiple.call(this, i, value);\n        }\n      }\n    }\n  } else {\n    // So evt must be a string\n    // And listeners must be an array of listeners\n    // Loop over it and pass each one to the multiple method\n    i = listeners.length;\n    while (i--) {\n      single.call(this, evt, listeners[i]);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Removes all listeners from a specified event.\n * If you do not specify an event then all listeners will be removed.\n * That means every event will be emptied.\n * You can also pass a regex to remove all events that match it.\n *\n * @param {String|RegExp} [evt] Optional name of the event to remove all listeners for. Will remove from every event if not passed.\n * @return {Object} Current instance of EventEmitter for chaining.\n */\nproto.removeEvent = function removeEvent(evt) {\n  const type = typeof evt;\n  const events = this._getEvents();\n  let key;\n\n  // Remove different things depending on the state of evt\n  if (type === 'string') {\n    // Remove all listeners for the specified event\n    delete events[evt];\n  } else if (evt instanceof RegExp) {\n    // Remove all events matching the regex.\n    for (key in events) {\n      if (events.hasOwnProperty(key) && evt.test(key)) {\n        delete events[key];\n      }\n    }\n  } else {\n    // Remove all listeners in all events\n    delete this._events;\n  }\n\n  return this;\n};\n\n/**\n * Alias of removeEvent.\n *\n * Added to mirror the node API.\n */\nproto.removeAllListeners = alias('removeEvent');\n\n/**\n * Emits an event of your choice.\n * When emitted, every listener attached to that event will be executed.\n * If you pass the optional argument array then those arguments will be passed to every listener upon execution.\n * Because it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\n * So they will not arrive within the array on the other side, they will be separate.\n * You can also pass a regular expression to emit to all events that match it.\n *\n * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n * @param {Array} [args] Optional array of arguments to be passed to each listener.\n * @return {Object} Current instance of EventEmitter for chaining.\n */\nproto.emitEvent = function emitEvent(evt, args) {\n  const listenersMap = this.getListenersAsObject(evt);\n  let listeners;\n  let listener;\n  let i;\n  let key;\n  let response;\n\n  for (key in listenersMap) {\n    if (listenersMap.hasOwnProperty(key)) {\n      listeners = listenersMap[key].slice(0);\n      i = listeners.length;\n\n      while (i--) {\n        // If the listener returns true then it shall be removed from the event\n        // The function is executed either with a basic call or an apply if there is an args array\n        listener = listeners[i];\n\n        if (listener.once === true) {\n          this.removeListener(evt, listener.listener);\n        }\n\n        response = listener.listener.apply(this, args || []);\n\n        if (response === this._getOnceReturnValue()) {\n          this.removeListener(evt, listener.listener);\n        }\n      }\n    }\n  }\n\n  return this;\n};\n\n/**\n * Alias of emitEvent\n */\nproto.trigger = alias('emitEvent');\n\n/**\n * Subtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\n * As with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.\n *\n * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n * @param {...*} Optional additional arguments to be passed to each listener.\n * @return {Object} Current instance of EventEmitter for chaining.\n */\nproto.emit = function emit(evt) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  return this.emitEvent(evt, args);\n};\n\n/**\n * Sets the current value to check against when executing listeners. If a\n * listeners return value matches the one set here then it will be removed\n * after execution. This value defaults to true.\n *\n * @param {*} value The new value to check for when executing listeners.\n * @return {Object} Current instance of EventEmitter for chaining.\n */\nproto.setOnceReturnValue = function setOnceReturnValue(value) {\n  this._onceReturnValue = value;\n  return this;\n};\n\n/**\n * Fetches the current value to check against when executing listeners. If\n * the listeners return value matches this one then it should be removed\n * automatically. It will return true by default.\n *\n * @return {*|Boolean} The current value to check for or the default, true.\n * @api private\n */\nproto._getOnceReturnValue = function _getOnceReturnValue() {\n  if (this.hasOwnProperty('_onceReturnValue')) {\n    return this._onceReturnValue;\n  }\n  return true;\n};\n\n/**\n * Fetches the events object and creates one if required.\n *\n * @return {Object} The events storage object.\n * @api private\n */\nproto._getEvents = function _getEvents() {\n  return this._events || (this._events = {});\n};\n\n/**\n * Reverts the global {@link EventEmitter} to its previous value and returns a reference to this version.\n *\n * @return {Function} Non conflicting EventEmitter class.\n */\nEventEmitter.noConflict = function noConflict() {\n  exports.EventEmitter = originalGlobalValue;\n  return EventEmitter;\n};\n\n// Expose the class\nexport { EventEmitter };\n"]}