{"version":3,"sources":["meteor://ðŸ’»app/packages/ostrio_files/files.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,OAAO,aAAP;;AAEA,IAAG,MAAM,CAAC,QAAV;AACE;AAAA;;KAAA;AAAA,EAGA,KAAe,GAAG,CAAC,OAAJ,CAAY,UAAZ,CAHf;AAAA,EAIA,SAAe,GAAG,CAAC,OAAJ,CAAY,QAAZ,CAJf;AAAA,EAKA,UAAe,GAAG,CAAC,OAAJ,CAAY,SAAZ,CALf;AAAA,EAMA,WAAe,GAAG,CAAC,OAAJ,CAAY,UAAZ,CANf;AAAA,EAOA,WAAe,GAAG,CAAC,OAAJ,CAAY,WAAZ,CAPf;AAAA,EAQA,WAAe,GAAG,CAAC,OAAJ,CAAY,MAAZ,CARf;AAUA;AAAA;;KAVA;AAAA,EAaA,QAAQ,MAAM,CAAC,eAAP,CAAuB,SAAC,QAAD;AAAc,WAAO,UAAP,CAAd;EAAA,CAAvB,CAbR,CADF;CAFA;;AAkBA;AAAA;;;;GAlBA;;AAAA,MAuBA,GAAS,EAvBT;;AAyBA;AAAA;;;;;GAzBA;;AAAA,GA+BA,GAAM,SAAC,GAAD;AACJ;AAAA,MACE;AAAA,iBAAgB,GAAG,CAAC,WAApB;AAAA,IACA,QAAgB,GAAG,CAAC,MADpB;AAAA,IAEA,gBAAgB,GAAG,CAAC,cAFpB;AAAA,IAGA,eAAgB,GAAG,CAAC,aAHpB;AAAA,IAIA,WAAgB,GAAG,CAAC,SAJpB;AAAA,IAKA,OAAgB,GAAG,CAAC,KALpB;AAAA,IAMA,SAAgB,GAAG,CAAC,OANpB;GADF;AAQA,SAAO,CAAP,CATI;AAAA,CA/BN;;AA0CA;AAAA;;;;;;GA1CA;;AAAA,EAiDA,GAAK,SAAC,EAAD,EAAK,IAAL;AACH,IAAE,CAAC,WAAH,GAAoB,IAAI,CAAC,WAAzB;AAAA,EACA,EAAE,CAAC,MAAH,GAAoB,IAAI,CAAC,MADzB;AAAA,EAEA,EAAE,CAAC,cAAH,GAAoB,IAAI,CAAC,cAFzB;AAAA,EAGA,EAAE,CAAC,aAAH,GAAoB,IAAI,CAAC,aAHzB;AAAA,EAIA,EAAE,CAAC,SAAH,GAAoB,IAAI,CAAC,SAJzB;AAAA,EAKA,EAAE,CAAC,KAAH,GAAoB,IAAI,CAAC,KALzB;AAAA,EAMA,EAAE,CAAC,OAAH,GAAoB,IAAI,CAAC,OANzB;AAOA,SAAO,EAAP,CARG;AAAA,CAjDL;;AA2DA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA3DA;;AAAA;AA8FE;;AAAA,wCAAc;AAAG,QAAG,MAAM,CAAC,QAAV;aAAwB,MAAM,CAAC,YAAY,CAAC,UAA5C;KAAA;aAA2D,YAAY,CAAC,UAAxE;KAAH;EAAA,EAAH,EAAX;;AACa,2BAAC,MAAD;AACX;AAAA,QAAG,MAAM,CAAC,QAAV;AACE,YAAM,CAAC,YAAY,CAAC,IAApB,CAAyB,IAAzB,EADF;KAAA;AAGE,kBAAY,CAAC,IAAb,CAAkB,IAAlB,EAHF;KAAA;AAIA,QAA2V,MAA3V;AAAA,MAAC,IAAC,iCAAF,EAAe,IAAC,uCAAhB,EAAgC,IAAC,qCAAjC,EAAgD,IAAC,uBAAjD,EAAyD,IAAC,6BAA1D,EAAqE,IAAC,uCAAtE,EAAsF,IAAC,qBAAvF,EAA8F,IAAC,qDAA/F,EAAsH,IAAC,iCAAvH,EAAoI,IAAC,mDAArI,EAA2J,IAAC,yCAA5J,EAA6K,IAAC,uCAA9K,EAA8L,IAAC,uCAA/L,EAA+M,IAAC,mCAAhN,EAA2N,IAAC,6BAA5N,EAAoO,IAAC,uBAArO,EAA6O,IAAC,2CAA9O,EAAgQ,IAAC,mCAAjQ,EAA+Q,IAAC,2BAAhR,EAA0R,IAAC,qCAA3R,EAA0S,IAAC,6CAA3S,EAA8T,IAAC,uCAA/T;KAJA;AAAA,IAMA,OAAqB,IANrB;AAAA,IAOA,SAAyB,aAPzB;;MAQA,IAAC,SAAoB;KARrB;;MASA,IAAC,aAAoB;KATrB;;MAUA,IAAC,gBAAoB;KAVrB;;MAWA,IAAC,aAAoB,OAAK;KAX1B;AAAA,IAYA,IAAC,UAAD,GAAqB,IAAI,CAAC,KAAL,CAAW,IAAC,UAAD,GAAa,CAAxB,IAA6B,CAZlD;AAaA,QAAG,IAAC,UAAD,IAAY,KAAK,cAApB;AACE,YAAU,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,sBAAoB,IAAC,eAArB,GAAoC,0KAAtD,CAAV,CADF;KAbA;;MAeA,IAAC,iBAAoB;KAfrB;AAAA,IAgBA,IAAC,cAAD,GAAqB,IAAC,cAAa,CAAC,OAAf,CAAuB,KAAvB,EAA8B,EAA9B,CAhBrB;;MAiBA,IAAC,kBAAoB;KAjBrB;;MAkBA,IAAC,kBAAoB;eAAG,MAAM,CAAC,EAAP,GAAH;MAAA;KAlBrB;;MAmBA,IAAC,kBAAoB;KAnBrB;;MAoBA,IAAC,mBAAoB;KApBrB;;MAqBA,IAAC,qBAAoB;KArBrB;AAuBA,QAAG,MAAM,CAAC,QAAV;;QACE,IAAC,yBAAyB;OAA1B;AAAA,MACA,WAAQ,OADR;AAAA,MAEA,WAAQ,SAFR;AAAA,MAGA,WAAQ,YAHR;AAAA,MAIA,WAAQ,YAJR;AAAA,MAKA,WAAQ,qBALR;AAAA,MAMA,WAAQ,aANR;AAAA,MAOA,WAAQ,cAPR;AAAA,MAQA,WAAQ,eARR;AAAA,MASA,WAAQ,iBATR;AAAA,MAUA,WAAQ,kBAVR;AAAA,MAWA,WAAQ,eAXR;AAaA,UAAG,IAAC,aAAJ;AACE,YAAG,OAAU,CAAC,GAAP,CAAW,oBAAX,CAAJ,IAAyC,MAAM,CAAC,aAAa,CAAC,OAArB,CAA6B,mBAA7B,CAA5C;AACE,gBAAM,CAAC,GAAP,CAAW,oBAAX,EAAiC,MAAM,CAAC,aAAa,CAAC,OAArB,CAA6B,mBAA7B,CAAjC,EAAoF,IAApF,EAA0F,GAA1F,EADF;SADF;OAbA;AAAA,MAiBA,MAAM,IAAC,sBAAP,EAA8B,KAAK,CAAC,KAAN,CAAY,MAAZ,EAAoB,QAApB,CAA9B,CAjBA,CADF;KAAA;;QAoBE,IAAC,oBAAoB;OAArB;;QACA,IAAC,UAAoB;OADrB;;QAEA,IAAC,YAAoB;OAFrB;;QAGA,IAAC,eAAoB,SAAS,KAAT,EAAgB,CAAhB;OAHrB;;QAIA,IAAC,wBAAwB,SAAS,KAAT,EAAgB,CAAhB;OAJzB;;QAKA,IAAC,gBAAoB;OALrB;;QAMA,IAAC,kBAAoB;OANrB;;QAOA,IAAC,iBAAoB;OAPrB;;QAQA,IAAC,kBAAoB;OARrB;;QASA,IAAC,oBAAoB;OATrB;AAUA,UAAG,IAAC,UAAD,IAAY,KAAK,YAApB;AACE,cAAU,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,sBAAoB,IAAC,eAArB,GAAoC,qJAAtD,CAAV,CADF;OAVA;;QAYA,IAAC,eAAoB,wBAAsB,IAAC;OAZ5C;AAAA,MAaA,IAAC,YAAD,GAAqB,IAAC,YAAW,CAAC,OAAb,CAAqB,KAArB,EAA4B,EAA5B,CAbrB;AAAA,MAcA,IAAC,YAAD,GAAqB,QAAQ,CAAC,SAAT,CAAmB,IAAC,YAApB,CAdrB;AAAA,MAgBA,EAAE,CAAC,MAAH,CAAU,IAAC,YAAX,EAAwB;AAAA,QAAC,MAAM,IAAC,qBAAR;OAAxB,EAAuD,SAAC,KAAD;AACrD,YAAG,KAAH;AACE,gBAAU,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,sBAAoB,IAAI,CAAC,cAAzB,GAAwC,SAAxC,GAAiD,IAAI,CAAC,WAAtD,GAAkE,mBAApF,EAAwG,KAAxG,CAAV,CADF;SADqD;MAAA,CAAvD,CAhBA;AAAA,MAqBA,MAAM,IAAC,OAAP,EAAe,OAAf,CArBA;AAAA,MAsBA,MAAM,IAAC,SAAP,EAAiB,KAAK,CAAC,KAAN,CAAY,KAAZ,EAAmB,MAAnB,CAAjB,CAtBA;AAAA,MAuBA,MAAM,IAAC,YAAP,EAAoB,MAApB,CAvBA;AAAA,MAwBA,MAAM,IAAC,YAAP,EAAoB,MAApB,CAxBA;AAAA,MAyBA,MAAM,IAAC,aAAP,EAAqB,MAArB,CAzBA;AAAA,MA0BA,MAAM,IAAC,cAAP,EAAsB,KAAK,CAAC,KAAN,CAAY,KAAZ,EAAmB,QAAnB,CAAtB,CA1BA;AAAA,MA2BA,MAAM,IAAC,eAAP,EAAuB,OAAvB,CA3BA;AAAA,MA4BA,MAAM,IAAC,eAAP,EAAuB,KAAK,CAAC,KAAN,CAAY,KAAZ,EAAmB,QAAnB,CAAvB,CA5BA;AAAA,MA6BA,MAAM,IAAC,iBAAP,EAAyB,KAAK,CAAC,KAAN,CAAY,KAAZ,EAAmB,QAAnB,CAAzB,CA7BA;AAAA,MA8BA,MAAM,IAAC,kBAAP,EAA0B,KAAK,CAAC,KAAN,CAAY,KAAZ,EAAmB,QAAnB,CAA1B,CA9BA,CApBF;KAvBA;AA2EA,QAAG,KAAK,OAAR;AACE,UAAC,OAAD,GACE;AAAA,cAAM;AAAA,gBAAM,MAAN;SAAN;AAAA,QACA,MAAM;AAAA,gBAAM,MAAN;SADN;AAAA,QAEA,MAAM;AAAA,gBAAM,MAAN;SAFN;AAAA,QAGA,MAAM;AAAA,gBAAM,MAAN;SAHN;AAAA,QAIA,SAAS;AAAA,gBAAM,OAAN;SAJT;AAAA,QAKA,SAAS;AAAA,gBAAM,OAAN;SALT;AAAA,QAMA,SAAS;AAAA,gBAAM,OAAN;SANT;AAAA,QAOA,QAAQ;AAAA,gBAAM,OAAN;SAPR;AAAA,QAQA,QAAQ;AAAA,gBAAM,OAAN;SARR;AAAA,QASA,SAAS;AAAA,gBAAM,MAAN;SATT;AAAA,QAUA,WACE;AAAA,gBAAM,MAAN;AAAA,UACA,UAAU,IADV;SAXF;AAAA,QAaA,cAAc;AAAA,gBAAM,MAAN;SAbd;AAAA,QAcA,gBAAgB;AAAA,gBAAM,MAAN;SAdhB;AAAA,QAeA,iBAAiB;AAAA,gBAAM,MAAN;SAfjB;AAAA,QAgBA,UACE;AAAA,gBAAM,OAAN;AAAA,UACA,UAAU,IADV;SAjBF;AAAA,QAmBA,MACE;AAAA,gBAAM,MAAN;AAAA,UACA,UAAU,IADV;AAAA,UAEA,UAAU,IAFV;SApBF;AAAA,QAuBA,QACE;AAAA,gBAAM,MAAN;AAAA,UACA,UAAU,IADV;SAxBF;AAAA,QA0BA,WACE;AAAA,gBAAM,IAAN;AAAA,UACA,WAAW;mBAAO,WAAP;UAAA,CADX;SA3BF;AAAA,QA6BA,UACE;AAAA,gBAAM,MAAN;AAAA,UACA,UAAU,IADV;SA9BF;OADF,CADF;KA3EA;AAAA,IA8GA,MAAM,IAAC,MAAP,EAAc,OAAd,CA9GA;AAAA,IA+GA,MAAM,IAAC,OAAP,EAAe,MAAf,CA/GA;AAAA,IAgHA,MAAM,IAAC,UAAP,EAAe,OAAf,CAhHA;AAAA,IAiHA,MAAM,IAAC,aAAP,EAAkB,KAAK,CAAC,KAAN,CAAY,OAAZ,EAAqB,QAArB,CAAlB,CAjHA;AAAA,IAkHA,MAAM,IAAC,UAAP,EAAkB,MAAlB,CAlHA;AAAA,IAmHA,MAAM,IAAC,cAAP,EAAsB,MAAtB,CAnHA;AAAA,IAoHA,MAAM,IAAC,eAAP,EAAuB,MAAvB,CApHA;AAAA,IAqHA,MAAM,IAAC,eAAP,EAAuB,QAAvB,CArHA;AAAA,IAsHA,MAAM,IAAC,eAAP,EAAuB,KAAK,CAAC,KAAN,CAAY,KAAZ,EAAmB,QAAnB,CAAvB,CAtHA;AAAA,IAuHA,MAAM,IAAC,gBAAP,EAAwB,OAAxB,CAvHA;AAyHA,QAAG,IAAC,UAAD,IAAY,IAAC,aAAhB;AACE,YAAU,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,sBAAoB,IAAC,eAArB,GAAoC,4DAAtD,CAAV,CADF;KAzHA;AAAA,IA4HA,IAAC,OAAD,GAAe,IA5Hf;AAAA,IA6HA,IAAC,OAAD,GAAe,EA7Hf;AAAA,IA8HA,IAAC,WAAD,GAAmB,SAAK,CAAC,UAAN,CAAiB,IAAC,eAAlB,CA9HnB;AAAA,IA+HA,IAAC,YAAD,GAAe,IA/Hf;AAAA,IAgIA,IAAC,QAAD,GAAe,OAAO,IAAC,eAAD,GAAkB,IAAC,cAA1B,CAhIf;AAAA,IAiIA,MAAO,KAAC,QAAD,CAAP,GAAmB,IAjInB;AAAA,IAmIA,IAAC,YAAD,GAAe,SAAC,IAAD;AACb;AAAA,UAAG,IAAI,CAAC,WAAD,CAAP;AACE,eAAO,KAAP;AAAA,QACA,YAAY,IAAI,CAAC,OAAL,CAAa,IAAb,CADZ;AAAA,QAEC,qBAAD,EAAO,yBAFP;AAAA,QAGA,OAAO,MAHP;AAKA,YAAG,CAAC,CAAC,UAAF,CAAa,IAAI,CAAC,WAAD,CAAjB,CAAH;AACE,mBAAY,IAAH,GAAa,IAAI,CAAC,WAAD,CAAU,CAAC,IAAf,CAAoB,CAAC,CAAC,MAAF,CAAS,IAAT,EAAe,SAAf,CAApB,EAAgD,IAAI,CAAC,WAAL,IAAoB,IAApE,CAAb,GAA6F,IAAI,CAAC,WAAD,CAAU,CAAC,IAAf,CAAoB,SAApB,EAAgC,IAAI,CAAC,WAAL,IAAoB,IAApD,CAAtG,CADF;SAAA;AAGE,mBAAS,EAAC,IAAV,CAHF;SALA;AAUA,YAAG,CAAC,QAAS,WAAU,IAApB,KAA6B,KAAhC;AACE,iBAAO,IAAP,CADF;SAAA;AAGE,eAAQ,CAAC,CAAC,QAAF,CAAW,MAAX,CAAH,GAA2B,MAA3B,GAAuC,GAA5C;AACA,cAAqE,IAAI,CAAC,KAA1E;AAAA,mBAAO,CAAC,IAAR,CAAa,oDAAb;WADA;AAEA,cAAG,IAAH;AACE,mBAAO,gBAAP;AAAA,YACA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,EAAxB,EACE;AAAA,gCAAkB,IAAI,CAAC,MAAvB;AAAA,cACA,gBAAkB,YADlB;aADF,CADA;AAAA,YAIA,IAAI,CAAC,QAAQ,CAAC,GAAd,CAAkB,IAAlB,CAJA,CADF;WAFA;AAQA,iBAAO,KAAP,CAXF;SAXF;OAAA;AAwBE,eAAO,IAAP,CAxBF;OADa;IAAA,CAnIf;AAAA,IA8JA,IAAC,YAAD,GACE;AAAA,uBAAkB,oBAAkB,IAAC,QAArC;AAAA,MACA,iBAAkB,oBAAkB,IAAC,QADrC;AAAA,MAEA,kBAAkB,qBAAmB,IAAC,QAFtC;KA/JF;AAmKA,QAAG,MAAM,CAAC,QAAV;AACE,UAAC,GAAD,CAAI,cAAJ,EAAoB,IAAC,aAArB;AAAA,MACA,IAAC,GAAD,CAAI,cAAJ,EAAoB,IAAC,aAArB,CADA;AAAA,MAGA,MAAM,CAAC,eAAe,CAAC,GAAvB,CAA2B,SAAC,OAAD,EAAU,QAAV,EAAoB,IAApB;eAA6B,MAAM;AAC5D;AAAA,cAAG,EAAC,CAAC,OAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAxB,CAAmC,IAAI,CAAC,aAAN,GAAoB,GAApB,GAAuB,IAAI,CAAC,cAA5B,GAA2C,WAA7E,CAAN;AACE,gBAAG,OAAO,CAAC,MAAR,KAAkB,MAArB;AACE,qBAAO,EAAP;AAAA,cACA,OAAO,CAAC,EAAR,CAAW,MAAX,EAAmB,SAAC,IAAD;uBAAU,MAAM;AACjC,0BAAQ,IAAR,CADiC;gBAAA,CAAN,EAAV;cAAA,CAAnB,CADA;AAAA,cAIA,OAAO,CAAC,EAAR,CAAW,KAAX,EAAkB;uBAAG,MAAM;AACzB;AAAA;AACE,2BAAiB,IAAI,CAAC,KAAL,CAAW,IAAX,CAAjB;AAAA,oBACA,OAAiB,IAAI,CAAC,OAAL,CAAa,IAAb,CADjB;AAAA,oBAEA,MAAiB,IAAI,CAAC,aAAL,CAAmB,IAAnB,EAAyB,IAAI,CAAC,MAA9B,EAAsC,MAAtC,CAAjB,EAAC,mBAAD,EAAS,eAFT;AAIA,wBAAG,IAAI,CAAC,GAAR;AACE;AACE,8BAAM,CAAC,SAAP,CAAiB,IAAI,CAAC,YAAY,CAAC,IAAlB,CAAuB,IAAvB,EAA6B,MAA7B,EAAqC,IAArC,CAAjB;AAAA,wBACA,QAAQ,CAAC,SAAT,CAAmB,GAAnB,CADA;AAAA,wBAEA,QAAQ,CAAC,GAAT,CAAa,IAAI,CAAC,SAAL,CAAe,MAAf,CAAb,CAFA;AAGA,+BAJF;uBAAA;AAME,wBADI,UACJ;AAAA,+BAAO,CAAC,IAAR,CAAa,oDAAb,EAAmE,CAAnE;AAAA,wBACA,QAAQ,CAAC,SAAT,CAAmB,GAAnB,CADA;AAAA,wBAEA,QAAQ,CAAC,GAAT,CAAa,IAAI,CAAC,SAAL,CAAe;AAAA,0BAAC,OAAO,CAAR;yBAAf,CAAb,CAFA,CANF;uBADF;qBAAA;AAWE,0BAAI,CAAC,IAAL,CAAU,cAAV,EAA0B,MAA1B,EAAkC,IAAlC,EAAwC,IAAxC,EAXF;qBAJA;AAAA,oBAiBA,QAAQ,CAAC,SAAT,CAAmB,GAAnB,CAjBA;AAAA,oBAkBA,QAAQ,CAAC,GAAT,CAAa,IAAI,CAAC,SAAL,CAAe;AAAA,sBAAC,SAAS,IAAV;qBAAf,CAAb,CAlBA,CADF;mBAAA;AAqBE,oBADI,UACJ;AAAA,2BAAO,CAAC,IAAR,CAAa,oDAAb,EAAmE,CAAnE;AAAA,oBACA,QAAQ,CAAC,SAAT,CAAmB,GAAnB,CADA;AAAA,oBAEA,QAAQ,CAAC,GAAT,CAAa,IAAI,CAAC,SAAL,CAAe;AAAA,sBAAC,OAAO,CAAR;qBAAf,CAAb,CAFA,CArBF;mBADyB;gBAAA,CAAN,EAAH;cAAA,CAAlB,CAJA,CADF;aAAA;AAgCE,qBAhCF;aAAA;AAiCA,mBAlCF;WAAA;AAoCA,mBAAW,CAAC,QAAD,CAAX;AACE,gBAAG,EAAC,CAAC,OAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAxB,CAAmC,IAAI,CAAC,aAAN,GAAoB,GAApB,GAAuB,IAAI,CAAC,cAA9D,CAAN;AACE,oBAAM,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,OAAxB,CAAmC,IAAI,CAAC,aAAN,GAAoB,GAApB,GAAuB,IAAI,CAAC,cAA9D,EAAgF,EAAhF,CAAN;AACA,kBAAG,GAAG,CAAC,OAAJ,CAAY,GAAZ,MAAoB,CAAvB;AACE,sBAAM,GAAG,CAAC,SAAJ,CAAc,CAAd,CAAN,CADF;eADA;AAAA,cAIA,OAAO,GAAG,CAAC,KAAJ,CAAU,GAAV,CAJP;AAKA,kBAAG,IAAI,CAAC,MAAL,KAAe,CAAlB;AACE,yBACE;AAAA,yBAAU,OAAO,CAAC,UAAU,CAAC,KAAtB,GAAiC,IAAI,CAAC,KAAL,CAAW,OAAO,UAAU,OAAO,CAAC,UAAU,CAAC,KAA7B,CAAmC,CAAC,OAApC,CAA4C,IAA5C,EAAkD,KAAlD,CAAwD,CAAC,OAAzD,CAAiE,IAAjE,EAAuE,KAAvE,CAA6E,CAAC,OAA9E,CAAsF,IAAtF,EAA2F,KAA3F,CAAP,GAA2G,IAAtH,CAAjC,GAAkK,EAAzK;AAAA,kBACA,KAAK,IAAK,GADV;AAAA,kBAEA,SAAS,IAAK,GAFd;AAAA,kBAGA,MAAM,IAAK,GAHX;iBADF;AAAA,gBAKA,OAAO;AAAA,kBAAC,gBAAD;AAAA,kBAAU,kBAAV;AAAA,kBAAoB,cAApB;iBALP;AAMA,oBAA4D,IAAI,CAAC,WAAL,CAAiB,IAAjB,CAA5D;AAAA,sBAAI,CAAC,OAAL,CAAa,IAAK,GAAlB,CAAqB,CAAC,QAAQ,CAAC,IAA/B,CAAoC,IAApC,EAA0C,IAA1C,EAAgD,IAAK,GAArD;iBAPF;eAAA;AASE,uBATF;eANF;aAAA;AAiBE,qBAjBF;aADF;WAAA;AAoBE,gBAAG,EAAC,CAAC,OAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAxB,CAAgC,KAAG,IAAI,CAAC,aAAxC,CAAN;AACE,oBAAM,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,OAAxB,CAAgC,KAAG,IAAI,CAAC,aAAxC,EAAyD,EAAzD,CAAN;AACA,kBAAG,GAAG,CAAC,OAAJ,CAAY,GAAZ,MAAoB,CAAvB;AACE,sBAAM,GAAG,CAAC,SAAJ,CAAc,CAAd,CAAN,CADF;eADA;AAAA,cAIA,OAAQ,GAAG,CAAC,KAAJ,CAAU,GAAV,CAJR;AAAA,cAKA,QAAQ,IAAK,KAAI,CAAC,MAAL,GAAc,CAAd,CALb;AAMA,kBAAG,KAAH;AACE,oBAAG,EAAC,CAAC,KAAM,CAAC,OAAN,CAAc,GAAd,CAAN;AACE,4BAAU,KAAK,CAAC,KAAN,CAAY,GAAZ,CAAiB,GAA3B;AAAA,kBACA,QAAU,KAAK,CAAC,KAAN,CAAY,GAAZ,CAAiB,GAAE,CAAC,KAApB,CAA0B,GAA1B,CAA+B,GADzC,CADF;iBAAA;AAIE,4BAAU,UAAV;AAAA,kBACA,QAAU,KAAK,CAAC,KAAN,CAAY,GAAZ,CAAiB,GAD3B,CAJF;iBAAA;AAAA,gBAOA,SACE;AAAA,yBAAU,OAAO,CAAC,UAAU,CAAC,KAAtB,GAAiC,IAAI,CAAC,KAAL,CAAW,OAAO,UAAU,OAAO,CAAC,UAAU,CAAC,KAA7B,CAAmC,CAAC,OAApC,CAA4C,IAA5C,EAAkD,KAAlD,CAAwD,CAAC,OAAzD,CAAiE,IAAjE,EAAuE,KAAvE,CAA6E,CAAC,OAA9E,CAAsF,IAAtF,EAA2F,KAA3F,CAAP,GAA2G,IAAtH,CAAjC,GAAkK,EAAzK;AAAA,kBACA,MAAM,KADN;AAAA,kBAEA,KAAK,KAAK,CAAC,KAAN,CAAY,GAAZ,CAAiB,GAFtB;AAAA,kBAGA,SAAS,OAHT;AAAA,kBAIA,MAAM,KAJN;iBARF;AAAA,gBAaA,OAAO;AAAA,kBAAC,gBAAD;AAAA,kBAAU,kBAAV;AAAA,kBAAoB,cAApB;iBAbP;AAAA,gBAcA,IAAI,CAAC,OAAL,CAAa,MAAM,CAAC,GAApB,CAAwB,CAAC,QAAQ,CAAC,IAAlC,CAAuC,IAAvC,EAA6C,IAA7C,EAAmD,OAAnD,CAdA,CADF;eAAA;AAiBE,uBAjBF;eAPF;aAAA;AA0BE,qBA1BF;aApBF;WArC4D;QAAA,CAAN,EAA7B;MAAA,CAA3B,CAHA;AAAA,MAyFA,WAAW,EAzFX;AAAA,MA0FA,QAAS,KAAI,CAAC,WAAW,CAAC,gBAAjB,CAAT,GAA8C,SAAC,IAAD;AAC5C;AAAA,cAAM,IAAN,EAAY,MAAZ;AACA,YAAoD,IAAI,CAAC,KAAzD;AAAA,iBAAO,CAAC,IAAR,CAAa,mCAAb;SADA;AAGA,YAAG,IAAI,CAAC,eAAR;AACE,uBAAa,GAAG,MAAO,KAAI,CAAC,OAAL,CAAV,EAAyB,IAAzB,CAAb;AACA,cAAG,IAAI,CAAC,cAAL,IAAwB,CAAC,CAAC,UAAF,CAAa,IAAI,CAAC,cAAlB,CAA3B;AACE,mBAAO,KAAP;AAAA,YACA,YAAY;AAAA,cACV,QAAQ,IAAC,OADC;AAAA,cAEV,MAAM;AAAG,oBAAG,MAAM,CAAC,KAAV;yBAAqB,MAAM,CAAC,KAAK,CAAC,OAAb,CAAqB,IAAC,OAAtB,EAArB;iBAAA;yBAAwD,OAAxD;iBAAH;cAAA,CAFI;aADZ;AAAA,YAMA,SAAS,IAAI,CAAC,IAAI,CAAC,IAAV,CAAe,UAAf,EAA2B,IAAI,CAAC,MAAhC,CANT;AAOA,qBAAW,CAAC,cAAc,CAAC,IAApB,CAAyB,SAAzB,EAAqC,MAAM,CAAC,MAAP,IAAiB,IAAtD,CAAP;AACE,oBAAU,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,2CAAlB,CAAV,CADF;aARF;WADA;AAAA,UAYA,IAAI,CAAC,MAAM,CAAC,IAAZ,CAAiB,UAAjB,EAA6B,IAAI,CAAC,MAAlC,CAZA;AAaA,iBAAO,IAAP,CAdF;SAAA;AAgBE,gBAAU,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,iEAAlB,CAAV,CAhBF;SAJ4C;MAAA,CA1F9C;AAAA,MAiHA,QAAS,KAAI,CAAC,WAAW,CAAC,eAAjB,CAAT,GAA6C,SAAC,IAAD;AAC3C;AAAA,YAAC,QAAD;AAAA,QACA,MAAM,IAAN,EAAY;AAAA,UACV,KAAY,KAAK,CAAC,QAAN,CAAe,OAAf,CADF;AAAA,UAEV,MAAY,MAFF;AAAA,UAGV,QAAY,MAHF;AAAA,UAIV,SAAY,KAAK,CAAC,QAAN,CAAe,MAAf,CAJF;AAAA,UAKV,SAAY,KAAK,CAAC,QAAN,CAAe,MAAf,CALF;AAAA,UAMV,WAAY,MANF;AAAA,UAOV,YAAY,MAPF;SAAZ,CADA;AAAA,QAWA,MAAiB,IAAI,CAAC,aAAL,CAAmB,IAAnB,EAAyB,IAAC,OAA1B,EAAkC,KAAlC,CAAjB,EAAC,mBAAD,EAAS,eAXT;AAaA,YAAG,IAAI,CAAC,GAAR;AACE;AACE,mBAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,CAAC,YAAY,CAAC,IAAlB,CAAuB,IAAvB,EAA6B,MAA7B,EAAqC,IAArC,CAAjB,GAAP,CADF;WAAA;AAGE,YADI,UACJ;AAAA,gBAAuE,IAAI,CAAC,KAA5E;AAAA,qBAAO,CAAC,IAAR,CAAa,mDAAb,EAAkE,CAAlE;aAAA;AACA,kBAAM,CAAN,CAJF;WADF;SAAA;AAOE,cAAI,CAAC,IAAL,CAAU,cAAV,EAA0B,MAA1B,EAAkC,IAAlC,EAAwC,IAAxC,EAPF;SAbA;AAqBA,eAAO,IAAP,CAtB2C;MAAA,CAjH7C;AAAA,MAyIA,QAAS,KAAI,CAAC,WAAW,CAAC,eAAjB,CAAT,GAA6C,SAAC,IAAD;AAC3C;AAAA,cAAM,IAAN,EAAY;AAAA,UACV,QAAQ,MADE;AAAA,UAEV,UAAU,MAFA;AAAA,UAGV,YAAY,MAHF;SAAZ;AAAA,QAMA,MAAO,MAAI,IAAI,CAAC,QAAQ,CAAC,GANzB;AAAA,QAOA,OAAU,IAAI,CAAC,WAAN,GAAkB,GAAlB,GAAqB,IAAI,CAAC,MAA1B,GAAmC,GAP5C;AASA,YAAgE,IAAI,CAAC,KAArE;AAAA,iBAAO,CAAC,IAAR,CAAa,2CAAyC,IAAtD;SATA;AAUA,uDAA0B,KAAI,CAAC,MAAL,UAA1B;AACE,cAAI,CAAC,gBAAiB,KAAI,CAAC,MAAL,CAAY,CAAC,MAAM,CAAC,GAA1C;AAAA,UACA,WAAW,CAAC,gBAAiB,KAAI,CAAC,MAAL,CAD7B;AAAA,UAEA,IAAI,CAAC,MAAL,CAAY;AAAA,YAAC,KAAK,IAAI,CAAC,MAAX;WAAZ,CAFA;AAAA,UAGA,IAAI,CAAC,MAAL,CAAY;AAAA,YAAC,KAAK,IAAI,CAAC,MAAX;AAAA,YAAmB,UAAnB;WAAZ,CAHA,CADF;SAVA;AAgBA,eAAO,IAAP,CAjB2C;MAAA,CAzI7C;AAAA,MA2JA,MAAM,CAAC,OAAP,CAAe,QAAf,CA3JA,CADF;KApKW;EAAA,CADb;;AAmUA;AAAA;;;;;;KAnUA;;AAAA,4BA0UA,gBAAkB,MAAM,CAAC,QAAV,GAAwB,SAAC,IAAD,EAAO,MAAP,EAAe,SAAf;AACrC;;MAAA,IAAI,CAAC,MAAW;KAAhB;;MACA,IAAI,CAAC,OAAW;KADhB;;MAEA,IAAI,CAAC,UAAW;KAFhB;;MAGA,IAAI,CAAC,UAAW;KAHhB;AAAA,IAKA,WAAW,IAAC,YAAD,CAAa,IAAI,CAAC,IAAlB,CALX;AAAA,IAMA,MAAgC,IAAC,OAAD,CAAQ,QAAR,CAAhC,EAAC,yBAAD,EAAY,uCANZ;AAAA,IAQA,SAAmB,IAAI,CAAC,IARxB;AAAA,IASA,MAAM,CAAC,IAAP,GAAsB,IAAC,YAAF,GAAc,GAAd,GAAiB,IAAI,CAAC,MAAtB,GAA+B,gBATpD;AAAA,IAUA,MAAM,CAAC,IAAP,GAAmB,QAVnB;AAAA,IAWA,MAAM,CAAC,IAAP,GAAmB,IAAI,CAAC,IAAI,CAAC,IAX7B;AAAA,IAYA,MAAM,CAAC,SAAP,GAAmB,SAZnB;AAAA,IAaA,SAAmB,IAAC,aAAD,CAAc,MAAd,CAbnB;AAAA,IAcA,MAAM,CAAC,GAAP,GAAmB,IAAI,CAAC,MAdxB;AAeA,QAA6B,MAA7B;AAAA,YAAM,CAAC,MAAP,GAAmB,MAAnB;KAfA;AAiBA,QAA+J,IAAC,MAAhK;AAAA,aAAO,CAAC,IAAR,CAAa,uCAAqC,SAArC,GAA+C,SAA/C,GAAwD,IAAI,CAAC,OAA7D,GAAqE,GAArE,GAAwE,IAAI,CAAC,UAA7E,GAAwF,gBAAxF,GAAuG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAV,IAAkB,IAAI,CAAC,IAAI,CAAC,QAA7B,CAApH;KAjBA;AAmBA,QAAG,IAAC,eAAD,IAAoB,CAAC,CAAC,UAAF,CAAa,IAAC,eAAd,CAAvB;AACE,wBAAkB,IAAC,eAAc,CAAC,IAAhB,CAAqB,CAAC,CAAC,MAAF,CAAS;AAAA,QAC9C,MAAM,IAAI,CAAC,IADmC;OAAT,EAEpC;AAAA,QACD,QAAQ,MAAM,CAAC,MADd;AAAA,QAED,MAAM;AAAG,cAAG,MAAM,CAAC,KAAV;mBAAqB,MAAM,CAAC,KAAK,CAAC,OAAb,CAAqB,MAAM,CAAC,MAA5B,EAArB;WAAA;mBAA8D,OAA9D;WAAH;QAAA,CAFL;AAAA,QAGD,SAAS,IAAI,CAAC,OAHb;AAAA,QAID,KAAK,IAAI,CAAC,GAJT;OAFoC,CAArB,EAOd,MAPc,CAAlB;AASA,UAAG,oBAAqB,IAAxB;AACE,cAAU,UAAM,CAAC,KAAP,CAAa,GAAb,EAAqB,CAAC,CAAC,QAAF,CAAW,eAAX,CAAH,GAAoC,eAApC,GAAyD,kCAA3E,CAAV,CADF;OAVF;KAnBA;AAgCA,WAAO;AAAA,MAAC,cAAD;AAAA,MAAS,UAAT;KAAP,CAjCqC;EAAA,CAAxB,GAkCV,MA5WL;;AA8WA;AAAA;;;;;;KA9WA;;AAAA,4BAqXA,eAAiB,MAAM,CAAC,QAAV,GAAwB,SAAC,MAAD,EAAS,IAAT,EAAe,EAAf;AACpC;AAAA,MAAE,CAAC,KAAH,CAAS,MAAM,CAAC,IAAhB,EAAsB,IAAC,YAAvB,EAAoC,IAApC;AAAA,IACA,OAAgB,IADhB;AAAA,IAEA,MAAM,CAAC,IAAP,GAAgB,IAAC,YAAD,CAAa,IAAI,CAAC,IAAlB,CAFhB;AAAA,IAGA,MAAM,CAAC,QAAD,CAAN,GAAgB,IAAC,UAHjB;AAAA,IAKA,IAAC,WAAU,CAAC,MAAZ,CAAmB,CAAC,CAAC,KAAF,CAAQ,MAAR,CAAnB,EAAoC,SAAC,KAAD,EAAQ,GAAR;AAClC,UAAG,KAAH;eACE,GAAO,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,KAAlB,CAAP,EADF;OAAA;AAGE,cAAM,CAAC,GAAP,GAAa,GAAb;AACA,YAAoF,IAAI,CAAC,KAAzF;AAAA,iBAAO,CAAC,IAAR,CAAa,wDAAsD,MAAM,CAAC,IAA1E;SADA;AAAA,QAEA,IAAI,CAAC,aAAL,IAAuB,IAAI,CAAC,aAAa,CAAC,IAAnB,CAAwB,IAAxB,EAA8B,MAA9B,CAFvB;AAAA,QAGA,IAAI,CAAC,IAAL,CAAU,aAAV,EAAyB,MAAzB,CAHA;eAIA,GAAG,IAAH,EAAS,MAAT,EAPF;OADkC;IAAA,CAApC,CALA,CADoC;EAAA,CAAxB,GAgBT,MArYL;;AAuYA;AAAA;;;;;;KAvYA;;AAAA,4BA8YA,eAAiB,MAAM,CAAC,QAAV,GAAwB,SAAC,MAAD,EAAS,IAAT,EAAe,EAAf;AACpC;AAAA,WAAO,IAAP;AACA,QAAG,IAAI,CAAC,GAAR;AACE,eAAS,IAAI,CAAC,OAAd,CADF;KAAA;AAGE,eAAa,WAAO,IAAI,CAAC,OAAZ,EAAqB,QAArB,CAAb,CAHF;KADA;AAMA;AACE,UAAG,IAAI,CAAC,GAAR;AACE,iBAAS;AACP,cAAI,CAAC,gBAAiB,OAAM,CAAC,GAAP,CAAW,CAAC,MAAM,CAAC,GAAzC;AAAA,UACA,WAAW,CAAC,gBAAiB,OAAM,CAAC,GAAP,CAD7B;AAAA,UAEA,IAAI,CAAC,IAAL,CAAU,cAAV,EAA0B,MAA1B,EAAkC,IAAlC,EAAwC,EAAxC,CAFA,CADO;QAAA,CAAT;AAMA,2EAA0C,KAAI,CAAC,UAAL,UAA1C;AACE,cAAC,iBAAiB,OAAM,CAAC,GAAP,CAAW,CAAC,MAAM,CAAC,KAArC,CAA2C,IAAC,iBAAiB,OAAM,CAAC,GAAP,CAAW,CAAC,OAAQ,KAAI,CAAC,UAAL,CAAjF,EAAmG;mBAAM,MAAM;AAC7G,yBAAW,CAAC,gBAAiB,OAAM,CAAC,GAAP,CAAW,CAAC,OAAQ,KAAI,CAAC,UAAL,CAAjD;AAAA,cACA,QADA,CAD6G;YAAA,CAAN,EAAN;UAAA,CAAnG,EADF;SAAA;AAME,mBANF;SAPF;OAAA,MAeK,IAAG,IAAI,CAAC,OAAL,GAAe,CAAlB;;uBAED;AAAA,oBAAQ,EAAE,CAAC,iBAAH,CAAqB,MAAM,CAAC,IAA5B,EAAkC;AAAA,cAAC,OAAO,GAAR;AAAA,cAAa,MAAM,IAAC,YAApB;aAAlC,CAAR;AAAA,YACA,SAAS,EADT;;SADF;AAAA,QAIA,SAAS,MAAM,CAAC,IAAP,CAAY,IAAC,iBAAiB,OAAM,CAAC,GAAP,CAAW,CAAC,OAA1C,CAJT;AAKA,YAAG,MAAM,CAAC,MAAV;AACE,WAAC,CAAC,IAAF,CAAO,IAAC,iBAAiB,OAAM,CAAC,GAAP,CAAW,CAAC,OAArC,EAA8C,SAAC,OAAD,EAAU,GAAV;mBAAkB,MAAM;AACpE,kBAAG,MAAM,IAAI,CAAC,OAAd;AACE,oBAAI,CAAC,gBAAiB,OAAM,CAAC,GAAP,CAAW,CAAC,MAAM,CAAC,KAAzC,CAA+C,OAA/C;AAAA,gBACA,WAAW,CAAC,gBAAiB,OAAM,CAAC,GAAP,CAAW,CAAC,OAAQ,KADjD,CADF;eADoE;YAAA,CAAN,EAAlB;UAAA,CAA9C,EADF;SALA;AAAA,QAYA,QAAQ,IAAI,CAAC,SAAL,GAAiB,CAAC,IAAI,CAAC,OAAL,GAAe,CAAhB,CAZzB;AAaA,YAAG,IAAC,iBAAiB,OAAM,CAAC,GAAP,CAAW,CAAC,MAAM,CAAC,YAArC,GAAoD,KAAvD;AACE,cAAC,iBAAiB,OAAM,CAAC,GAAP,CAAW,CAAC,OAAQ,KAAI,CAAC,OAAL,CAAtC,GAAsD,MAAtD,CADF;SAAA;AAGE,cAAC,iBAAiB,OAAM,CAAC,GAAP,CAAW,CAAC,MAAM,CAAC,KAArC,CAA2C,MAA3C,EAHF;SAdG;OAhBP;KAAA;AAmCE,MADI,UACJ;AAAA,SAAG,CAAH,EAnCF;KAPoC;EAAA,CAAxB,GA4CT,MA1bL;;AA4bA;AAAA;;;;;;;KA5bA;;AAAA,4BAocA,cAAa,SAAC,QAAD;AACX;AAAA,UAAM,QAAN,EAAgB,MAAhB;AACA,2BAAwB,QAAQ,CAAE,aAAlC;AAAA,aAAO,QAAQ,CAAC,IAAhB;KADA;AAEA,QAAG,MAAM,CAAC,QAAP,IAAoB,QAAQ,CAAC,IAA7B,IAAsC,CAAC,SAAY,EAAK,CAAC,QAAF,CAAW,IAAX,CAAjB,CAAzC;AACE;AACE,cAAU,WAAO,GAAP,CAAV;AAAA,QACA,KAAM,EAAE,CAAC,QAAH,CAAY,QAAQ,CAAC,IAArB,EAA2B,GAA3B,CADN;AAAA,QAEA,KAAM,EAAE,CAAC,QAAH,CAAY,EAAZ,EAAgB,GAAhB,EAAqB,CAArB,EAAwB,GAAxB,EAA6B,CAA7B,CAFN;AAAA,QAGA,EAAE,CAAC,KAAH,CAAS,EAAT,EAAa,IAAb,CAHA;AAIA,YAAyB,KAAK,GAA9B;AAAA,gBAAM,GAAG,CAAC,KAAJ,CAAU,CAAV,EAAa,EAAb,CAAN;SAJA;AAAA,QAKA,MAAc,SAAS,GAAT,CAAd,EAAC,eAAD,EAAO,aALP,CADF;OAAA;AAOU,QAAJ,cAAI,CAPV;OADF;KAFA;AAWA,QAAG,SAAY,EAAK,CAAC,QAAF,CAAW,IAAX,CAAnB;AACE,aAAO,0BAAP,CADF;KAXA;AAaA,WAAO,IAAP,CAdW;EAAA,CApcb;;AAodA;AAAA;;;;;;;KApdA;;AAAA,4BA4dA,cAAa,SAAC,QAAD;AACX;AAAA,eAAW,QAAQ,CAAC,IAAT,IAAiB,QAAQ,CAAC,QAArC;AACA,QAAG,CAAC,CAAC,QAAF,CAAW,QAAX,KAAyB,QAAQ,CAAC,MAAT,GAAkB,CAA9C;AACE,kBAAY,SAAC,GAAD;eAAS,GAAG,CAAC,OAAJ,CAAY,OAAZ,EAAqB,EAArB,CAAwB,CAAC,OAAzB,CAAiC,KAAjC,EAAwC,EAAxC,EAAT;MAAA,CAAZ;AACA,aAAO,UAAU,QAAQ,CAAC,IAAT,IAAiB,QAAQ,CAAC,QAApC,CAAP,CAFF;KAAA;AAIE,aAAO,EAAP,CAJF;KAFW;EAAA,CA5db;;AAoeA;AAAA;;;;;;KApeA;;AAAA,4BA2eA,UAAS,SAAC,IAAD;AACP;AAAA,aACE;AAAA,YAAM;AAAG,eAAO,IAAP,CAAH;MAAA,CAAN;AAAA,MACA,QAAQ,IADR;KADF;AAIA,QAAG,MAAM,CAAC,QAAV;AACE,UAAG,IAAH;AACE,iBAAS,IAAI,CAAC,OAAO,CAAC,OAAtB;AACA,YAAG,CAAC,CAAC,GAAF,CAAM,OAAN,EAAe,eAAf,KAAoC,MAAM,CAAC,GAAP,CAAW,oBAAX,CAAvC;AACE,iBAAO,MAAM,CAAC,KAAK,CAAC,OAAb,CAAqB;AAAA,uDAA2C,QAAQ,CAAC,eAAT,CAAyB,MAAM,CAAC,GAAP,CAAW,oBAAX,CAAzB,CAA3C;WAArB,CAAP;AACA,cAAG,IAAH;AACE,kBAAM,CAAC,IAAP,GAAc;AAAM,qBAAO,IAAP,CAAN;YAAA,CAAd;AAAA,YACA,MAAM,CAAC,MAAP,GAAgB,IAAI,CAAC,GADrB,CADF;WAFF;SAFF;OADF;KAAA;AASE,UAAG,CAAC,CAAC,GAAF,CAAM,OAAN,EAAe,eAAf,KAAoC,MAAM,CAAC,MAAP,EAAvC;AACE,cAAM,CAAC,IAAP,GAAc;AAAG,iBAAO,MAAM,CAAC,IAAP,EAAP,CAAH;QAAA,CAAd;AAAA,QACA,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,MAAP,EADhB,CADF;OATF;KAJA;AAgBA,WAAO,MAAP,CAjBO;EAAA,CA3eT;;AA8fA;AAAA;;;;;;;KA9fA;;AAAA,4BAsgBA,SAAQ,SAAC,QAAD;AACN;AAAA,QAAG,EAAC,CAAC,QAAS,CAAC,OAAT,CAAiB,GAAjB,CAAN;AACE,kBAAY,QAAQ,CAAC,KAAT,CAAe,GAAf,CAAmB,CAAC,GAApB,EAAZ;AACA,aAAO;AAAA,QAAE,KAAK,SAAP;AAAA,QAAkB,oBAAlB;AAAA,QAA6B,kBAAkB,MAAM,SAArD;OAAP,CAFF;KAAA;AAIE,aAAO;AAAA,QAAE,KAAK,EAAP;AAAA,QAAW,WAAW,EAAtB;AAAA,QAA0B,kBAAkB,EAA5C;OAAP,CAJF;KADM;EAAA,CAtgBR;;AA6gBA;AAAA;;;;;;;KA7gBA;;AAAA,4BAqhBA,eAAc,SAAC,IAAD;AACZ,WAAO;AAAA,MACL,MAAY,IAAI,CAAC,IADZ;AAAA,MAEL,WAAY,IAAI,CAAC,SAFZ;AAAA,MAGL,MAAY,IAAI,CAAC,IAHZ;AAAA,MAIL,MAAY,IAAI,CAAC,IAJZ;AAAA,MAKL,MAAY,IAAI,CAAC,IALZ;AAAA,MAML,MAAY,IAAI,CAAC,IANZ;AAAA,MAOL,UACE;AAAA,kBACE;AAAA,gBAAM,IAAI,CAAC,IAAX;AAAA,UACA,MAAM,IAAI,CAAC,IADX;AAAA,UAEA,MAAM,IAAI,CAAC,IAFX;AAAA,UAGA,WAAW,IAAI,CAAC,SAHhB;SADF;OARG;AAAA,MAaL,SAAS,EAAC,CAAC,IAAK,CAAC,IAAI,CAAC,WAAV,EAAuB,CAAC,OAAxB,CAAgC,OAAhC,CAbP;AAAA,MAcL,SAAS,EAAC,CAAC,IAAK,CAAC,IAAI,CAAC,WAAV,EAAuB,CAAC,OAAxB,CAAgC,OAAhC,CAdP;AAAA,MAeL,SAAS,EAAC,CAAC,IAAK,CAAC,IAAI,CAAC,WAAV,EAAuB,CAAC,OAAxB,CAAgC,OAAhC,CAfP;AAAA,MAgBL,QAAS,EAAC,CAAC,IAAK,CAAC,IAAI,CAAC,WAAV,EAAuB,CAAC,OAAxB,CAAgC,MAAhC,CAhBP;AAAA,MAiBL,QAAS,EAAC,CAAC,IAAK,CAAC,IAAI,CAAC,WAAV,EAAuB,CAAC,OAAxB,CAAgC,MAAhC,CAjBP;AAAA,MAkBL,SAAS,IAAI,CAAC,OAAL,IAAgB,IAAC,QAlBrB;AAAA,MAmBL,cAAiB,IAAI,CAAC,YAAL,IAAqB,IAAC,YAnBlC;AAAA,MAoBL,gBAAiB,IAAI,CAAC,cAAL,IAAuB,IAAC,cApBpC;AAAA,MAqBL,iBAAiB,IAAI,CAAC,eAAL,IAAwB,IAAC,eArBrC;KAAP,CADY;EAAA,CArhBd;;AA8iBA;AAAA;;;;;;;KA9iBA;;AAAA,4BAsjBA,OAAM,SAAC,MAAD;AACJ,QAAG,UAAW,CAAC,CAAC,QAAF,CAAW,MAAX,CAAd;AACE,UAAC,OAAD,GACE;AAAA,aAAK,MAAL;OADF,CADF;KAAA;AAIE,UAAC,OAAD,GAAU,UAAU,EAApB,CAJF;KAAA;WAKA,IAAC,QANG;EAAA,CAtjBN;;AA8jBA;AAAA;;;;;;;;;KA9jBA;;AAAA,4BAwkBA,QAAU,MAAM,CAAC,QAAV,GAAwB,SAAC,MAAD,EAAS,IAAT,EAAoB,QAApB;AAC7B;;MADsC,OAAO;KAC7C;AAAA,QAA8C,IAAC,MAA/C;AAAA,aAAO,CAAC,IAAR,CAAa,6BAAb;KAAA;AAAA,IACA,MAAM,IAAN,EAAY,KAAK,CAAC,QAAN,CAAe,MAAf,CAAZ,CADA;AAAA,IAEA,MAAM,QAAN,EAAgB,KAAK,CAAC,QAAN,CAAe,QAAf,CAAhB,CAFA;AAIA,QAAG,IAAC,YAAD,EAAH;AACE,qBAAgB,IAAC,eAAD,EAAhB;AAAA,MACA,WAAmB,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,QAArB,GAAmC,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,QAArD,GAAmE,YADnF;AAAA,MAGA,MAAgC,IAAC,OAAD,CAAQ,QAAR,CAAhC,EAAC,yBAAD,EAAY,uCAHZ;AAAA,MAKA,OAAY,IALZ;AAAA,MAMA,OAAe,IAAC,YAAF,GAAc,GAAd,GAAiB,YAAjB,GAAgC,gBAN9C;AAAA,MAQA,IAAI,CAAC,IAAL,GAAY,IAAC,YAAD,CAAa,IAAb,CARZ;AASA,UAAkB,KAAQ,CAAC,IAA3B;AAAA,YAAI,CAAC,IAAL,GAAY,EAAZ;OATA;AAUA,UAA6B,KAAQ,CAAC,IAAtC;AAAA,YAAI,CAAC,IAAL,GAAY,MAAM,CAAC,MAAnB;OAVA;AAAA,MAYA,SAAY,IAAC,aAAD,CACV;AAAA,cAAW,QAAX;AAAA,QACA,MAAW,IADX;AAAA,QAEA,MAAW,IAAI,CAAC,IAFhB;AAAA,QAGA,MAAW,IAAI,CAAC,IAHhB;AAAA,QAIA,MAAW,IAAI,CAAC,IAJhB;AAAA,QAKA,WAAW,SALX;OADU,CAZZ;AAoBA,UAA+E,IAAC,MAAhF;AAAA,eAAO,CAAC,IAAR,CAAa,gCAA8B,QAA9B,GAAuC,MAAvC,GAA6C,IAAC,eAA3D;OApBA;AAAA,MAsBA,EAAE,CAAC,UAAH,CAAc,IAAd,EAAoB,MAApB,EAA4B,QAA5B,EAAsC,SAAC,KAAD;eAAW,MAAM;AACrD,cAAG,KAAH;mBACE,YAAa,SAAS,KAAT,EADf;WAAA;AAGE,kBAAM,CAAC,GAAP,GAAa,IAAI,CAAC,UAAU,CAAC,MAAhB,CAAuB,CAAC,CAAC,KAAF,CAAQ,MAAR,CAAvB,CAAb;mBACA,YAAa,SAAS,IAAT,EAAe,MAAf,EAJf;WADqD;QAAA,CAAN,EAAX;MAAA,CAAtC,CAtBA;AA6BA,aAAO,IAAP,CA9BF;KAL6B;EAAA,CAAxB,GAqCL,MA7mBF;;AA+mBA;AAAA;;;;;;;;;KA/mBA;;AAAA,4BAynBA,OAAS,MAAM,CAAC,QAAV,GAAwB,SAAC,GAAD,EAAM,IAAN,EAAiB,QAAjB;AAC5B;;MADkC,OAAO;KACzC;AAAA,QAAsF,IAAC,MAAvF;AAAA,aAAO,CAAC,IAAR,CAAa,6BAA2B,GAA3B,GAA+B,IAA/B,GAAkC,CAAC,IAAI,CAAC,SAAL,CAAe,IAAf,CAAD,CAAlC,GAAwD,cAArE;KAAA;AAAA,IACA,MAAM,GAAN,EAAW,MAAX,CADA;AAAA,IAEA,MAAM,IAAN,EAAY,KAAK,CAAC,QAAN,CAAe,MAAf,CAAZ,CAFA;AAAA,IAGA,MAAM,QAAN,EAAgB,KAAK,CAAC,QAAN,CAAe,QAAf,CAAhB,CAHA;AAAA,IAKA,OAAgB,IALhB;AAAA,IAMA,eAAe,IAAC,eAAD,EANf;AAAA,IAOA,WAAkB,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,QAArB,GAAmC,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,QAArD,GAAmE,YAPlF;AAAA,IASA,MAAgC,IAAC,OAAD,CAAQ,QAAR,CAAhC,EAAC,yBAAD,EAAY,uCATZ;AAAA,IAUA,OAAe,IAAC,YAAF,GAAc,GAAd,GAAiB,YAAjB,GAAgC,gBAV9C;AAWA,QAAkB,KAAQ,CAAC,IAA3B;AAAA,UAAI,CAAC,IAAL,GAAY,EAAZ;KAXA;AAAA,IAaA,OAAO,CAAC,GAAR,CAAY,GAAZ,CAAgB,CAAC,EAAjB,CAAoB,OAApB,EAA6B,SAAC,KAAD;aAAU,MAAM;AAC3C,cAAU,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,qBAAkB,GAAlB,GAAsB,KAAtB,IAA6B,IAAI,CAAC,SAAL,CAAe,KAAf,CAA/C,CAAV,CAD2C;MAAA,CAAN,EAAV;IAAA,CAA7B,CAEC,CAAC,EAFF,CAEK,UAFL,EAEiB,SAAC,QAAD;aAAc,MAAM;AAEnC;AAAA,YAA4D,IAAI,CAAC,KAAjE;AAAA,iBAAO,CAAC,IAAR,CAAa,wCAAsC,GAAnD;SAAA;AAAA,QAEA,SAAS,IAAI,CAAC,YAAL,CACP;AAAA,gBAAW,QAAX;AAAA,UACA,MAAW,IADX;AAAA,UAEA,MAAW,IAAI,CAAC,IAFhB;AAAA,UAGA,MAAW,IAAI,CAAC,IAAL,IAAa,QAAQ,CAAC,OAAQ,gBAHzC;AAAA,UAIA,MAAW,IAAI,CAAC,IAAL,IAAa,QAAQ,CAAC,OAAQ,kBAJzC;AAAA,UAKA,WAAW,SALX;SADO,CAFT;eAUA,IAAI,CAAC,UAAU,CAAC,MAAhB,CAAuB,CAAC,CAAC,KAAF,CAAQ,MAAR,CAAvB,EAAwC,SAAC,KAAD,EAAQ,OAAR;AACtC,cAAG,KAAH;AACE,gBAAwG,IAAI,CAAC,KAA7G;AAAA,qBAAO,CAAC,IAAR,CAAa,8CAA4C,QAA5C,GAAqD,MAArD,GAA2D,IAAI,CAAC,cAA7E,EAA+F,KAA/F;aAAA;mBACA,YAAa,SAAS,KAAT,EAFf;WAAA;AAIE,gBAA0F,IAAI,CAAC,KAA/F;AAAA,qBAAO,CAAC,IAAR,CAAa,uCAAqC,QAArC,GAA8C,MAA9C,GAAoD,IAAI,CAAC,cAAtE;aAAA;mBACA,YAAa,SAAS,IAAT,EAAe,OAAf,EALf;WADsC;QAAA,CAAxC,EAZmC;MAAA,CAAN,EAAd;IAAA,CAFjB,CAqBC,CAAC,IArBF,CAqBO,EAAE,CAAC,iBAAH,CAAqB,IAArB,EAA2B;AAAA,MAAC,OAAO,GAAR;KAA3B,CArBP,CAbA;AAoCA,WAAO,IAAP,CArC4B;EAAA,CAAxB,GAuCJ,MAhqBF;;AAkqBA;AAAA;;;;;;;;KAlqBA;;AAAA,4BA2qBA,UAAY,MAAM,CAAC,QAAV,GAAwB,SAAC,IAAD,EAAO,IAAP,EAAkB,QAAlB;AAC/B;;MADsC,OAAO;KAC7C;AAAA,QAAuD,IAAC,MAAxD;AAAA,aAAO,CAAC,IAAR,CAAa,gCAA8B,IAA9B,GAAmC,IAAhD;KAAA;AAEA,QAAkJ,IAAC,UAAnJ;AAAA,YAAU,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,kHAAlB,CAAV;KAFA;AAAA,IAGA,MAAM,IAAN,EAAY,MAAZ,CAHA;AAAA,IAIA,MAAM,IAAN,EAAY,KAAK,CAAC,QAAN,CAAe,MAAf,CAAZ,CAJA;AAAA,IAKA,MAAM,QAAN,EAAgB,KAAK,CAAC,QAAN,CAAe,QAAf,CAAhB,CALA;AAAA,IAOA,OAAO,IAPP;AAAA,IAQA,EAAE,CAAC,IAAH,CAAQ,IAAR,EAAc,SAAC,KAAD,EAAQ,KAAR;aAAkB,MAAM;AACpC;AAAA,YAAG,KAAH;iBACE,YAAa,SAAS,KAAT,EADf;SAAA,MAEK,IAAG,KAAK,CAAC,MAAN,EAAH;AACH,sBAAY,IAAI,CAAC,KAAL,CAAW,GAAX,CAAZ;AAAA,UACA,WAAY,SAAU,UAAS,CAAC,MAAV,GAAmB,CAAnB,CADtB;AAAA,UAGA,MAAgC,IAAI,CAAC,MAAL,CAAY,QAAZ,CAAhC,EAAC,yBAAD,EAAY,uCAHZ;AAKA,cAA+B,KAAQ,CAAC,IAAxC;AAAA,gBAAI,CAAC,IAAL,GAAY,eAAZ;WALA;AAMA,cAAkB,KAAQ,CAAC,IAA3B;AAAA,gBAAI,CAAC,IAAL,GAAY,EAAZ;WANA;AAOA,cAA0B,KAAQ,CAAC,IAAnC;AAAA,gBAAI,CAAC,IAAL,GAAY,KAAK,CAAC,IAAlB;WAPA;AAAA,UASA,SAAS,IAAI,CAAC,YAAL,CACP;AAAA,kBAAc,QAAd;AAAA,YACA,MAAc,IADd;AAAA,YAEA,MAAc,IAAI,CAAC,IAFnB;AAAA,YAGA,MAAc,IAAI,CAAC,IAHnB;AAAA,YAIA,MAAc,IAAI,CAAC,IAJnB;AAAA,YAKA,WAAc,SALd;AAAA,YAMA,cAAc,IAAI,CAAC,OAAL,CAAa,MAAI,QAAjB,EAA6B,EAA7B,CANd;WADO,CATT;AAAA,UAkBA,MAAM,IAAI,CAAC,cAlBX;iBAmBA,IAAI,CAAC,UAAU,CAAC,MAAhB,CAAuB,CAAC,CAAC,KAAF,CAAQ,MAAR,CAAvB,EAAwC,SAAC,KAAD,EAAQ,MAAR;AACtC,gBAAG,KAAH;AACE,kBAA2F,IAAI,CAAC,KAAhG;AAAA,uBAAO,CAAC,IAAR,CAAa,iDAA+C,QAA/C,GAAwD,MAAxD,GAA8D,GAA3E,EAAkF,KAAlF;eAAA;qBACA,YAAa,SAAS,KAAT,EAFf;aAAA;AAIE,kBAA8E,IAAI,CAAC,KAAnF;AAAA,uBAAO,CAAC,IAAR,CAAa,2CAAyC,QAAzC,GAAkD,MAAlD,GAAwD,GAArE;eAAA;qBACA,YAAa,SAAS,IAAT,EAAe,MAAf,EALf;aADsC;UAAA,CAAxC,EApBG;SAAA;iBA4BH,YAAa,SAAa,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,gCAA8B,IAA9B,GAAmC,yBAArD,CAAb,EA5BV;SAH+B;MAAA,CAAN,EAAlB;IAAA,CAAd,CARA;AAyCA,WAAO,IAAP,CA1C+B;EAAA,CAAxB,GA4CP,MAvtBF;;AAytBA;AAAA;;;;;;;KAztBA;;AAAA,4BAiuBA,UAAS,SAAC,MAAD;AACP,QAAyE,IAAC,MAA1E;AAAA,aAAO,CAAC,IAAR,CAAa,gCAA6B,CAAC,IAAI,CAAC,SAAL,CAAe,MAAf,CAAD,CAA7B,GAAqD,IAAlE;KAAA;AAAA,IACA,MAAM,MAAN,EAAc,KAAK,CAAC,QAAN,CAAe,KAAK,CAAC,KAAN,CAAY,MAAZ,EAAoB,MAApB,CAAf,CAAd,CADA;AAAA,IAEA,IAAC,KAAD,CAAM,MAAN,CAFA;AAIA,QAAG,IAAC,YAAD,EAAH;AACE,UAAC,YAAD,GAAe,IAAC,WAAU,CAAC,OAAZ,CAAoB,IAAC,OAArB,CAAf;AAAA,MACA,IAAC,OAAD,GAAe,IADf,CADF;KAJA;AAOA,WAAO,IAAP,CARO;EAAA,CAjuBT;;AA2uBA;AAAA;;;;;;;KA3uBA;;AAAA,4BAmvBA,OAAM,SAAC,MAAD;AACJ,QAAsE,IAAC,MAAvE;AAAA,aAAO,CAAC,IAAR,CAAa,6BAA0B,CAAC,IAAI,CAAC,SAAL,CAAe,MAAf,CAAD,CAA1B,GAAkD,IAA/D;KAAA;AAAA,IACA,MAAM,MAAN,EAAc,KAAK,CAAC,QAAN,CAAe,KAAK,CAAC,KAAN,CAAY,MAAZ,EAAoB,MAApB,CAAf,CAAd,CADA;AAAA,IAEA,IAAC,KAAD,CAAM,MAAN,CAFA;AAIA,QAAG,IAAC,YAAD,EAAH;AACE,UAAC,YAAD,GAAe,IAAf;AAAA,MACA,IAAC,OAAD,GAAU,IAAC,WAAU,CAAC,IAAZ,CAAiB,IAAC,OAAlB,CADV,CADF;KAJA;AAOA,WAAO,IAAP,CARI;EAAA,CAnvBN;;AA6vBA;AAAA;;;;;;KA7vBA;;AAAA,4BAowBA,MAAK;AACH,QAA4C,IAAC,MAA7C;AAAA,aAAO,CAAC,IAAR,CAAa,2BAAb;KAAA;AACA,QAA0B,IAAC,OAA3B;AAAA,aAAO,IAAC,OAAM,CAAC,KAAR,EAAP;KADA;AAEA,WAAO,IAAC,YAAR,CAHG;EAAA,CApwBL;;AAywBA;AAAA;;;;;;KAzwBA;;AAAA,4BAgxBA,QAAO;AACL;AAAA,QAA8C,IAAC,MAA/C;AAAA,aAAO,CAAC,IAAR,CAAa,6BAAb;KAAA;AAAA,IACA,OAAO,IAAC,IAAD,EADP;AAEA,QAAG,EAAK,CAAC,OAAF,CAAU,IAAV,CAAP;AACE,aAAO,CAAC,IAAD,CAAP,CADF;KAAA;aAGE,KAHF;KAHK;EAAA,CAhxBP;;AAwxBA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAxxBA;;AAAA,4BAszBA,SAAW,MAAM,CAAC,QAAV,GAAwB,SAAC,MAAD,EAAS,SAAT;AAC9B;;MADuC,YAAY;KACnD;AAAA,QAAG,IAAC,YAAD,EAAH;AACE,cAAW,SAAH,GAAkB,OAAlB,GAA+B,QAAvC;AACA,aAAO,CAAK,QAAC,gBAAD,CAAiB,MAAjB,EAAyB,IAAzB,CAAL,CAAkC,OAAlC,EAAP,CAFF;KAAA;AAIE,YAAU,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,0CAAlB,CAAV,CAJF;KAD8B;EAAA,CAAxB,GAMH,MA5zBL;;AA8zBA;AAAA;;;;;;KA9zBA;;AAAA,4BAq0BA,kBAAoB,MAAM,CAAC,QAAV,GAA8B;AAC7C,yCAAW,YAAY,CAAC,SAAxB;;AACa,4BAAC,OAAD,EAAU,UAAV;AACX;AAAA,MADY,IAAC,UAAD,OACZ;AAAA,MADqB,IAAC,cAAD,UACrB;AAAA,kBAAY,CAAC,IAAb,CAAkB,IAAlB;AACA,UAA+C,IAAC,WAAU,CAAC,KAA3D;AAAA,eAAO,CAAC,IAAR,CAAa,8BAAb;OADA;AAAA,MAEA,OAA2B,IAF3B;;YAGO,CAAC,OAAmB;OAH3B;;aAIO,CAAC,UAAmB;OAJ3B;AAKA,UAAgC,IAAC,OAAM,CAAC,OAAR,GAAkB,CAAlD;AAAA,YAAC,OAAM,CAAC,OAAR,GAA2B,CAA3B;OALA;;aAMO,CAAC,YAAmB;OAN3B;;aAOO,CAAC,YAAmB,IAAC,WAAU,CAAC;OAPvC;;aAQO,CAAC,kBAAmB;OAR3B;AAAA,MASA,IAAC,OAAM,CAAC,SAAR,GAA2B,IAAC,OAAM,CAAC,SAAS,CAAC,WAAlB,EAT3B;AAAA,MAWA,MAAM,IAAC,OAAP,EAAe;AAAA,QACb,MAAiB,KAAK,CAAC,GADV;AAAA,QAEb,MAAiB,KAAK,CAAC,QAAN,CAAe,MAAf,CAFJ;AAAA,QAGb,SAAiB,KAAK,CAAC,QAAN,CAAe,QAAf,CAHJ;AAAA,QAIb,SAAiB,KAAK,CAAC,QAAN,CAAe,QAAf,CAJJ;AAAA,QAKb,SAAiB,KAAK,CAAC,KAAN,CAAY,SAAZ,EAAuB,MAAvB,CALJ;AAAA,QAMb,SAAiB,KAAK,CAAC,QAAN,CAAe,QAAf,CANJ;AAAA,QAOb,WAAiB,KAAK,CAAC,KAAN,CAAY,MAAZ,EAAoB,KAApB,CAPJ;AAAA,QAQb,WAAiB,KAAK,CAAC,KAAN,CAAY,SAAZ,EAAuB,MAAvB,CARJ;AAAA,QASb,YAAiB,KAAK,CAAC,QAAN,CAAe,QAAf,CATJ;AAAA,QAUb,YAAiB,KAAK,CAAC,QAAN,CAAe,QAAf,CAVJ;AAAA,QAWb,gBAAiB,KAAK,CAAC,QAAN,CAAe,QAAf,CAXJ;AAAA,QAYb,iBAAiB,OAZJ;OAAf,CAXA;AA0BA,UAAG,IAAC,OAAM,CAAC,IAAX;AACE,YAA+C,IAAC,WAAU,CAAC,KAA3D;AAAA,iBAAO,CAAC,IAAR,CAAa,YAAY,IAAC,OAAM,CAAC,IAAI,CAAC,IAAtC;SAAA;AACA,YAAiD,IAAC,WAAU,CAAC,KAA7D;AAAA,iBAAO,CAAC,IAAR,CAAa,cAAc,IAAC,OAAM,CAAC,IAAI,CAAC,IAAxC;SADA;AAGA,YAAG,UAAW,IAAC,OAAM,CAAC,eAAtB;AACE,cAAC,OAAD,GAAc,WAAO,kCAAP,CAAd,CADF;SAAA;AAGE,cAAC,OAAD,GAAU,IAAV,CAHF;SAHA;AAAA,QAQA,IAAC,YAAD,GAAgB,IARhB;AAAA,QASA,IAAC,aAAD,GAAgB,CAThB;AAAA,QAUA,IAAC,WAAD,GAAgB,CAVhB;AAAA,QAWA,IAAC,QAAD,GAAgB,KAXhB;AAAA,QAYA,IAAC,aAAD,GAAgB,CAZhB;AAAA,QAaA,IAAC,WAAD,GAAc,CAbd;AAAA,QAcA,IAAC,OAAD,GAAc,IAAC,WAAU,CAAC,cAAZ,EAdd;AAAA,QAeA,IAAC,MAAD,GAAc,EAfd;AAAA,QAgBA,IAAC,SAAD,GACE;AAAA,gBAAM,IAAC,OAAM,CAAC,IAAI,CAAC,IAAnB;AAAA,UACA,MAAM,IAAC,OAAM,CAAC,IAAI,CAAC,IADnB;AAAA,UAEA,MAAM,IAAC,OAAM,CAAC,IAAI,CAAC,IAFnB;AAAA,UAGA,MAAM,IAAC,OAAM,CAAC,IAHd;SAjBF;AAAA,QAsBA,IAAC,SAAD,GAAY,CAAC,CAAC,MAAF,CAAS,IAAC,SAAV,EAAoB,IAAC,WAAU,CAAC,MAAZ,CAAmB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAApC,CAApB,EAA+D;AAAA,UAAC,MAAM,IAAC,WAAU,CAAC,WAAZ,CAAwB,IAAC,SAAzB,CAAP;SAA/D,CAtBZ;AAAA,QAuBA,IAAC,SAAS,aAAV,GAAyB,IAAC,SAAQ,CAAC,IAvBnC;AAAA,QAyBA,IAAC,OAAD,GAAc,QAAC,WAAU,CAAC,WAAZ,CAAwB,CAAC,CAAC,MAAF,CAAS,IAAI,CAAC,MAAd,EAAsB;AAAA,UAAE,UAAD,IAAC,SAAF;AAAA,UAAa,QAAD,IAAC,OAAb;AAAA,UAAqB,iBAAiB,IAAC,WAAU,CAAC,WAAW,CAAC,eAA9D;SAAtB,CAAxB,CAzBd;AAAA,QA2BA,IAAC,aAAD,GAAgB,SAAC,CAAD;AACd;AAAA,oBAAa,CAAC,CAAC,UAAF,CAAa,IAAI,CAAC,UAAU,CAAC,qBAA7B,CAAH,GAA4D,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,IAAtC,CAA2C,IAAI,CAAC,MAAhD,EAAwD,IAAI,CAAC,QAA7D,CAA5D,GAAwI,IAAI,CAAC,UAAU,CAAC,qBAAlK;AACA,cAA2B,CAA3B;AAAA,aAAC,CAAC,WAAF,GAAgB,OAAhB;WADA;AAEA,iBAAO,OAAP,CAHc;QAAA,CA3BhB;AAAA,QA+BA,IAAC,OAAM,CAAC,MAAM,CAAC,YAAf,GAA8B,IAAC,aA/B/B;AAAA,QAgCA,MAAM,CAAC,gBAAP,CAAwB,cAAxB,EAAwC,IAAC,aAAzC,EAAuD,KAAvD,CAhCA;AAAA,QAkCA,IAAC,OAAM,CAAC,MAAM,CAAC,MAAf,GAAwB;iBAAG,IAAI,CAAC,SAAL,CAAe,QAAf,EAAH;QAAA,CAlCxB;AAAA,QAoCA,IAAC,YAAD,CAAa,KAAb,EAAoB,IAAC,IAArB,CApCA;AAAA,QAqCA,IAAC,YAAD,CAAa,OAAb,EAAsB,IAAC,MAAvB,CArCA;AAAA,QAsCA,IAAC,YAAD,CAAa,QAAb,EAAuB,IAAC,OAAxB,CAtCA;AAAA,QAuCA,IAAC,YAAD,CAAa,SAAb,EAAwB,IAAC,QAAzB,CAvCA;AAAA,QAwCA,IAAC,YAAD,CAAa,SAAb,EAAwB,IAAC,QAAzB,CAxCA;AAAA,QAyCA,IAAC,YAAD,CAAa,WAAb,EAA0B,IAAC,UAA3B,CAzCA;AAAA,QA0CA,IAAC,YAAD,CAAa,cAAb,EAA6B,IAAC,aAA9B,CA1CA;AAAA,QA2CA,IAAC,YAAD,CAAa,eAAb,EAA8B,IAAC,cAA/B,CA3CA;AAAA,QA6CA,IAAC,YAAD,CAAa,gBAAb,EAA+B,CAAC,CAAC,QAAF,CAAW;AACxC;AAAA,eAAK,CAAC,IAAI,CAAC,YAAL,GAAoB,IAAI,CAAC,UAA1B,IAAwC,IAAI,CAAC,MAAM,CAAC,OAAzD;AAAA,UACA,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAzB,CAA8B,KAAK,CAAC,IAAI,CAAC,UAAL,GAAkB,IAAI,CAAC,UAAxB,CAAnC,CADA;AAAA,UAEA,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAA1B,CAA+B,IAAI,CAAC,MAAM,CAAC,SAAZ,GAAwB,CAAC,KAAK,IAAN,CAAvD,CAFA;AAAA,UAGA,WAAW,IAAI,CAAC,KAAL,CAAW,CAAC,IAAI,CAAC,UAAL,GAAkB,IAAI,CAAC,UAAxB,IAAsC,GAAjD,CAHX;AAAA,UAIA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAArB,CAAyB,QAAzB,CAJA;AAAA,UAKA,IAAI,CAAC,MAAM,CAAC,UAAZ,IAA2B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAvB,CAA4B,IAAI,CAAC,MAAjC,EAAyC,QAAzC,EAAmD,IAAI,CAAC,QAAxD,CAL3B;AAAA,UAMA,IAAI,CAAC,MAAM,CAAC,SAAZ,CAAsB,UAAtB,EAAkC,CAAC,QAAD,EAAW,IAAI,CAAC,QAAhB,CAAlC,CANA,CADwC;QAAA,CAAX,EAS7B,GAT6B,CAA/B,CA7CA;AAAA,QAwDA,IAAC,YAAD,CAAa,QAAb,EAAuB;AACrB,cAA2B,IAAI,CAAC,MAAhC;AAAA,gBAAI,CAAC,MAAM,CAAC,SAAZ;WAAA;AACA,cAA2B,IAAI,CAAC,WAAhC;AAAA,gBAAI,CAAC,WAAW,CAAC,IAAjB;WADA;AAEA,cAAwE,IAAI,CAAC,YAA7E;AAAA,kBAAM,CAAC,mBAAP,CAA2B,cAA3B,EAA2C,IAAI,CAAC,YAAhD,EAA8D,KAA9D;WAFA;AAGA,cAA+B,IAAI,CAAC,MAApC;mBAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAArB,CAAyB,CAAzB;WAJqB;QAAA,CAAvB,CAxDA,CADF;OAAA;AA+DE,cAAU,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,mEAAlB,CAAV,CA/DF;OA3BW;IAAA,CADb;;AAAA,6BA6FA,MAAK,SAAC,KAAD,EAAQ,IAAR;AACH,UAAkD,IAAC,WAAU,CAAC,KAA9D;AAAA,eAAO,CAAC,OAAR,CAAgB,YAAY,IAAC,OAAM,CAAC,IAAI,CAAC,IAAzC;OAAA;AAAA,MACA,IAAC,UAAD,CAAW,QAAX,CADA;AAAA,MAEA,IAAC,OAAM,CAAC,SAAR,CAAkB,UAAlB,EAA8B,CAAC,KAAD,EAAQ,IAAR,CAA9B,CAFA;AAAA,MAGA,IAAC,OAAM,CAAC,UAAR,IAAuB,IAAC,OAAM,CAAC,UAAU,CAAC,IAAnB,CAAwB,IAAC,OAAzB,EAAiC,KAAjC,EAAwC,IAAxC,CAHvB;AAIA,UAAG,KAAH;AACE,YAAkE,IAAC,WAAU,CAAC,KAA9E;AAAA,iBAAO,CAAC,IAAR,CAAa,0CAAb,EAAyD,KAAzD;SAAA;AAAA,QACA,IAAC,OAAM,CAAC,KAAR,EADA;AAAA,QAEA,IAAC,OAAM,CAAC,KAAK,CAAC,GAAd,CAAkB,SAAlB,CAFA;AAAA,QAGA,IAAC,OAAM,CAAC,SAAR,CAAkB,OAAlB,EAA2B,CAAC,KAAD,EAAQ,IAAC,SAAT,CAA3B,CAHA;AAAA,QAIA,IAAC,OAAM,CAAC,OAAR,IAAoB,IAAC,OAAM,CAAC,OAAO,CAAC,IAAhB,CAAqB,IAAC,OAAtB,EAA8B,KAA9B,EAAqC,IAAC,SAAtC,CAJpB,CADF;OAAA;AAOE,YAAC,OAAM,CAAC,KAAK,CAAC,GAAd,CAAkB,WAAlB;AAAA,QACA,IAAC,WAAU,CAAC,SAAZ,CAAsB,aAAtB,EAAqC,CAAC,IAAD,CAArC,CADA,CAPF;OAJA;AAAA,MAaA,IAAC,OAAM,CAAC,SAAR,CAAkB,KAAlB,EAAyB,CAAC,KAAD,EAAS,QAAQ,IAAC,SAAlB,CAAzB,CAbA;AAcA,aAAO,IAAC,OAAR,CAfG;IAAA,CA7FL;;AAAA,6BA8GA,YAAW,SAAC,GAAD;AACT;AAAA,aAAO,IAAP;AAAA,MACA,OACE;AAAA,cAAY,IAAC,SAAb;AAAA,QACA,QAAY,IAAC,OADb;AAAA,QAEA,SAAY,GAAG,CAAC,IAAI,CAAC,GAFrB;AAAA,QAGA,SAAY,GAAG,CAAC,IAAI,CAAC,OAHrB;AAAA,QAIA,WAAY,IAAC,OAAM,CAAC,SAJpB;AAAA,QAKA,YAAY,IAAC,WALb;OAFF;AASA,UAAG,GAAG,CAAC,IAAI,CAAC,OAAT,KAAsB,CAAzB;AACE,YAAI,CAAC,IAAL,GAAY,CAAC,CAAC,IAAF,CAAO,IAAI,CAAC,IAAZ,EAAkB,MAAlB,EAA0B,KAA1B,EAAiC,kBAAjC,EAAqD,MAArD,EAA6D,WAA7D,CAAZ,CADF;OATA;AAAA,MAYA,IAAC,UAAD,CAAW,MAAX,EAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAV,CAAnB,CAZA;AAaA,UAAG,IAAC,MAAK,CAAC,MAAV;AACE;AAAA;4BAAA;AACE,cAAI,CAAC,OAAL,GAAe,SAAS,IAAI,CAAC,OAAd,CAAf,CADF;AAAA,SADF;OAbA;AAiBA,UAAG,IAAC,WAAD,KAAe,GAAG,CAAC,IAAI,CAAC,OAA3B;AACE,YAAoD,IAAC,WAAU,CAAC,KAAhE;AAAA,iBAAO,CAAC,OAAR,CAAgB,cAAc,IAAC,OAAM,CAAC,IAAI,CAAC,IAA3C;SAAA;AAAA,QACA,IAAC,UAAD,CAAW,SAAX,CADA,CADF;OAjBA;AAqBA,UAAG,IAAI,CAAC,OAAL,IAAiB,IAAI,CAAC,OAAO,CAAC,MAAjC;AACE,YAAG,IAAC,OAAM,CAAC,SAAR,KAAqB,KAAxB;AACE,gBAAM,CAAC,IAAP,CAAY,IAAC,WAAU,CAAC,WAAW,CAAC,eAApC,EAAqD,IAArD,EAA2D,SAAC,KAAD;AACzD,kBAAM,CAAC,UAAP;AAAA,YACA,IAAI,CAAC,YAAL,IAAqB,CAAC,EAAC,SAAF,IAAc,GAAG,CAAC,IAAI,CAAC,KAD5C;AAEA,gBAAG,KAAH;AACE,kBAAI,CAAC,SAAL,CAAe,KAAf,EAAsB,CAAC,KAAD,CAAtB,EADF;aAAA;AAGE,kBAAG,IAAI,CAAC,UAAL,IAAmB,IAAI,CAAC,UAA3B;AACE,oBAAI,CAAC,SAAL,CAAe,SAAf,EAA0B,CAAC,IAAD,CAA1B,EADF;eAAA,MAEK,IAAG,IAAI,CAAC,YAAL,GAAoB,IAAI,CAAC,UAA5B;AACH,oBAAI,CAAC,SAAL,CAAe,QAAf,EADG;eAFL;AAAA,cAIA,IAAI,CAAC,SAAL,CAAe,gBAAf,CAJA,CAHF;aAHyD;UAAA,CAA3D,EADF;SAAA;AAcE,cAAI,CAAC,IAAL,CAAU,MAAV,EAAqB,IAAC,WAAU,CAAC,aAAb,GAA2B,GAA3B,GAA8B,IAAC,WAAU,CAAC,cAA1C,GAAyD,WAA7E,EAAyF;AAAA,YAAC,MAAM,IAAP;WAAzF,EAAuG,SAAC,KAAD,EAAQ,MAAR;AACrG,kBAAM,CAAC,UAAP;AAAA,YACA,IAAI,CAAC,YAAL,IAAqB,CAAC,EAAC,SAAF,IAAc,GAAG,CAAC,IAAI,CAAC,KAD5C;AAEA,gBAAG,KAAH;AACE,kBAAI,CAAC,SAAL,CAAe,KAAf,EAAsB,CAAC,KAAD,CAAtB,EADF;aAAA;AAGE,kBAAG,IAAI,CAAC,UAAL,IAAmB,IAAI,CAAC,UAA3B;AACE,oBAAI,CAAC,SAAL,CAAe,SAAf,EAA0B,CAAC,IAAD,CAA1B,EADF;eAAA,MAEK,IAAG,IAAI,CAAC,YAAL,GAAoB,IAAI,CAAC,UAA5B;AACH,oBAAI,CAAC,SAAL,CAAe,QAAf,EADG;eAFL;AAAA,cAIA,IAAI,CAAC,SAAL,CAAe,gBAAf,CAJA,CAHF;aAHqG;UAAA,CAAvG,EAdF;SADF;OAtBS;IAAA,CA9GX;;AAAA,6BAiKA,UAAS,SAAC,IAAD;AACP;AAAA,eAAQ,QAAR;AACE,YAAC,QAAD,GAAW,IAAX;AAAA,QACA,OAAO,IADP;AAAA,QAEA,OACE;AAAA,eAAY,IAAZ;AAAA,UACA,MAAY,IAAC,SADb;AAAA,UAEA,QAAY,IAAC,OAFb;AAAA,UAGA,WAAY,IAAC,OAAM,CAAC,SAHpB;AAAA,UAIA,YAAY,IAAC,WAJb;SAHF;AASA,YAAG,IAAC,OAAM,CAAC,SAAR,KAAqB,KAAxB;AACE,gBAAM,CAAC,IAAP,CAAY,IAAC,WAAU,CAAC,WAAW,CAAC,eAApC,EAAqD,IAArD,EAA2D;AACzD,gBAAI,CAAC,SAAL,CAAe,KAAf,EAAsB,SAAtB,EADyD;UAAA,CAA3D,EADF;SAAA;AAKE,cAAI,CAAC,IAAL,CAAU,MAAV,EAAqB,IAAC,WAAU,CAAC,aAAb,GAA2B,GAA3B,GAA8B,IAAC,WAAU,CAAC,cAA1C,GAAyD,WAA7E,EAAyF;AAAA,YAAC,MAAM,IAAP;WAAzF,EAAuG,SAAC,KAAD,EAAQ,MAAR;AACrG,gBAAI,CAAC,SAAL,CAAe,KAAf,EAAsB,CAAC,KAAD,EAAQ,IAAI,CAAC,KAAL,mBAAW,MAAM,CAAE,iBAAR,IAAmB,EAA9B,CAAR,CAAtB,EADqG;UAAA,CAAvG,EALF;SAVF;OADO;IAAA,CAjKT;;AAAA,6BAsLA,eAAc,SAAC,OAAD,EAAU,KAAV;AACZ;AAAA,aAAa,IAAb;AAAA,MACA,QAAa,IAAC,OAAM,CAAC,IAAI,CAAC,KAAb,CAAoB,IAAC,OAAM,CAAC,SAAR,GAAoB,CAAC,UAAU,CAAX,CAAxC,EAAyD,IAAC,OAAM,CAAC,SAAR,GAAoB,OAA7E,CADb;AAAA,MAEA,aAAa,cAFb;AAAA,MAIA,UAAU,CAAC,SAAX,GAAuB,SAAC,GAAD;AACrB;AAAA,YAAI,CAAC,SAAL,CAAe,WAAf,EAA4B;UAAC;AAAA,YAC3B,MAAM;AAAA,cACJ,KAAK,uBAAC,UAAU,CAAE,gBAAZ,yCAAoC,CAAE,gBAAtC,uCAA0D,CAAE,gBAA7D,CAAoE,CAAC,KAArE,CAA2E,GAA3E,CAAgF,GADjF;AAAA,cAEJ,SAAS,OAFL;AAAA,cAGJ,OAAO,KAHH;aADqB;WAAD;SAA5B,EADqB;MAAA,CAJvB;AAAA,MAaA,UAAU,CAAC,OAAX,GAAqB,SAAC,CAAD;AACnB,YAAI,CAAC,SAAL,CAAe,KAAf,EAAsB,CAAC,CAAC,CAAC,CAAC,MAAF,IAAY,CAAC,CAAC,UAAf,CAA0B,CAAC,KAA5B,CAAtB,EADmB;MAAA,CAbrB;AAAA,MAiBA,UAAU,CAAC,aAAX,CAAyB,KAAzB,CAjBA,CADY;IAAA,CAtLd;;AAAA,6BA2MA,SAAQ;AACN;AAAA,cAAQ,EAAC,SAAT;AACA,UAAG,IAAC,OAAM,CAAC,OAAO,CAAC,GAAhB,EAAH;AACE,eAAO,IAAP;AAAA,QACA,IAAC,OAAM,CAAC,YAAR,GAAuB;AACrB,cAAI,CAAC,SAAL,CAAe,eAAf,EADqB;QAAA,CADvB;AAIA,eALF;OADA;AAQA,UAAG,IAAC,OAAM,CAAC,KAAK,CAAC,GAAd,OAAuB,SAA1B;AACE,eAAO,IAAP,CADF;OARA;AAWA,UAAG,IAAC,aAAD,IAAiB,IAAC,WAArB;AACE,cAAG,aAAH;AACA,YAAG,IAAC,OAAJ;AACE,cAAC,OAAM,CAAC,WAAR,CAAoB;AAAA,YAAE,YAAD,IAAC,WAAF;AAAA,YAAc,YAAd;AAAA,YAAsB,cAAD,IAAC,aAAtB;AAAA,YAAoC,WAAW,IAAC,OAAM,CAAC,SAAvD;AAAA,YAAkE,MAAM,IAAC,OAAM,CAAC,IAAhF;WAApB,EADF;SAAA;AAGE,cAAC,UAAD,CAAW,cAAX,EAA2B,CAAC,IAAC,aAAF,EAAgB,KAAhB,CAA3B,EAHF;SAFF;OAZM;IAAA,CA3MR;;AAAA,6BA+NA,gBAAe;AACb;AAAA,UAAO,CAAP;AAAA,MACA,OAAO,IADP;AAEA,aAAM,KAAK,IAAC,OAAM,CAAC,OAAnB;AACE,YAAI,CAAC,SAAL,CAAe,QAAf;AAAA,QACA,GADA,CADF;MAAA,CAHa;IAAA,CA/Nf;;AAAA,6BAuOA,UAAS;AACP;AAAA,aAAO,IAAP;AAAA,MAEA,IAAC,OAAM,CAAC,OAAR,IAAoB,IAAC,OAAM,CAAC,OAAO,CAAC,IAAhB,CAAqB,IAAC,OAAtB,EAA8B,IAA9B,EAAoC,IAAC,SAArC,CAFpB;AAAA,MAGA,IAAC,OAAM,CAAC,SAAR,CAAkB,OAAlB,EAA2B,CAAC,IAAD,EAAO,IAAC,SAAR,CAA3B,CAHA;AAKA,UAAG,IAAC,OAAM,CAAC,SAAR,KAAqB,SAAxB;AACE,YAAC,OAAM,CAAC,SAAR,GAAoB,IAAC,OAAM,CAAC,IAAI,CAAC,IAAb,GAAoB,IAAxC;AACA,YAAG,IAAC,OAAM,CAAC,SAAR,GAAoB,MAAvB;AACE,cAAC,OAAM,CAAC,SAAR,GAAoB,MAApB,CADF;SAAA,MAEK,IAAG,IAAC,OAAM,CAAC,SAAR,GAAoB,OAAvB;AACH,cAAC,OAAM,CAAC,SAAR,GAAoB,OAApB,CADG;SAJP;OALA;AAAA,MAYA,IAAC,OAAM,CAAC,SAAR,GAAoB,IAAI,CAAC,KAAL,CAAW,IAAC,OAAM,CAAC,SAAR,GAAoB,CAA/B,IAAoC,CAZxD;AAAA,MAaA,OAAO,IAAI,CAAC,IAAL,CAAU,IAAC,OAAM,CAAC,IAAI,CAAC,IAAb,GAAoB,IAAC,OAAM,CAAC,SAAtC,CAbP;AAcA,UAAG,IAAC,OAAM,CAAC,OAAR,KAAmB,SAAtB;AACE,YAAC,OAAM,CAAC,OAAR,GAAkB,CAAC,CAAC,KAAF,CAAQ,IAAR,CAAlB;AACA,YAAwB,IAAC,OAAM,CAAC,OAAR,GAAkB,EAA1C;AAAA,cAAC,OAAM,CAAC,OAAR,GAAkB,EAAlB;SAFF;OAdA;AAAA,MAkBA,IAAC,WAAD,GAA+B,QAAQ,CAAX,GAAkB,CAAlB,GAAyB,IAlBrD;AAmBA,UAA2C,IAAC,OAAM,CAAC,OAAR,GAAkB,IAAC,WAA9D;AAAA,YAAC,OAAM,CAAC,OAAR,GAA4B,IAAC,WAA7B;OAnBA;AAAA,MAoBA,IAAC,OAAM,CAAC,MAAM,CAAC,UAAf,GAA4B,IAAC,WApB7B;AAAA,MAsBA,IAAI,CAAC,SAAL,CAAe,eAAf,CAtBA,CADO;IAAA,CAvOT;;AAAA,6BAiQA,OAAM,SAAC,IAAD;AACJ,UAAC,MAAK,CAAC,IAAP,CAAY,IAAZ;AACA,aAAO,IAAP,CAFI;IAAA,CAjQN;;AAAA,6BAqQA,QAAO;AACL;AAAA,aAAO,IAAP;AACA,UAAG,IAAC,OAAM,CAAC,IAAI,CAAC,IAAb,IAAqB,CAAxB;AACE,YAAC,IAAD,CAAS,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,0BAAlB,CAAT;AACA,eAAO,IAAC,OAAR,CAFF;OADA;AAKA,UAAG,IAAC,OAAM,CAAC,cAAR,IAA2B,CAAC,CAAC,UAAF,CAAa,IAAC,OAAM,CAAC,cAArB,CAA9B;AACE,0BAAkB,IAAC,OAAM,CAAC,cAAc,CAAC,IAAvB,CAA4B,CAAC,CAAC,MAAF,CAAS,IAAC,OAAV,EAAkB,IAAC,WAAU,CAAC,OAAZ,EAAlB,CAA5B,EAAsE,IAAC,SAAvE,CAAlB;AACA,YAAG,oBAAqB,IAAxB;AACE,iBAAO,IAAC,IAAD,CAAS,UAAM,CAAC,KAAP,CAAa,GAAb,EAAqB,CAAC,CAAC,QAAF,CAAW,eAAX,CAAH,GAAoC,eAApC,GAAyD,wCAA3E,CAAT,CAAP,CADF;SAFF;OALA;AAUA,UAAG,IAAC,WAAU,CAAC,cAAZ,IAA+B,CAAC,CAAC,UAAF,CAAa,IAAC,WAAU,CAAC,cAAzB,CAAlC;AACE,0BAAkB,IAAC,WAAU,CAAC,cAAc,CAAC,IAA3B,CAAgC,CAAC,CAAC,MAAF,CAAS,IAAC,OAAV,EAAkB,IAAC,WAAU,CAAC,OAAZ,EAAlB,CAAhC,EAA0E,IAAC,SAA3E,CAAlB;AACA,YAAG,oBAAqB,IAAxB;AACE,iBAAO,IAAC,IAAD,CAAS,UAAM,CAAC,KAAP,CAAa,GAAb,EAAqB,CAAC,CAAC,QAAF,CAAW,eAAX,CAAH,GAAoC,eAApC,GAAyD,4CAA3E,CAAT,CAAP,CADF;SAFF;OAVA;AAAA,MAeA,OAAO,CAAC,OAAR,CAAgB,SAAC,WAAD;AACd,YAAI,CAAC,WAAL,GAAmB,WAAnB;AACA,iBAAW,CAAC,MAAM,CAAC,OAAO,CAAC,GAApB,EAAP;AACE,cAAG,MAAM,CAAC,MAAP,EAAe,CAAC,SAAnB;AACE,gBAAI,CAAC,MAAM,CAAC,UAAD,CAAX;AACA,gBAAkE,IAAI,CAAC,UAAU,CAAC,KAAlF;AAAA,qBAAO,CAAC,IAAR,CAAa,iDAAb;aAFF;WAAA;AAIE,gBAAI,CAAC,MAAM,CAAC,KAAZ;AACA,gBAA+D,IAAI,CAAC,UAAU,CAAC,KAA/E;AAAA,qBAAO,CAAC,IAAR,CAAa,8CAAb;aALF;WADF;SAFc;MAAA,CAAhB,CAfA;AA0BA,UAAG,IAAC,OAAJ;AACE,YAAC,OAAM,CAAC,SAAR,GAAoB,SAAC,GAAD;AAClB,cAAG,GAAG,CAAC,IAAI,CAAC,KAAZ;AACE,gBAA+B,IAAI,CAAC,UAAU,CAAC,KAA/C;AAAA,qBAAO,CAAC,IAAR,CAAa,GAAG,CAAC,IAAI,CAAC,KAAtB;aAAA;AAAA,YACA,IAAI,CAAC,SAAL,CAAe,cAAf,EAA+B,CAAC,GAAG,CAAC,IAAI,CAAC,OAAV,EAAmB,GAAG,CAAC,IAAI,CAAC,KAA5B,CAA/B,CADA,CADF;WAAA;AAIE,gBAAI,CAAC,SAAL,CAAe,WAAf,EAA4B,CAAC,GAAD,CAA5B,EAJF;WADkB;QAAA,CAApB;AAAA,QAOA,IAAC,OAAM,CAAC,OAAR,GAAoB,SAAC,CAAD;AAClB,cAAI,CAAC,SAAL,CAAe,KAAf,EAAsB,CAAC,CAAC,CAAC,OAAH,CAAtB,EADkB;QAAA,CAPpB,CADF;OA1BA;AAsCA,UAAG,IAAC,WAAU,CAAC,KAAf;AACE,YAAG,IAAC,OAAJ;AACE,iBAAO,CAAC,IAAR,CAAa,6CAAb,EADF;SAAA;AAGE,iBAAO,CAAC,IAAR,CAAa,6CAAb,EAHF;SADF;OAtCA;AAAA,MA4CA,IAAI,CAAC,SAAL,CAAe,SAAf,CA5CA;AA6CA,aAAO,IAAC,OAAR,CA9CK;IAAA,CArQP;;AAAA,6BAqTA,SAAQ;AACN;AAAA,aAAO,IAAP;AAAA,MACA,IAAC,OAAM,CAAC,KAAR,GAAgB;AACd,YAAI,CAAC,SAAL,CAAe,OAAf,EADc;MAAA,CADhB;AAAA,MAIA,IAAC,OAAM,CAAC,IAAR,GAAe,SAAC,IAAD;AACb,YAAI,CAAC,IAAL,CAAU,IAAV;AACA,eAAO,IAAP,CAFa;MAAA,CAJf;AAOA,aAAO,IAAC,OAAR,CARM;IAAA,CArTR;;0BAAA;;MADe,GA+TZ,MApoCL;;AAsoCA;AAAA;;;;;;KAtoCA;;AAAA,4BA6oCA,cAAgB,MAAM,CAAC,QAAV,GAA8B;AACzC,qCAAW,YAAY,CAAC,SAAxB;;AACa,wBAAC,OAAD;AACX,MADY,IAAC,UAAD,OACZ;AAAA,kBAAY,CAAC,IAAb,CAAkB,IAAlB;AAAA,MACA,IAAC,KAAD,GAAiB,CAAC,CAAC,MAAF,CAAS,IAAC,OAAM,CAAC,IAAjB,EAAuB,IAAC,OAAM,CAAC,QAA/B,CADjB;AAAA,MAEA,IAAC,MAAD,GAAqB,gBAAY,QAAZ,CAFrB;AAAA,MAGA,IAAC,QAAD,GAAqB,gBAAY,KAAZ,CAHrB;AAAA,MAIA,IAAC,SAAD,GAAqB,gBAAY,CAAZ,CAJrB;AAAA,MAKA,IAAC,aAAD,GAAqB,gBAAY,IAAZ,CALrB;AAAA,MAMA,IAAC,cAAD,GAAqB,gBAAY,CAAZ,CANrB,CADW;IAAA,CADb;;AAAA,yBASA,eAAe,aATf;;AAAA,yBAUA,QAAO;AACL,eAAQ,QAAO,CAAC,GAAT,EAAP;AACE,YAAC,QAAO,CAAC,GAAT,CAAa,IAAb;AAAA,QACA,IAAC,MAAK,CAAC,GAAP,CAAW,QAAX,CADA;AAAA,QAEA,IAAC,UAAD,CAAW,OAAX,EAAoB,CAAC,IAAC,KAAF,CAApB,CAFA,CADF;OADK;IAAA,CAVP;;AAAA,yBAgBA,cAAU;AACR,UAAG,IAAC,QAAO,CAAC,GAAT,EAAH;AACE,YAAC,QAAO,CAAC,GAAT,CAAa,KAAb;AAAA,QACA,IAAC,MAAK,CAAC,GAAP,CAAW,QAAX,CADA;AAAA,QAEA,IAAC,UAAD,CAAW,UAAX,EAAuB,CAAC,IAAC,KAAF,CAAvB,CAFA;AAAA,QAGA,IAAC,aAAY,CAAC,IAAd,EAHA;AAAA,QAIA,IAAC,aAAD,GAAgB,aAJhB,CADF;OADQ;IAAA,CAhBV;;AAAA,yBAwBA,SAAQ;AACN,UAAG,IAAC,QAAO,CAAC,GAAT,EAAH;AAAuB,YAAC,YAAD,GAAvB;OAAA;AAAwC,YAAC,MAAD,GAAxC;OADM;IAAA,CAxBR;;AAAA,yBA2BA,QAAO;AACL,YAAM,CAAC,mBAAP,CAA2B,cAA3B,EAA2C,IAAC,OAAM,CAAC,YAAnD,EAAiE,KAAjE;AAAA,MACA,IAAC,OAAM,CAAC,OAAR,IAAoB,IAAC,OAAM,CAAC,OAAO,CAAC,IAAhB,CAAqB,IAArB,EAAwB,IAAC,KAAzB,CADpB;AAAA,MAEA,IAAC,UAAD,CAAW,OAAX,EAAoB,CAAC,IAAC,KAAF,CAApB,CAFA;AAAA,MAGA,IAAC,MAAD,EAHA;AAAA,MAIA,IAAC,OAAM,CAAC,MAAR,EAJA;AAAA,MAKA,IAAC,MAAK,CAAC,GAAP,CAAW,SAAX,CALA;AAMA,UAAkD,IAAC,OAAM,CAAC,KAA1D;AAAA,eAAO,CAAC,OAAR,CAAgB,YAAY,IAAC,OAAM,CAAC,IAAI,CAAC,IAAzC;OANA;AAOA,UAAG,IAAC,OAAM,CAAC,UAAX;AACE,cAAM,CAAC,IAAP,CAAY,IAAC,OAAM,CAAC,eAApB,EAAqC;AAAA,UAAC,QAAQ,IAAC,OAAM,CAAC,MAAjB;AAAA,UAAyB,YAAY,IAAC,OAAM,CAAC,UAA7C;AAAA,UAAyD,UAAU,IAAC,OAAM,CAAC,QAA3E;SAArC,EADF;OARK;IAAA,CA3BP;;sBAAA;;MADW,GAuCR,MAprCL;;AAsrCA;AAAA;;;;;;;;KAtrCA;;AAAA,4BA+rCA,SAAQ,SAAC,MAAD,EAAS,EAAT;AACN;AAAA,QAAwE,IAAC,MAAzE;AAAA,aAAO,CAAC,IAAR,CAAa,+BAA4B,CAAC,IAAI,CAAC,SAAL,CAAe,MAAf,CAAD,CAA5B,GAAoD,IAAjE;KAAA;AAAA,IACA,MAAM,MAAN,EAAc,KAAK,CAAC,QAAN,CAAe,KAAK,CAAC,KAAN,CAAY,MAAZ,EAAoB,MAApB,CAAf,CAAd,CADA;AAAA,IAEA,MAAM,EAAN,EAAU,KAAK,CAAC,QAAN,CAAe,QAAf,CAAV,CAFA;AAIA,QAAG,IAAC,YAAD,EAAH;AACE,UAAC,KAAD,CAAM,MAAN;AACA,UAAG,MAAM,CAAC,QAAV;AACE,cAAM,CAAC,IAAP,CAAY,IAAC,YAAW,CAAC,gBAAzB,EAA2C,IAAI,IAAJ,CAA3C,EAAmD,CAAI,EAAH,GAAW,EAAX,GAAmB,IAApB,CAAnD,EADF;OADA;AAIA,UAAG,MAAM,CAAC,QAAV;AACE,gBAAQ,IAAC,WAAU,CAAC,IAAZ,CAAiB,IAAC,OAAlB,CAAR;AACA,YAAG,KAAK,CAAC,KAAN,KAAgB,CAAnB;AACE,iBAAO,IAAP;AAAA,UACA,KAAK,CAAC,OAAN,CAAc,SAAC,IAAD;mBAAU,IAAI,CAAC,MAAL,CAAY,IAAZ,EAAV;UAAA,CAAd,CADA,CADF;SADA;AAAA,QAIA,IAAC,WAAU,CAAC,MAAZ,CAAmB,IAAC,OAApB,EAA4B,EAA5B,CAJA,CADF;OALF;KAAA;AAYE,YAAO,GAAO,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,2CAAlB,CAAP,CAAP,CAZF;KAJA;AAiBA,WAAO,IAAP,CAlBM;EAAA,CA/rCR;;AAmtCA;AAAA;;;;;;;KAntCA;;AAAA,4BA2tCA,SAAQ;AACN,QAAC,WAAU,CAAC,MAAM,CAAC,KAAnB,CAAyB,IAAC,WAA1B,EAAsC,SAAtC;AACA,WAAO,IAAC,WAAR,CAFM;EAAA,CA3tCR;;AA+tCA;AAAA;;;;;;;;;KA/tCA;;AAAA,4BAyuCA,OAAS,MAAM,CAAC,QAAV,GAAwB,SAAC,KAAD;AAC5B,QAAC,WAAU,CAAC,IAAZ,CAAiB,KAAjB;AACA,WAAO,IAAC,WAAR,CAF4B;EAAA,CAAxB,GAGD,MA5uCL;;AAAA,4BA6uCA,QAAU,MAAM,CAAC,QAAV,GAAwB,SAAC,KAAD;AAC7B,QAAC,WAAU,CAAC,KAAZ,CAAkB,KAAlB;AACA,WAAO,IAAC,WAAR,CAF6B;EAAA,CAAxB,GAGF,MAhvCL;;AAkvCA;AAAA;;;;;;;;KAlvCA;;AAAA,4BA2vCA,aAAe,MAAM,CAAC,QAAV,GAAwB;AAClC,QAAC,WAAU,CAAC,IAAZ,CACE;AAAA,cAAQ;eAAG,KAAH;MAAA,CAAR;AAAA,MACA,QAAQ;eAAG,KAAH;MAAA,CADR;AAAA,MAEA,QAAQ;eAAG,KAAH;MAAA,CAFR;KADF;AAIA,WAAO,IAAC,WAAR,CALkC;EAAA,CAAxB,GAMP,MAjwCL;;AAAA,4BAkwCA,cAAgB,MAAM,CAAC,QAAV,GAAwB;AACnC,QAAC,WAAU,CAAC,KAAZ,CACE;AAAA,cAAQ;eAAG,KAAH;MAAA,CAAR;AAAA,MACA,QAAQ;eAAG,KAAH;MAAA,CADR;AAAA,MAEA,QAAQ;eAAG,KAAH;MAAA,CAFR;KADF;AAIA,WAAO,IAAC,WAAR,CALmC;EAAA,CAAxB,GAMR,MAxwCL;;AA2wCA;AAAA;;;;;;;;KA3wCA;;AAAA,4BAoxCA,SAAW,MAAM,CAAC,QAAV,GAAwB,SAAC,OAAD,EAAU,OAAV;AAC9B;AAAA,QAAyE,IAAC,MAA1E;AAAA,aAAO,CAAC,IAAR,CAAa,+BAA6B,OAAO,CAAC,GAArC,GAAyC,IAAzC,GAA6C,OAA7C,GAAqD,IAAlE;KAAA;AACA,QAAG,OAAH;AACE,iDAAqB,mBAAlB,sDAAwD,CAAE,cAA7D;AACE,UAAE,CAAC,MAAH,CAAU,OAAO,CAAC,QAAS,SAAQ,CAAC,IAApC,EAA0C,IAA1C,EADF;OADF;KAAA;AAIE,UAAG,OAAO,CAAC,QAAR,IAAqB,EAAK,CAAC,OAAF,CAAU,OAAO,CAAC,QAAlB,CAA5B;AACE,SAAC,CAAC,IAAF,CAAO,OAAO,CAAC,QAAf,EAAyB,SAAC,IAAD;iBAAU,MAAM;mBACvC,EAAE,CAAC,MAAH,CAAU,IAAI,CAAC,IAAf,EAAqB,IAArB,EADuC;UAAA,CAAN,EAAV;QAAA,CAAzB,EADF;OAAA;AAAA,MAGA,EAAE,CAAC,MAAH,CAAU,OAAO,CAAC,IAAlB,EAAwB,IAAxB,CAHA,CAJF;KADA;AASA,WAAO,IAAP,CAV8B;EAAA,CAAxB,GAWH,MA/xCL;;AAiyCA;AAAA;;;;;;KAjyCA;;AAAA,4BAwyCA,OAAS,MAAM,CAAC,QAAV,GAAwB,SAAC,IAAD;AAC5B;AAAA,QAAkG,IAAC,MAAnG;AAAA,aAAO,CAAC,IAAR,CAAa,iCAA+B,IAAI,CAAC,OAAO,CAAC,WAA5C,GAAwD,0BAArE;KAAA;AAAA,IACA,OAAO,mBADP;AAAA,IAEA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,GAAxB,EACE;AAAA,wBAAkB,IAAI,CAAC,MAAvB;AAAA,MACA,gBAAkB,YADlB;KADF,CAFA;AAAA,IAKA,IAAI,CAAC,QAAQ,CAAC,GAAd,CAAkB,IAAlB,CALA,CAD4B;EAAA,CAAxB,GAQD,MAhzCL;;AAkzCA;AAAA;;;;;;;KAlzCA;;AAAA,4BA0zCA,WAAa,MAAM,CAAC,QAAV,GAAwB,SAAC,IAAD,EAAO,OAAP;AAChC;;MADuC,UAAU;KACjD;AAAA,QAAwF,IAAC,MAAzF;AAAA,aAAO,CAAC,IAAR,CAAa,iCAA+B,IAAI,CAAC,OAAO,CAAC,WAA5C,GAAwD,IAAxD,GAA4D,OAA5D,GAAoE,IAAjF;KAAA;AAAA,IACA,eAAe,KADf;AAEA,QAAG,IAAC,YAAJ;AACE,UAAG,CAAC,CAAC,GAAF,CAAM,IAAC,YAAP,EAAoB,UAApB,KAAoC,CAAC,CAAC,GAAF,CAAM,IAAC,YAAW,CAAC,QAAnB,EAA6B,OAA7B,CAAvC;AACE,kBAAU,IAAC,YAAW,CAAC,QAAS,SAAhC,CADF;OAAA;AAGE,kBAAU,IAAC,YAAX,CAHF;OADF;KAAA;AAME,gBAAU,KAAV,CANF;KAFA;AAUA,QAAG,YAAe,EAAK,CAAC,QAAF,CAAW,OAAX,CAAtB;AACE,aAAO,IAAC,KAAD,CAAM,IAAN,CAAP,CADF;KAAA,MAEK,IAAG,IAAC,YAAJ;AACH,aAAO,IAAP;AAEA,UAAG,IAAC,iBAAJ;AACE,iBAAQ,iBAAgB,CAAC,IAAlB,CAAuB,CAAC,CAAC,MAAF,CAAS,IAAT,EAAe,IAAC,QAAD,CAAS,IAAT,CAAf,CAAvB,EAAuD,IAAC,YAAxD,CAAP;AACE,iBAAO,IAAC,KAAD,CAAM,IAAN,CAAP,CADF;SADF;OAFA;AAMA,UAAG,IAAC,kBAAD,IAAuB,CAAC,CAAC,UAAF,CAAa,IAAC,kBAAd,CAA1B;AACE,YAAG,IAAC,kBAAD,CAAmB,IAAnB,EAAyB,IAAC,YAA1B,EAAuC,OAAvC,MAAmD,IAAtD;AACE,iBADF;SADF;OANA;AAAA,MAUA,EAAE,CAAC,IAAH,CAAQ,OAAO,CAAC,IAAhB,EAAsB,SAAC,OAAD,EAAU,KAAV;eAAoB,MAAM;AAC9C;AAAA,cAAG,WAAW,MAAS,CAAC,MAAN,EAAlB;AACE,mBAAO,IAAI,CAAC,IAAL,CAAU,IAAV,CAAP,CADF;WAAA;AAGA,cAA6B,KAAK,CAAC,IAAN,KAAgB,OAAO,CAAC,IAAxB,IAAiC,KAAQ,CAAC,cAAvE;AAAA,mBAAO,CAAC,IAAR,GAAe,KAAK,CAAC,IAArB;WAHA;AAIA,cAAwB,KAAK,CAAC,IAAN,KAAgB,OAAO,CAAC,IAAxB,IAAiC,IAAI,CAAC,cAA9D;AAAA,2BAAe,KAAf;WAJA;AAAA,UAKA,WAAe,KALf;AAAA,UAMA,WAAe,KANf;AAQA,cAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAlB,IAA+B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAlB,KAA8B,MAAhE;AACE,8BAAkB,cAAlB,CADF;WAAA;AAGE,8BAAkB,UAAlB,CAHF;WARA;AAAA,UAaA,kBAAsB,gBAAa,CAAC,mBAAmB,IAAI,CAAC,WAAW,CAAC,IAApC,CAAD,CAAb,GAAwD,uBAAxD,GAA8E,CAAC,mBAAmB,IAAI,CAAC,WAAW,CAAC,IAApC,CAAD,CAA9E,GAAyH,MAb/I;AAAA,UAcA,sBAAsB,eAdtB;AAAA,UAgBA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,cAAxB,EAAwC,OAAO,CAAC,IAAhD,CAhBA;AAAA,UAiBA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,qBAAxB,EAA+C,kBAAkB,eAAlB,GAAoC,mBAAnF,CAjBA;AAAA,UAkBA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,eAAxB,EAAyC,OAAzC,CAlBA;AAmBA,sFAAkH,CAAE,WAA7B,oBAAvF;AAAA,gBAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,eAAxB,4EAAoE,CAAE,WAA7B,oBAAzC;WAnBA;AAAA,UAoBA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,YAAxB,EAAsC,YAAtC,CApBA;AAsBA,cAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAxB;AACE,uBAAW,IAAX;AAAA,YACA,QAAW,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,KAA3B,CAAiC,yBAAjC,CADX;AAAA,YAEA,QAAW,SAAS,KAAM,GAAf,CAFX;AAAA,YAGA,MAAW,SAAS,KAAM,GAAf,CAHX;AAIA,gBAAG,MAAM,GAAN,CAAH;AACE,oBAAS,OAAO,CAAC,IAAR,GAAe,CAAxB,CADF;aAJA;AAAA,YAMA,OAAW,MAAM,KANjB,CADF;WAAA;AASE,oBAAW,CAAX;AAAA,YACA,MAAW,OAAO,CAAC,IAAR,GAAe,CAD1B;AAAA,YAEA,OAAW,OAAO,CAAC,IAFnB,CATF;WAtBA;AAmCA,cAAG,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAlB,IAA2B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAlB,KAA0B,MAAtD,CAAf;AACE,uBAAW;AAAA,cAAC,YAAD;AAAA,cAAQ,QAAR;aAAX;AACA,gBAAG,MAAM,KAAN,KAAiB,MAAI,CAAM,GAAN,CAAxB;AACE,sBAAQ,CAAC,KAAT,GAAiB,MAAM,IAAvB;AAAA,cACA,QAAQ,CAAC,GAAT,GAAiB,GADjB,CADF;aADA;AAIA,gBAAG,MAAI,CAAM,KAAN,CAAJ,IAAqB,MAAM,GAAN,CAAxB;AACE,sBAAQ,CAAC,KAAT,GAAiB,KAAjB;AAAA,cACA,QAAQ,CAAC,GAAT,GAAiB,QAAQ,IADzB,CADF;aAJA;AAQA,gBAAoC,CAAC,QAAQ,IAAT,KAAkB,OAAO,CAAC,IAA9D;AAAA,sBAAQ,CAAC,GAAT,GAAe,OAAO,CAAC,IAAR,GAAe,CAA9B;aARA;AAAA,YASA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,QAAxB,EAAkC,SAAlC,CATA;AAAA,YAUA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,SAAxB,EAAuC,SAAK,EAAC,SAAD,GAAY,OAAK,KAAtB,CAA4B,CAAC,WAA7B,EAAvC,CAVA;AAAA,YAWA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,eAAxB,EAAyC,uCAAzC,CAXA;AAaA,gBAAG,IAAI,CAAC,MAAL,IAAgB,CAAC,QAAQ,CAAC,KAAT,IAAkB,CAAC,OAAO,CAAC,IAAR,GAAe,CAAhB,CAAlB,IAAwC,QAAQ,CAAC,GAAT,GAAe,CAAC,OAAO,CAAC,IAAR,GAAe,CAAhB,CAAxD,CAAnB;AACE,6BAAe,KAAf,CADF;aAAA;AAGE,6BAAe,KAAf,CAHF;aAdF;WAAA;AAmBE,gBAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,eAAxB,EAAyC,IAAI,CAAC,YAA9C;AAAA,YACA,eAAe,KADf,CAnBF;WAnCA;AAAA,UAyDA,qBAAqB,SAAC,KAAD;AACnB,gBAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,GAAxB;mBACA,IAAI,CAAC,QAAQ,CAAC,GAAd,CAAkB,KAAK,CAAC,QAAN,EAAlB,EAFmB;UAAA,CAzDrB;AA6DA,kBAAO,YAAP;AAAA,iBACO,KADP;AAEI,kBAA2G,IAAI,CAAC,KAAhH;AAAA,uBAAO,CAAC,IAAR,CAAa,iCAA+B,OAAO,CAAC,IAAvC,GAA4C,IAA5C,GAAgD,OAAhD,GAAwD,mCAArE;eAAA;AAAA,cACA,OAAO,0BADP;AAAA,cAEA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,GAAxB,EACE;AAAA,gCAAkB,YAAlB;AAAA,gBACA,iBAAkB,UADlB;AAAA,gBAEA,kBAAkB,IAAI,CAAC,MAFvB;eADF,CAFA;AAAA,cAMA,IAAI,CAAC,QAAQ,CAAC,GAAd,CAAkB,IAAlB,CANA;AAOA,oBATJ;AAAA,iBAUO,KAVP;AAWI,qBAAO,IAAI,CAAC,IAAL,CAAU,IAAV,CAAP;AACA,oBAZJ;AAAA,iBAaO,KAbP;AAcI,kBAAkH,IAAI,CAAC,KAAvH;AAAA,uBAAO,CAAC,IAAR,CAAa,iCAA+B,OAAO,CAAC,IAAvC,GAA4C,IAA5C,GAAgD,OAAhD,GAAwD,0CAArE;eAAA;AAAA,cACA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,GAAxB,EACE;AAAA,iCAAiB,aAAW,OAAO,CAAC,IAApC;eADF,CADA;AAAA,cAGA,IAAI,CAAC,QAAQ,CAAC,GAAd,EAHA;AAIA,oBAlBJ;AAAA,iBAmBO,KAnBP;AAoBI,kBAAkF,IAAI,CAAC,KAAvF;AAAA,uBAAO,CAAC,IAAR,CAAa,iCAA+B,OAAO,CAAC,IAAvC,GAA4C,IAA5C,GAAgD,OAAhD,GAAwD,UAArE;eAAA;AAAA,cACA,SAAS,EAAE,CAAC,gBAAH,CAAoB,OAAO,CAAC,IAA5B,CADT;AAAA,cAEA,MAAM,CAAC,EAAP,CAAU,MAAV,EAAkB;uBAAA;AAChB,sBAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,GAAxB;AACA,sBAAG,IAAI,CAAC,QAAR;2BACE,MAAM,CAAC,IAAP,CAAiB,aAAS;AAAA,sBAAC,KAAK,IAAI,CAAC,QAAX;AAAA,sBAAqB,WAAW,IAAI,CAAC,SAArC;qBAAT,CAAjB,CACC,CAAC,IADF,CACO,IAAI,CAAC,QADZ,EADF;mBAAA;2BAIE,MAAM,CAAC,IAAP,CAAY,IAAI,CAAC,QAAjB,EAJF;mBAFgB;gBAAA;cAAA,QAAlB,CAOC,CAAC,EAPF,CAOK,OAPL,EAOc,kBAPd,CAFA;AAUA,oBA9BJ;AAAA,iBA+BO,KA/BP;AAgCI,kBAAkF,IAAI,CAAC,KAAvF;AAAA,uBAAO,CAAC,IAAR,CAAa,iCAA+B,OAAO,CAAC,IAAvC,GAA4C,IAA5C,GAAgD,OAAhD,GAAwD,UAArE;eAAA;AAAA,cACA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,eAAxB,EAAyC,WAAS,QAAQ,CAAC,KAAlB,GAAwB,GAAxB,GAA2B,QAAQ,CAAC,GAApC,GAAwC,GAAxC,GAA2C,OAAO,CAAC,IAA5F,CADA;AAAA,cAEA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,SAAxB,EAAmC,SAAnC,CAFA;AAAA,cAGA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,mBAAxB,EAA6C,SAA7C,CAHA;AAIA,kBAAG,IAAI,CAAC,QAAR;AACE,yBAAS,EAAE,CAAC,gBAAH,CAAoB,OAAO,CAAC,IAA5B,EAAkC;AAAA,kBAAC,OAAO,QAAQ,CAAC,KAAjB;AAAA,kBAAwB,KAAK,QAAQ,CAAC,GAAtC;iBAAlC,CAAT;AAAA,gBACA,MAAM,CAAC,EAAP,CAAU,MAAV,EAAkB;yBAAG,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,GAAxB,EAAH;gBAAA,CAAlB,CACC,CAAC,EADF,CACK,OADL,EACc,kBADd,CAEC,CAAC,EAFF,CAEK,KAFL,EAEY;yBAAG,IAAI,CAAC,QAAQ,CAAC,GAAd,GAAH;gBAAA,CAFZ,CAGC,CAAC,IAHF,CAGY,aAAS;AAAA,kBAAC,KAAK,IAAI,CAAC,QAAX;AAAA,kBAAqB,WAAW,IAAI,CAAC,SAArC;iBAAT,CAHZ,CAIC,CAAC,IAJF,CAIO,IAAI,CAAC,QAJZ,CADA,CADF;eAAA;AAQE,yBAAS,EAAE,CAAC,gBAAH,CAAoB,OAAO,CAAC,IAA5B,EAAkC;AAAA,kBAAC,OAAO,QAAQ,CAAC,KAAjB;AAAA,kBAAwB,KAAK,QAAQ,CAAC,GAAtC;iBAAlC,CAAT;AAAA,gBACA,MAAM,CAAC,EAAP,CAAU,MAAV,EAAkB;yBAAG,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,GAAxB,EAAH;gBAAA,CAAlB,CACC,CAAC,EADF,CACK,OADL,EACc,kBADd,CAEC,CAAC,EAFF,CAEK,KAFL,EAEY;yBAAG,IAAI,CAAC,QAAQ,CAAC,GAAd,GAAH;gBAAA,CAFZ,CAGC,CAAC,IAHF,CAGO,IAAI,CAAC,QAHZ,CADA,CARF;eAJA;AAiBA,oBAjDJ;AAAA,WA9D8C;QAAA,CAAN,EAApB;MAAA,CAAtB,CAVA,CADG;KAAA;AA6HH,aAAO,IAAC,KAAD,CAAM,IAAN,CAAP,CA7HG;KAb2B;EAAA,CAAxB,GA2IL,MAr8CL;;AAu8CA;AAAA;;;;;;;;KAv8CA;;AAAA,4BAg9CA,OAAM,SAAC,OAAD,EAAU,OAAV;;MAAU,UAAU;KACxB;AAAA,QAA6C,IAAC,MAA9C;AAAA,aAAO,CAAC,IAAR,CAAa,4BAAb;KAAA;AACA,QAAG,CAAC,CAAC,QAAF,CAAW,OAAX,CAAH;AACE,gBAAU,OAAV;AAAA,MACA,UAAU,IADV,CADF;KADA;AAIA,QAAa,YAAgB,KAAK,YAAlC;AAAA,aAAO,EAAP;KAJA;AAKA,WAAO,aAAc,WAAW,IAAC,YAA1B,EAAwC,OAAxC,CAAP,CANI;EAAA,CAh9CN;;yBAAA;;IA9FF;;AAsjDA;AAAA;;;;;;;;;GAtjDA;;AAAA,YAgkDA,GAAe,SAAC,OAAD,EAAU,OAAV;AACb;;IADuB,UAAU;GACjC;AAAA,SAAO,yBAAyB,CAAC,QAAQ,CAAC,OAAnC,CAA2C,MAA3C,EAAmD,EAAnD,CAAP;AAEA,gEAAqB,CAAE,yBAApB,GAA6B,CAAhC;AACE,UAAM,MAAM,OAAO,CAAC,SAApB,CADF;GAAA;AAGE,UAAM,EAAN,CAHF;GAFA;AAOA,MAAG,OAAO,CAAC,QAAD,CAAP,KAAkB,IAArB;AACE,WAAO,OAAO,CAAI,YAAW,UAAd,GAAiC,OAAO,CAAC,cAAT,GAAwB,GAAxB,GAA2B,OAAO,CAAC,GAAnC,GAAyC,GAAzE,GAAuF,OAAO,CAAC,cAAT,GAAwB,GAAxB,GAA2B,OAA3B,GAAmC,GAAnC,GAAsC,OAAO,CAAC,GAA9C,GAAoD,GAA3I,CAAd,CADF;GAAA;AAGE,WAAO,OAAO,CAAG,OAAO,CAAC,cAAT,GAAwB,GAAxB,GAA2B,OAAO,CAAC,eAAnC,GAAmD,GAAnD,GAAsD,OAAO,CAAC,GAA9D,GAAkE,GAAlE,GAAqE,OAArE,GAA6E,GAA7E,GAAgF,OAAO,CAAC,GAAxF,GAA8F,GAAhG,CAAd,CAHF;GARa;AAAA,CAhkDf;;AA6kDA,IAAG,MAAM,CAAC,QAAV;AACE;AAAA;;;;;;;;;KAAA;AAAA,EAUA,QAAQ,CAAC,cAAT,CAAwB,SAAxB,EAAmC,SAAC,OAAD,EAAU,OAAV;AACjC,QAAoB,YAAe,EAAK,CAAC,QAAF,CAAW,OAAX,CAAvC;AAAA,aAAO,MAAP;KAAA;AAAA,IACA,UAAa,YAAe,EAAK,CAAC,QAAF,CAAW,OAAX,CAAtB,GAA+C,UAA/C,GAA+D,OADzE;AAEA,QAAG,OAAO,CAAC,GAAX;AACE,aAAO,aAAa,OAAb,EAAsB,OAAtB,CAAP,CADF;KAAA;AAGE,aAAO,EAAP,CAHF;KAHiC;EAAA,CAAnC,CAVA,CADF;CA7kDA;;AAAA,MAgmDM,CAAC,KAAP,GAAe,eAhmDf","file":"/packages/ostrio_files.js","sourcesContent":["NOOP = -> return\n\nif Meteor.isServer\n  ###\n  @summary Require NPM packages\n  ###\n  fs           = Npm.require 'fs-extra'\n  events       = Npm.require 'events'\n  request      = Npm.require 'request'\n  Throttle     = Npm.require 'throttle'\n  fileType     = Npm.require 'file-type'\n  nodePath     = Npm.require 'path'\n\n  ###\n  @var {object} bound - Meteor.bindEnvironment (Fiber wrapper)\n  ###\n  bound = Meteor.bindEnvironment (callback) -> return callback()\n\n###\n@private\n@name _insts\n@summary Object of FilesCollection instances\n###\n_insts = {}\n\n###\n@private\n@name rcp\n@param {Object} obj - Initial object\n@summary Create object with only needed props\n###\nrcp = (obj) ->\n  o =\n    currentFile:    obj.currentFile\n    search:         obj.search\n    collectionName: obj.collectionName\n    downloadRoute:  obj.downloadRoute\n    chunkSize:      obj.chunkSize\n    debug:          obj.debug\n    _prefix:        obj._prefix\n  return o\n\n###\n@private\n@name cp\n@param {Object} to   - Destination\n@param {Object} from - Source\n@summary Copy-Paste only needed props from one to another object\n###\ncp = (to, from) ->\n  to.currentFile    = from.currentFile\n  to.search         = from.search\n  to.collectionName = from.collectionName\n  to.downloadRoute  = from.downloadRoute\n  to.chunkSize      = from.chunkSize\n  to.debug          = from.debug\n  to._prefix        = from._prefix\n  return to\n\n###\n@locus Anywhere\n@class FilesCollection\n@param config           {Object}   - [Both]   Configuration object with next properties:\n@param config.debug     {Boolean}  - [Both]   Turn on/of debugging and extra logging\n@param config.schema    {Object}   - [Both]   Collection Schema\n@param config.public    {Boolean}  - [Both]   Store files in folder accessible for proxy servers, for limits, and more - read docs\n@param config.strict    {Boolean}  - [Server] Strict mode for partial content, if is `true` server will return `416` response code, when `range` is not specified, otherwise server return `206`\n@param config.protected {Function} - [Both]   If `true` - files will be served only to authorized users, if `function()` - you're able to check visitor's permissions in your own way function's context has:\n  - `request` - On server only\n  - `response` - On server only\n  - `user()`\n  - `userId`\n@param config.chunkSize      {Number}  - [Both] Upload chunk size, default: 524288 bytes (0,5 Mb)\n@param config.permissions    {Number}  - [Server] Permissions which will be set to uploaded files (octal), like: `511` or `0o755`. Default: 0644\n@param config.parentDirPermissions {Number}  - [Server] Permissions which will be set to parent directory of uploaded files (octal), like: `611` or `0o777`. Default: 0755\n@param config.storagePath    {String}  - [Server] Storage path on file system\n@param config.cacheControl   {String}  - [Server] Default `Cache-Control` header\n@param config.throttle       {Number}  - [Server] bps throttle threshold\n@param config.downloadRoute  {String}  - [Both]   Server Route used to retrieve files\n@param config.collectionName {String}  - [Both]   Collection name\n@param config.namingFunction {Function}- [Both]   Function which returns `String`\n@param config.integrityCheck {Boolean} - [Server] Check file's integrity before serving to users\n@param config.onAfterUpload  {Function}- [Server] Called right after file is ready on FS. Use to transfer file somewhere else, or do other thing with file directly\n@param config.onBeforeUpload {Function}- [Both]   Function which executes on server after receiving each chunk and on client right before beginning upload. Function context is `File` - so you are able to check for extension, mime-type, size and etc.\nreturn `true` to continue\nreturn `false` or `String` to abort upload\n@param config.onBeforeRemove {Function} - [Server] Executes before removing file on server, so you can check permissions. Return `true` to allow action and `false` to deny.\n@param config.allowClientCode  {Boolean}  - [Both]   Allow to run `remove` from client\n@param config.downloadCallback {Function} - [Server] Callback triggered each time file is requested, return truthy value to continue download, or falsy to abort\n@param config.interceptDownload {Function} - [Server] Intercept download request, so you can serve file from third-party resource, arguments {http: {request: {...}, response: {...}}, fileRef: {...}}\n@param config.onbeforeunloadMessage {String|Function} - [Client] Message shown to user when closing browser's window or tab while upload process is running\n@summary Create new instance of FilesCollection\n###\nclass FilesCollection\n  __proto__: do -> if Meteor.isServer then events.EventEmitter.prototype else EventEmitter.prototype\n  constructor: (config) ->\n    if Meteor.isServer\n      events.EventEmitter.call @\n    else\n      EventEmitter.call @\n    {@storagePath, @collectionName, @downloadRoute, @schema, @chunkSize, @namingFunction, @debug, @onbeforeunloadMessage, @permissions, @parentDirPermissions, @allowClientCode, @onBeforeUpload, @integrityCheck, @protected, @public, @strict, @downloadCallback, @cacheControl, @throttle, @onAfterUpload, @interceptDownload, @onBeforeRemove} = config if config\n\n    self               = @\n    cookie             = new Cookies()\n    @debug            ?= false\n    @public           ?= false\n    @protected        ?= false\n    @chunkSize        ?= 1024*512\n    @chunkSize         = Math.floor(@chunkSize / 8) * 8\n    if @public and not @downloadRoute\n      throw new Meteor.Error 500, \"[FilesCollection.#{@collectionName}]: \\\"downloadRoute\\\" must be explicitly provided on \\\"public\\\" collections! Note: \\\"downloadRoute\\\" must be equal on be inside of your web/proxy-server (relative) root.\"\n    @downloadRoute    ?= '/cdn/storage'\n    @downloadRoute     = @downloadRoute.replace /\\/$/, ''\n    @collectionName   ?= 'MeteorUploadFiles'\n    @namingFunction   ?= -> Random.id()\n    @onBeforeUpload   ?= false\n    @allowClientCode  ?= true\n    @interceptDownload?= false\n\n    if Meteor.isClient\n      @onbeforeunloadMessage ?= 'Upload in a progress... Do you want to abort?'\n      delete @strict\n      delete @throttle\n      delete @storagePath\n      delete @permissions\n      delete @parentDirPermissions\n      delete @cacheControl\n      delete @onAfterUpload\n      delete @integrityCheck\n      delete @downloadCallback\n      delete @interceptDownload\n      delete @onBeforeRemove\n\n      if @protected\n        if not cookie.has('meteor_login_token') and Meteor._localStorage.getItem('Meteor.loginToken')\n          cookie.set 'meteor_login_token', Meteor._localStorage.getItem('Meteor.loginToken'), null, '/'\n\n      check @onbeforeunloadMessage, Match.OneOf String, Function\n    else\n      @_writableStreams ?= {}\n      @strict           ?= true\n      @throttle         ?= false\n      @permissions      ?= parseInt('644', 8)\n      @parentDirPermissions ?= parseInt('755', 8)\n      @cacheControl     ?= 'public, max-age=31536000, s-maxage=31536000'\n      @onBeforeRemove   ?= false\n      @onAfterUpload    ?= false\n      @integrityCheck   ?= true\n      @downloadCallback ?= false\n      if @public and not @storagePath\n        throw new Meteor.Error 500, \"[FilesCollection.#{@collectionName}] \\\"storagePath\\\" must be set on \\\"public\\\" collections! Note: \\\"storagePath\\\" must be equal on be inside of your web/proxy-server (absolute) root.\"\n      @storagePath      ?= \"assets/app/uploads/#{@collectionName}\"\n      @storagePath       = @storagePath.replace /\\/$/, ''\n      @storagePath       = nodePath.normalize @storagePath\n\n      fs.mkdirs @storagePath, {mode: @parentDirPermissions}, (error) ->\n        if error\n          throw new Meteor.Error 401, \"[FilesCollection.#{self.collectionName}] Path #{self.storagePath} is not writable!\", error\n        return\n\n      check @strict, Boolean\n      check @throttle, Match.OneOf false, Number\n      check @permissions, Number\n      check @storagePath, String\n      check @cacheControl, String\n      check @onAfterUpload, Match.OneOf false, Function\n      check @integrityCheck, Boolean\n      check @onBeforeRemove, Match.OneOf false, Function\n      check @downloadCallback, Match.OneOf false, Function\n      check @interceptDownload, Match.OneOf false, Function\n\n    if not @schema\n      @schema =\n        size: type: Number\n        name: type: String\n        type: type: String\n        path: type: String\n        isVideo: type: Boolean\n        isAudio: type: Boolean\n        isImage: type: Boolean\n        isText: type: Boolean\n        isJSON: type: Boolean\n        _prefix: type: String\n        extension:\n          type: String\n          optional: true\n        _storagePath: type: String\n        _downloadRoute: type: String\n        _collectionName: type: String\n        public:\n          type: Boolean\n          optional: true\n        meta:\n          type: Object\n          blackbox: true\n          optional: true\n        userId:\n          type: String\n          optional: true\n        updatedAt: \n          type: Date\n          autoValue: -> new Date()\n        versions:\n          type: Object\n          blackbox: true\n\n    check @debug, Boolean\n    check @schema, Object\n    check @public, Boolean\n    check @protected, Match.OneOf Boolean, Function\n    check @chunkSize, Number\n    check @downloadRoute, String\n    check @collectionName, String\n    check @namingFunction, Function\n    check @onBeforeUpload, Match.OneOf false, Function\n    check @allowClientCode, Boolean\n\n    if @public and @protected\n      throw new Meteor.Error 500, \"[FilesCollection.#{@collectionName}]: Files can not be public and protected at the same time!\"\n    \n    @cursor      = null\n    @search      = {}\n    @collection  = new Mongo.Collection @collectionName\n    @currentFile = null\n    @_prefix     = SHA256 @collectionName + @downloadRoute\n    _insts[@_prefix] = @\n\n    @checkAccess = (http) ->\n      if self.protected\n        user = false\n        userFuncs = self.getUser http\n        {user, userId} = userFuncs\n        user = user()\n\n        if _.isFunction self.protected\n          result = if http then self.protected.call(_.extend(http, userFuncs), (self.currentFile or null)) else self.protected.call userFuncs, (self.currentFile or null)\n        else\n          result = !!user\n\n        if (http and result is true) or not http\n          return true\n        else\n          rc = if _.isNumber(result) then result else 401\n          console.warn '[FilesCollection.checkAccess] WARN: Access denied!' if self.debug\n          if http\n            text = 'Access denied!'\n            http.response.writeHead rc,\n              'Content-Length': text.length\n              'Content-Type':   'text/plain'\n            http.response.end text\n          return false\n      else\n        return true\n\n    @methodNames =\n      MeteorFileAbort:  \"MeteorFileAbort#{@_prefix}\"\n      MeteorFileWrite:  \"MeteorFileWrite#{@_prefix}\"\n      MeteorFileUnlink: \"MeteorFileUnlink#{@_prefix}\"\n\n    if Meteor.isServer\n      @on 'handleUpload', @handleUpload\n      @on 'finishUpload', @finishUpload\n\n      WebApp.connectHandlers.use (request, response, next) -> bound ->\n        if !!~request._parsedUrl.path.indexOf \"#{self.downloadRoute}/#{self.collectionName}/__upload\"\n          if request.method is 'POST'\n            body = ''\n            request.on 'data', (data) -> bound ->\n              body += data\n              return\n            request.on 'end', -> bound ->\n              try\n                opts           = JSON.parse body\n                user           = self.getUser http\n                {result, opts} = self.prepareUpload opts, user.userId, 'HTTP'\n\n                if opts.eof\n                  try\n                    Meteor.wrapAsync(self.handleUpload.bind(self, result, opts))()\n                    response.writeHead 200\n                    response.end JSON.stringify result\n                    return\n                  catch e\n                    console.warn \"[FilesCollection] [Write Method] [HTTP] Exception:\", e\n                    response.writeHead 500\n                    response.end JSON.stringify {error: 2}\n                else\n                  self.emit 'handleUpload', result, opts, NOOP\n\n                response.writeHead 200\n                response.end JSON.stringify {success: true}\n              catch e\n                console.warn \"[FilesCollection] [Write Method] [HTTP] Exception:\", e\n                response.writeHead 500\n                response.end JSON.stringify {error: e}\n              return\n          else\n            next()\n          return\n\n        unless self.public\n          if !!~request._parsedUrl.path.indexOf \"#{self.downloadRoute}/#{self.collectionName}\"\n            uri = request._parsedUrl.path.replace \"#{self.downloadRoute}/#{self.collectionName}\", ''\n            if uri.indexOf('/') is 0\n              uri = uri.substring 1\n\n            uris = uri.split '/'\n            if uris.length is 3\n              params = \n                query: if request._parsedUrl.query then JSON.parse('{\"' + decodeURI(request._parsedUrl.query).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g,'\":\"') + '\"}') else {}\n                _id: uris[0]\n                version: uris[1]\n                name: uris[2]\n              http = {request, response, params}\n              self.findOne(uris[0]).download.call(self, http, uris[1]) if self.checkAccess http\n            else\n              next()\n          else\n            next()\n        else\n          if !!~request._parsedUrl.path.indexOf \"#{self.downloadRoute}\"\n            uri = request._parsedUrl.path.replace \"#{self.downloadRoute}\", ''\n            if uri.indexOf('/') is 0\n              uri = uri.substring 1\n\n            uris  = uri.split '/'\n            _file = uris[uris.length - 1]\n            if _file\n              if !!~_file.indexOf '-'\n                version = _file.split('-')[0]\n                _file   = _file.split('-')[1].split('?')[0]\n              else\n                version = 'original'\n                _file   = _file.split('?')[0]\n\n              params = \n                query: if request._parsedUrl.query then JSON.parse('{\"' + decodeURI(request._parsedUrl.query).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g,'\":\"') + '\"}') else {}\n                file: _file\n                _id: _file.split('.')[0]\n                version: version\n                name: _file\n              http = {request, response, params}\n              self.findOne(params._id).download.call self, http, version\n            else\n              next()\n          else\n            next()\n        return\n\n      _methods = {}\n      _methods[self.methodNames.MeteorFileUnlink] = (inst) ->\n        check inst, Object\n        console.info '[FilesCollection] [Unlink Method]' if self.debug\n        \n        if self.allowClientCode\n          __instData = cp _insts[inst._prefix], inst\n          if self.onBeforeRemove and _.isFunction self.onBeforeRemove\n            user = false\n            userFuncs = {\n              userId: @userId\n              user: -> if Meteor.users then Meteor.users.findOne(@userId) else undefined\n            }\n\n            __inst = self.find.call __instData, inst.search\n            unless self.onBeforeRemove.call userFuncs, (__inst.cursor or null)\n              throw new Meteor.Error 403, '[FilesCollection] [remove] Not permitted!'\n\n          self.remove.call __instData, inst.search\n          return true\n        else\n          throw new Meteor.Error 401, '[FilesCollection] [remove] Run code from client is not allowed!'\n        return\n\n      _methods[self.methodNames.MeteorFileWrite] = (opts) ->\n        @unblock()\n        check opts, {\n          eof:        Match.Optional Boolean\n          file:       Object\n          fileId:     String\n          binData:    Match.Optional String\n          chunkId:    Match.Optional Number\n          chunkSize:  Number\n          fileLength: Number\n        }\n\n        {result, opts} = self.prepareUpload opts, @userId, 'DDP'\n\n        if opts.eof\n          try\n            return Meteor.wrapAsync(self.handleUpload.bind(self, result, opts))()\n          catch e\n            console.warn \"[FilesCollection] [Write Method] [DDP] Exception:\", e if self.debug\n            throw e\n        else\n          self.emit 'handleUpload', result, opts, NOOP\n        return true\n\n      _methods[self.methodNames.MeteorFileAbort] = (opts) ->\n        check opts, {\n          fileId: String\n          fileData: Object\n          fileLength: Number\n        }\n\n        ext  = \".#{opts.fileData.ext}\"\n        path = \"#{self.storagePath}/#{opts.fileId}#{ext}\"\n\n        console.info \"[FilesCollection] [Abort Method]: For #{path}\" if self.debug\n        if self._writableStreams?[opts.fileId]\n          self._writableStreams[opts.fileId].stream.end()\n          delete self._writableStreams[opts.fileId]\n          self.remove({_id: opts.fileId})\n          self.unlink({_id: opts.fileId, path})\n\n        return true\n      Meteor.methods _methods\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name prepareUpload\n  @summary Internal method. Used to optimize received data and check upload permission\n  @returns {Object}\n  ###\n  prepareUpload: if Meteor.isServer then (opts, userId, transport) ->\n    opts.eof     ?= false\n    opts.meta    ?= {}\n    opts.binData ?= 'EOF'\n    opts.chunkId ?= -1\n\n    fileName = @getFileName opts.file\n    {extension, extensionWithDot} = @getExt fileName\n\n    result           = opts.file\n    result.path      = \"#{@storagePath}/#{opts.fileId}#{extensionWithDot}\"\n    result.name      = fileName\n    result.meta      = opts.file.meta\n    result.extension = extension\n    result           = @dataToSchema result\n    result._id       = opts.fileId\n    result.userId    = userId if userId\n\n    console.info \"[FilesCollection] [Write Method] [#{transport}] Got ##{opts.chunkId}/#{opts.fileLength} chunks, dst: #{opts.file.name or opts.file.fileName}\" if @debug\n\n    if @onBeforeUpload and _.isFunction @onBeforeUpload\n      isUploadAllowed = @onBeforeUpload.call(_.extend({\n        file: opts.file\n      }, {\n        userId: result.userId\n        user: -> if Meteor.users then Meteor.users.findOne(result.userId) else undefined\n        chunkId: opts.chunkId\n        eof: opts.eof\n      }), result)\n\n      if isUploadAllowed isnt true\n        throw new Meteor.Error(403, if _.isString(isUploadAllowed) then isUploadAllowed else '@onBeforeUpload() returned false')\n\n    return {result, opts}\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name finishUpload\n  @summary Internal method. Finish upload, close Writable stream, add recored to MongoDB and flush used memory\n  @returns {undefined}\n  ###\n  finishUpload: if Meteor.isServer then (result, opts, cb) ->\n    fs.chmod result.path, @permissions, NOOP\n    self          = @\n    result.type   = @getMimeType opts.file\n    result.public = @public\n\n    @collection.insert _.clone(result), (error, _id) ->\n      if error\n        cb new Meteor.Error 500, error\n      else\n        result._id = _id\n        console.info \"[FilesCollection] [Write Method] [finishUpload] -> #{result.path}\" if self.debug\n        self.onAfterUpload and self.onAfterUpload.call self, result\n        self.emit 'afterUpload', result\n        cb null, result\n    return\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name handleUpload\n  @summary Internal method to handle upload process, pipe incoming data to Writable stream\n  @returns {undefined}\n  ###\n  handleUpload: if Meteor.isServer then (result, opts, cb) ->\n    self = @\n    if opts.eof\n      binary = opts.binData\n    else\n      binary = new Buffer opts.binData, 'base64'\n\n    try\n      if opts.eof\n        _hlEnd = ->\n          self._writableStreams[result._id].stream.end()\n          delete self._writableStreams[result._id]\n          self.emit 'finishUpload', result, opts, cb\n          return\n\n        if @_writableStreams[result._id].delayed?[opts.fileLength]\n          @_writableStreams[result._id].stream.write @_writableStreams[result._id].delayed[opts.fileLength], () -> bound ->\n            delete self._writableStreams[result._id].delayed[opts.fileLength]\n            _hlEnd()\n            return\n        else\n          _hlEnd()\n        \n      else if opts.chunkId > 0\n        @_writableStreams[result._id] ?=\n          stream: fs.createWriteStream result.path, {flags: 'a', mode: @permissions}\n          delayed: {}\n\n        _dKeys = Object.keys @_writableStreams[result._id].delayed\n        if _dKeys.length\n          _.each @_writableStreams[result._id].delayed, (delayed, num) -> bound ->\n            if num < opts.chunkId\n              self._writableStreams[result._id].stream.write delayed\n              delete self._writableStreams[result._id].delayed[num]\n            return\n\n        start = opts.chunkSize * (opts.chunkId - 1)\n        if @_writableStreams[result._id].stream.bytesWritten < start\n          @_writableStreams[result._id].delayed[opts.chunkId] = binary\n        else\n          @_writableStreams[result._id].stream.write binary\n    catch e\n      cb e\n    return\n  else undefined\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name getMimeType\n  @param {Object} fileData - File Object\n  @summary Returns file's mime-type\n  @returns {String}\n  ###\n  getMimeType: (fileData) ->\n    check fileData, Object\n    mime = fileData.type if fileData?.type\n    if Meteor.isServer and fileData.path and (not mime or not _.isString mime)\n      try\n        buf = new Buffer 262\n        fd  = fs.openSync fileData.path, 'r'\n        br  = fs.readSync fd, buf, 0, 262, 0\n        fs.close fd, NOOP\n        buf = buf.slice 0, br if br < 262\n        {mime, ext} = fileType buf\n      catch error\n    if not mime or not _.isString mime\n      mime = 'application/octet-stream' \n    return mime\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name getFileName\n  @param {Object} fileData - File Object\n  @summary Returns file's name\n  @returns {String}\n  ###\n  getFileName: (fileData) ->\n    fileName = fileData.name or fileData.fileName\n    if _.isString(fileName) and fileName.length > 0\n      cleanName = (str) -> str.replace(/\\.\\./g, '').replace /\\//g, ''\n      return cleanName(fileData.name or fileData.fileName)\n    else\n      return ''\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name getUser\n  @summary Returns object with `userId` and `user()` method which return user's object\n  @returns {Object}\n  ###\n  getUser: (http) ->\n    result = \n      user: -> return null\n      userId: null\n      \n    if Meteor.isServer\n      if http\n        cookie = http.request.Cookies\n        if _.has(Package, 'accounts-base') and cookie.has 'meteor_login_token'\n          user = Meteor.users.findOne 'services.resume.loginTokens.hashedToken': Accounts._hashLoginToken cookie.get 'meteor_login_token'\n          if user\n            result.user = () -> return user\n            result.userId = user._id\n    else\n      if _.has(Package, 'accounts-base') and Meteor.userId()\n        result.user = -> return Meteor.user()\n        result.userId = Meteor.userId()\n    return result\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name getExt\n  @param {String} FileName - File name\n  @summary Get extension from FileName\n  @returns {Object}\n  ###\n  getExt: (fileName) ->\n    if !!~fileName.indexOf('.')\n      extension = fileName.split('.').pop()\n      return { ext: extension, extension, extensionWithDot: '.' + extension }\n    else\n      return { ext: '', extension: '', extensionWithDot: '' }\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name dataToSchema\n  @param {Object} data - File data\n  @summary Build object in accordance with schema from File data\n  @returns {Object}\n  ###\n  dataToSchema: (data) ->\n    return {\n      name:       data.name\n      extension:  data.extension\n      path:       data.path\n      meta:       data.meta\n      type:       data.type\n      size:       data.size\n      versions:\n        original:\n          path: data.path\n          size: data.size\n          type: data.type\n          extension: data.extension\n      isVideo: !!~data.type.toLowerCase().indexOf('video')\n      isAudio: !!~data.type.toLowerCase().indexOf('audio')\n      isImage: !!~data.type.toLowerCase().indexOf('image')\n      isText:  !!~data.type.toLowerCase().indexOf('text')\n      isJSON:  !!~data.type.toLowerCase().indexOf('json')\n      _prefix: data._prefix or @_prefix\n      _storagePath:    data._storagePath or @storagePath\n      _downloadRoute:  data._downloadRoute or @downloadRoute\n      _collectionName: data._collectionName or @collectionName\n    }\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name srch\n  @param {String|Object} search - Search data\n  @summary Build search object\n  @returns {Object}\n  ###\n  srch: (search) ->\n    if search and _.isString search\n      @search =\n        _id: search\n    else\n      @search = search or {}\n    @search\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name write\n  @param {Buffer} buffer - Binary File's Buffer\n  @param {Object} opts - {fileName: '', type: '', size: 0, meta: {...}}\n  @param {Function} callback - function(error, fileObj){...}\n  @summary Write buffer to FS and add to FilesCollection Collection\n  @returns {FilesCollection} Instance\n  ###\n  write: if Meteor.isServer then (buffer, opts = {}, callback) ->\n    console.info \"[FilesCollection] [write()]\" if @debug\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n\n    if @checkAccess()\n      randFileName  = @namingFunction()\n      fileName      = if opts.name or opts.fileName then opts.name or opts.fileName else randFileName\n\n      {extension, extensionWithDot} = @getExt fileName\n\n      self      = @\n      path      = \"#{@storagePath}/#{randFileName}#{extensionWithDot}\"\n      \n      opts.type = @getMimeType opts\n      opts.meta = {} if not opts.meta\n      opts.size = buffer.length if not opts.size\n\n      result    = @dataToSchema\n        name:      fileName\n        path:      path\n        meta:      opts.meta\n        type:      opts.type\n        size:      opts.size\n        extension: extension\n\n      console.info \"[FilesCollection] [write]: #{fileName} -> #{@collectionName}\" if @debug\n\n      fs.outputFile path, buffer, 'binary', (error) -> bound ->\n        if error\n          callback and callback error\n        else\n          result._id = self.collection.insert _.clone result\n          callback and callback null, result\n      \n      return @\n  else\n    undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name load\n  @param {String} url - URL to file\n  @param {Object} opts - {fileName: '', meta: {...}}\n  @param {Function} callback - function(error, fileObj){...}\n  @summary Download file, write stream to FS and add to FilesCollection Collection\n  @returns {FilesCollection} Instance\n  ###\n  load: if Meteor.isServer then (url, opts = {}, callback) ->\n    console.info \"[FilesCollection] [load(#{url}, #{JSON.stringify(opts)}, callback)]\" if @debug\n    check url, String\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n\n    self          = @\n    randFileName = @namingFunction()\n    fileName     = if opts.name or opts.fileName then opts.name or opts.fileName else randFileName\n    \n    {extension, extensionWithDot} = @getExt fileName\n    path      = \"#{@storagePath}/#{randFileName}#{extensionWithDot}\"\n    opts.meta = {} if not opts.meta\n\n    request.get(url).on('error', (error)-> bound ->\n      throw new Meteor.Error 500, \"Error on [load(#{url})]:\" + JSON.stringify error\n    ).on('response', (response) -> bound ->\n\n      console.info \"[FilesCollection] [load] Received: #{url}\" if self.debug\n\n      result = self.dataToSchema\n        name:      fileName\n        path:      path\n        meta:      opts.meta\n        type:      opts.type or response.headers['content-type']\n        size:      opts.size or response.headers['content-length']\n        extension: extension\n\n      self.collection.insert _.clone(result), (error, fileRef) ->\n        if error\n          console.warn \"[FilesCollection] [load] [insert] Error: #{fileName} -> #{self.collectionName}\", error if self.debug\n          callback and callback error\n        else\n          console.info \"[FilesCollection] [load] [insert] #{fileName} -> #{self.collectionName}\" if self.debug\n          callback and callback null, fileRef\n    ).pipe fs.createWriteStream(path, {flags: 'w'})\n\n    return @\n  else\n    undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name addFile\n  @param {String} path - Path to file\n  @param {String} path - Path to file\n  @summary Add file from FS to FilesCollection\n  @returns {FilesCollection} Instance\n  ###\n  addFile: if Meteor.isServer then (path, opts = {}, callback) ->\n    console.info \"[FilesCollection] [addFile(#{path})]\" if @debug\n\n    throw new Meteor.Error 403, 'Can not run [addFile] on public collection! Just Move file to root of your server, then add record to Collection' if @public\n    check path, String\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n\n    self = @\n    fs.stat path, (error, stats) -> bound ->\n      if error\n        callback and callback error\n      else if stats.isFile()\n        pathParts = path.split '/'\n        fileName  = pathParts[pathParts.length - 1]\n\n        {extension, extensionWithDot} = self.getExt fileName\n\n        opts.type = 'application/*' if not opts.type\n        opts.meta = {} if not opts.meta\n        opts.size = stats.size if not opts.size\n\n        result = self.dataToSchema\n          name:         fileName\n          path:         path\n          meta:         opts.meta\n          type:         opts.type\n          size:         opts.size\n          extension:    extension\n          _storagePath: path.replace \"/#{fileName}\", ''\n\n        _cn = self.collectionName\n        self.collection.insert _.clone(result), (error, record) ->\n          if error\n            console.warn \"[FilesCollection] [addFile] [insert] Error: #{fileName} -> #{_cn}\", error if self.debug\n            callback and callback error\n          else\n            console.info \"[FilesCollection] [addFile] [insert]: #{fileName} -> #{_cn}\" if self.debug\n            callback and callback null, result\n      else\n        callback and callback new Meteor.Error 400, \"[FilesCollection] [addFile(#{path})]: File does not exist\"\n\n    return @\n  else\n    undefined\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name findOne\n  @param {String|Object} search - `_id` of the file or `Object` like, {prop:'val'}\n  @summary Load file\n  @returns {FilesCollection} Instance\n  ###\n  findOne: (search) ->\n    console.info \"[FilesCollection] [findOne(#{JSON.stringify(search)})]\" if @debug\n    check search, Match.Optional Match.OneOf Object, String\n    @srch search\n\n    if @checkAccess()\n      @currentFile = @collection.findOne @search\n      @cursor      = null\n    return @\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name find\n  @param {String|Object} search - `_id` of the file or `Object` like, {prop:'val'}\n  @summary Load file or bunch of files\n  @returns {FilesCollection} Instance\n  ###\n  find: (search) ->\n    console.info \"[FilesCollection] [find(#{JSON.stringify(search)})]\" if @debug\n    check search, Match.Optional Match.OneOf Object, String\n    @srch search\n\n    if @checkAccess()\n      @currentFile = null\n      @cursor = @collection.find @search\n    return @\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name get\n  @summary Return value of current cursor or file\n  @returns {Object|[Object]}\n  ###\n  get: () ->\n    console.info '[FilesCollection] [get()]' if @debug\n    return @cursor.fetch() if @cursor\n    return @currentFile\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name fetch\n  @summary Alias for `get()` method\n  @returns {[Object]}\n  ###\n  fetch: () ->\n    console.info '[FilesCollection] [fetch()]' if @debug\n    data = @get()\n    if not _.isArray data\n      return [data]\n    else\n      data\n\n  ###\n  @locus Client\n  @memberOf FilesCollection\n  @name insert\n  @see https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n  @param {Object} config - Configuration object with next properties:\n    {File|Object} file           - HTML5 `files` item, like in change event: `e.currentTarget.files[0]`\n    {Object}      meta           - Additional data as object, use later for search\n    {Boolean}     allowWebWorkers- Allow/Deny WebWorkers usage\n    {Number|dynamic} streams     - Quantity of parallel upload streams, default: 2\n    {Number|dynamic} chunkSize   - Chunk size for upload\n    {Function}    onUploaded     - Callback triggered when upload is finished, with two arguments `error` and `fileRef`\n    {Function}    onStart        - Callback triggered when upload is started after all successful validations, with two arguments `error` (always null) and `fileRef`\n    {Function}    onError        - Callback triggered on error in upload and/or FileReader, with two arguments `error` and `fileData`\n    {Function}    onProgress     - Callback triggered when chunk is sent, with only argument `progress`\n    {Function}    onBeforeUpload - Callback triggered right before upload is started:\n        return true to continue\n        return false to abort upload\n  @param {Boolean} autoStart     - Start upload immediately. If set to false, you need manually call .start() method on returned class. Useful to set EventListeners.\n  @summary Upload file to server over DDP\n  @returns {UploadInstance} Instance. UploadInstance has next properties:\n    {ReactiveVar} onPause  - Is upload process on the pause?\n    {ReactiveVar} state    - active|paused|aborted|completed\n    {ReactiveVar} progress - Current progress in percentage\n    {Function}    pause    - Pause upload process\n    {Function}    continue - Continue paused upload process\n    {Function}    toggle   - Toggle continue/pause if upload process\n    {Function}    abort    - Abort upload\n    {Function}    readAsDataURL - Current file as data URL, use to create image preview and etc. Be aware of big files, may lead to browser crash\n  ###\n  insert: if Meteor.isClient then (config, autoStart = true) ->\n    if @checkAccess()\n      mName = if autoStart then 'start' else 'manual'\n      return (new @_UploadInstance(config, @))[mName]()\n    else\n      throw new Meteor.Error 401, \"[FilesCollection] [insert] Access Denied\"\n  else undefined\n\n  ###\n  @locus Client\n  @memberOf FilesCollection\n  @name _UploadInstance\n  @class UploadInstance\n  @summary Internal Class, used in upload\n  ###\n  _UploadInstance: if Meteor.isClient then class UploadInstance\n    __proto__: EventEmitter.prototype\n    constructor: (@config, @collection) ->\n      EventEmitter.call @\n      console.info '[FilesCollection] [insert()]' if @collection.debug\n      self                     = @\n      @config.meta            ?= {}\n      @config.streams         ?= 2\n      @config.streams          = 2 if @config.streams < 1\n      @config.transport       ?= 'ddp'\n      @config.chunkSize       ?= @collection.chunkSize\n      @config.allowWebWorkers ?= true\n      @config.transport        = @config.transport.toLowerCase()\n\n      check @config, {\n        file:            Match.Any\n        meta:            Match.Optional Object\n        onError:         Match.Optional Function\n        onAbort:         Match.Optional Function\n        streams:         Match.OneOf 'dynamic', Number\n        onStart:         Match.Optional Function\n        transport:       Match.OneOf 'http', 'ddp'\n        chunkSize:       Match.OneOf 'dynamic', Number\n        onUploaded:      Match.Optional Function\n        onProgress:      Match.Optional Function\n        onBeforeUpload:  Match.Optional Function\n        allowWebWorkers: Boolean\n      }\n\n      if @config.file\n        console.time('insert ' + @config.file.name) if @collection.debug\n        console.time('loadFile ' + @config.file.name) if @collection.debug\n\n        if Worker and @config.allowWebWorkers\n          @worker = new Worker '/packages/ostrio_files/worker.js'\n        else\n          @worker = null\n\n        @trackerComp  = null\n        @currentChunk = 0\n        @sentChunks   = 0\n        @EOFsent      = false\n        @transferTime = 0\n        @fileLength = 1\n        @fileId     = @collection.namingFunction()\n        @pipes      = []\n        @fileData   =\n          size: @config.file.size\n          type: @config.file.type\n          name: @config.file.name\n          meta: @config.meta\n\n        @fileData = _.extend @fileData, @collection.getExt(self.config.file.name), {mime: @collection.getMimeType(@fileData)}\n        @fileData['mime-type'] = @fileData.mime\n\n        @result = new @collection._FileUpload _.extend self.config, {@fileData, @fileId, MeteorFileAbort: @collection.methodNames.MeteorFileAbort}\n\n        @beforeunload = (e) ->\n          message = if _.isFunction(self.collection.onbeforeunloadMessage) then self.collection.onbeforeunloadMessage.call(self.result, self.fileData) else self.collection.onbeforeunloadMessage\n          e.returnValue = message if e\n          return message\n        @result.config.beforeunload = @beforeunload\n        window.addEventListener 'beforeunload', @beforeunload, false\n          \n        @result.config._onEnd = -> self.emitEvent '_onEnd'\n\n        @addListener 'end', @end\n        @addListener 'start', @start\n        @addListener 'upload', @upload\n        @addListener 'sendEOF', @sendEOF\n        @addListener 'prepare', @prepare\n        @addListener 'sendChunk', @sendChunk\n        @addListener 'proceedChunk', @proceedChunk\n        @addListener 'createStreams', @createStreams\n\n        @addListener 'calculateStats', _.throttle ->\n          _t = (self.transferTime / self.sentChunks) / self.config.streams\n          self.result.estimateTime.set (_t * (self.fileLength - self.sentChunks))\n          self.result.estimateSpeed.set (self.config.chunkSize / (_t / 1000))\n          progress = Math.round((self.sentChunks / self.fileLength) * 100)\n          self.result.progress.set progress\n          self.config.onProgress and self.config.onProgress.call self.result, progress, self.fileData\n          self.result.emitEvent 'progress', [progress, self.fileData]\n          return\n        , 250\n\n        @addListener '_onEnd', -> \n          self.worker.terminate() if self.worker\n          self.trackerComp.stop() if self.trackerComp\n          window.removeEventListener('beforeunload', self.beforeunload, false) if self.beforeunload\n          self.result.progress.set(0) if self.result\n      else\n        throw new Meteor.Error 500, \"[FilesCollection] [insert] Have you forget to pass a File itself?\"\n\n    end: (error, data) ->\n      console.timeEnd('insert ' + @config.file.name) if @collection.debug\n      @emitEvent '_onEnd'\n      @result.emitEvent 'uploaded', [error, data]\n      @config.onUploaded and @config.onUploaded.call @result, error, data\n      if error\n        console.warn \"[FilesCollection] [insert] [end] Error: \", error if @collection.debug\n        @result.abort()\n        @result.state.set 'aborted'\n        @result.emitEvent 'error', [error, @fileData]\n        @config.onError and @config.onError.call @result, error, @fileData\n      else\n        @result.state.set 'completed'\n        @collection.emitEvent 'afterUpload', [data]\n      @result.emitEvent 'end', [error, (data or @fileData)]\n      return @result\n\n    sendChunk: (evt) ->\n      self = @\n      opts =\n        file:       @fileData\n        fileId:     @fileId\n        binData:    evt.data.bin\n        chunkId:    evt.data.chunkId\n        chunkSize:  @config.chunkSize\n        fileLength: @fileLength\n\n      if evt.data.chunkId isnt 1\n        opts.file = _.omit opts.file, 'meta', 'ext', 'extensionWithDot', 'mime', 'mime-type'\n\n      @emitEvent 'data', [evt.data.bin]\n      if @pipes.length\n        for pipeFunc in @pipes\n          opts.binData = pipeFunc opts.binData\n\n      if @fileLength is evt.data.chunkId\n        console.timeEnd('loadFile ' + @config.file.name) if @collection.debug\n        @emitEvent 'readEnd'\n\n      if opts.binData and opts.binData.length\n        if @config.transport is 'ddp'\n          Meteor.call @collection.methodNames.MeteorFileWrite, opts, (error) ->\n            ++self.sentChunks\n            self.transferTime += (+new Date) - evt.data.start\n            if error\n              self.emitEvent 'end', [error]\n            else\n              if self.sentChunks >= self.fileLength\n                self.emitEvent 'sendEOF', [opts]\n              else if self.currentChunk < self.fileLength\n                self.emitEvent 'upload'\n              self.emitEvent 'calculateStats'\n            return\n        else\n          HTTP.call 'POST', \"#{@collection.downloadRoute}/#{@collection.collectionName}/__upload\", {data: opts}, (error, result) ->\n            ++self.sentChunks\n            self.transferTime += (+new Date) - evt.data.start\n            if error\n              self.emitEvent 'end', [error]\n            else\n              if self.sentChunks >= self.fileLength\n                self.emitEvent 'sendEOF', [opts]\n              else if self.currentChunk < self.fileLength\n                self.emitEvent 'upload'\n              self.emitEvent 'calculateStats'\n            return\n      return\n\n    sendEOF: (opts) ->\n      unless @EOFsent\n        @EOFsent = true\n        self = @\n        opts =\n          eof:        true\n          file:       @fileData\n          fileId:     @fileId\n          chunkSize:  @config.chunkSize\n          fileLength: @fileLength\n\n        if @config.transport is 'ddp'\n          Meteor.call @collection.methodNames.MeteorFileWrite, opts, ->\n            self.emitEvent 'end', arguments\n            return\n        else\n          HTTP.call 'POST', \"#{@collection.downloadRoute}/#{@collection.collectionName}/__upload\", {data: opts}, (error, result) ->\n            self.emitEvent 'end', [error, JSON.parse(result?.content or {})]\n            return\n      return\n\n    proceedChunk: (chunkId, start) ->\n      self       = @\n      chunk      = @config.file.slice (@config.chunkSize * (chunkId - 1)), (@config.chunkSize * chunkId)\n      fileReader = new FileReader\n\n      fileReader.onloadend = (evt) ->\n        self.emitEvent 'sendChunk', [{\n          data: {\n            bin: (fileReader?.result or evt.srcElement?.result or evt.target?.result).split(',')[1]\n            chunkId: chunkId\n            start: start\n          }\n        }]\n        return\n      fileReader.onerror = (e) ->\n        self.emitEvent 'end', [(e.target or e.srcElement).error]\n        return\n\n      fileReader.readAsDataURL chunk\n      return\n\n    upload: -> \n      start = +new Date\n      if @result.onPause.get()\n        self = @\n        @result.continueFunc = ->\n          self.emitEvent 'createStreams'\n          return\n        return\n\n      if @result.state.get() is 'aborted'\n        return @\n\n      if @currentChunk <= @fileLength\n        ++@currentChunk\n        if @worker\n          @worker.postMessage({@sentChunks, start, @currentChunk, chunkSize: @config.chunkSize, file: @config.file})\n        else\n          @emitEvent 'proceedChunk', [@currentChunk, start]\n      return\n\n    createStreams: ->\n      i    = 1\n      self = @\n      while i <= @config.streams\n        self.emitEvent 'upload'\n        i++\n      return\n\n    prepare: ->\n      self = @\n\n      @config.onStart and @config.onStart.call @result, null, @fileData\n      @result.emitEvent 'start', [null, @fileData]\n\n      if @config.chunkSize is 'dynamic'\n        @config.chunkSize = @config.file.size / 1000\n        if @config.chunkSize < 327680\n          @config.chunkSize = 327680\n        else if @config.chunkSize > 1048576\n          @config.chunkSize = 1048576\n\n      @config.chunkSize = Math.floor(@config.chunkSize / 8) * 8\n      _len = Math.ceil(@config.file.size / @config.chunkSize)\n      if @config.streams is 'dynamic'\n        @config.streams = _.clone _len\n        @config.streams = 24 if @config.streams > 24\n\n      @fileLength               = if _len <= 0 then 1 else _len\n      @config.streams           = @fileLength if @config.streams > @fileLength\n      @result.config.fileLength = @fileLength\n\n      self.emitEvent 'createStreams'\n      return\n\n    pipe: (func) -> \n      @pipes.push func\n      return @\n\n    start: ->\n      self = @\n      if @config.file.size <= 0\n        @end new Meteor.Error 400, 'Can\\'t upload empty file'\n        return @result\n\n      if @config.onBeforeUpload and _.isFunction @config.onBeforeUpload\n        isUploadAllowed = @config.onBeforeUpload.call _.extend(@result, @collection.getUser()), @fileData\n        if isUploadAllowed isnt true\n          return @end new Meteor.Error(403, if _.isString(isUploadAllowed) then isUploadAllowed else 'config.onBeforeUpload() returned false')\n\n      if @collection.onBeforeUpload and _.isFunction @collection.onBeforeUpload\n        isUploadAllowed = @collection.onBeforeUpload.call _.extend(@result, @collection.getUser()), @fileData\n        if isUploadAllowed isnt true\n          return @end new Meteor.Error(403, if _.isString(isUploadAllowed) then isUploadAllowed else 'collection.onBeforeUpload() returned false')\n\n      Tracker.autorun (computation) ->\n        self.trackerComp = computation\n        unless self.result.onPause.get()\n          if Meteor.status().connected\n            self.result.continue()\n            console.info '[FilesCollection] [insert] [Tracker] [continue]' if self.collection.debug\n          else\n            self.result.pause()\n            console.info '[FilesCollection] [insert] [Tracker] [pause]' if self.collection.debug\n        return\n\n      if @worker\n        @worker.onmessage = (evt) ->\n          if evt.data.error\n            console.warn evt.data.error if self.collection.debug\n            self.emitEvent 'proceedChunk', [evt.data.chunkId, evt.data.start]\n          else\n            self.emitEvent 'sendChunk', [evt]\n          return\n        @worker.onerror   = (e) -> \n          self.emitEvent 'end', [e.message]\n          return\n\n      if @collection.debug\n        if @worker\n          console.info \"[FilesCollection] [insert] using WebWorkers\"\n        else\n          console.info \"[FilesCollection] [insert] using MainThread\"\n\n      self.emitEvent 'prepare'\n      return @result\n\n    manual: -> \n      self = @\n      @result.start = ->\n        self.emitEvent 'start'\n        return\n      @result.pipe = (func) ->\n        self.pipe func\n        return @\n      return @result\n  else undefined\n\n  ###\n  @locus Client\n  @memberOf FilesCollection\n  @name _FileUpload\n  @class FileUpload\n  @summary Internal Class, instance of this class is returned from `insert()` method\n  ###\n  _FileUpload: if Meteor.isClient then class FileUpload\n    __proto__: EventEmitter.prototype\n    constructor: (@config) ->\n      EventEmitter.call @\n      @file          = _.extend @config.file, @config.fileData\n      @state         = new ReactiveVar 'active'\n      @onPause       = new ReactiveVar false\n      @progress      = new ReactiveVar 0\n      @estimateTime  = new ReactiveVar 1000\n      @estimateSpeed = new ReactiveVar 0\n    continueFunc:  -> return\n    pause: ->\n      unless @onPause.get()\n        @onPause.set true\n        @state.set 'paused'\n        @emitEvent 'pause', [@file]\n      return\n    continue: ->\n      if @onPause.get()\n        @onPause.set false\n        @state.set 'active'\n        @emitEvent 'continue', [@file]\n        @continueFunc.call()\n        @continueFunc = -> return\n      return\n    toggle: ->\n      if @onPause.get() then @continue() else @pause()\n      return\n    abort: ->\n      window.removeEventListener 'beforeunload', @config.beforeunload, false\n      @config.onAbort and @config.onAbort.call @, @file\n      @emitEvent 'abort', [@file]\n      @pause()\n      @config._onEnd()\n      @state.set 'aborted'\n      console.timeEnd('insert ' + @config.file.name) if @config.debug\n      if @config.fileLength\n        Meteor.call @config.MeteorFileAbort, {fileId: @config.fileId, fileLength: @config.fileLength, fileData: @config.fileData}\n      return\n  else undefined\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name remove\n  @param {String|Object} search - `_id` of the file or `Object` like, {prop:'val'}\n  @param {Function} cb - Callback with one `error` argument\n  @summary Remove file(s) on cursor or find and remove file(s) if search is set\n  @returns {FilesCollection} Instance\n  ###\n  remove: (search, cb) ->\n    console.info \"[FilesCollection] [remove(#{JSON.stringify(search)})]\" if @debug\n    check search, Match.Optional Match.OneOf Object, String\n    check cb, Match.Optional Function\n\n    if @checkAccess()\n      @srch search\n      if Meteor.isClient\n        Meteor.call @methodNames.MeteorFileUnlink, rcp(@), (if cb then cb else NOOP)\n\n      if Meteor.isServer\n        files = @collection.find @search\n        if files.count() > 0\n          self = @\n          files.forEach (file) -> self.unlink file\n        @collection.remove @search, cb\n    else\n      cb and cb new Meteor.Error 401, '[FilesCollection] [remove] Access denied!'\n    return @\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name update\n  @see http://docs.meteor.com/#/full/update\n  @summary link Mongo.Collection update method\n  @returns {Mongo.Collection} Instance\n  ###\n  update: ->\n    @collection.update.apply @collection, arguments\n    return @collection\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name deny\n  @name allow\n  @param {Object} rules\n  @see http://docs.meteor.com/#/full/allow\n  @summary link Mongo.Collection allow/deny methods\n  @returns {Mongo.Collection} Instance\n  ###\n  deny: if Meteor.isServer then (rules) ->\n    @collection.deny rules\n    return @collection\n  else undefined\n  allow: if Meteor.isServer then (rules) ->\n    @collection.allow rules\n    return @collection\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name denyClient\n  @name allowClient\n  @see http://docs.meteor.com/#/full/allow\n  @summary Shorthands for Mongo.Collection allow/deny methods\n  @returns {Mongo.Collection} Instance\n  ###\n  denyClient: if Meteor.isServer then ->\n    @collection.deny\n      insert: -> true\n      update: -> true\n      remove: -> true\n    return @collection\n  else undefined\n  allowClient: if Meteor.isServer then ->\n    @collection.allow\n      insert: -> true\n      update: -> true\n      remove: -> true\n    return @collection\n  else undefined\n\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name unlink\n  @param {Object} fileRef - fileObj\n  @param {String} version - [Optional] file's version\n  @summary Unlink files and it's versions from FS\n  @returns {FilesCollection} Instance\n  ###\n  unlink: if Meteor.isServer then (fileRef, version) ->\n    console.info \"[FilesCollection] [unlink(#{fileRef._id}, #{version})]\" if @debug\n    if version\n      if fileRef.versions?[version] and fileRef.versions[version]?.path\n        fs.unlink fileRef.versions[version].path, NOOP\n    else\n      if fileRef.versions and not _.isEmpty fileRef.versions\n        _.each fileRef.versions, (vRef) -> bound ->\n          fs.unlink vRef.path, NOOP\n      fs.unlink fileRef.path, NOOP\n    return @\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name _404\n  @summary Internal method, used to return 404 error\n  @returns {undefined}\n  ###\n  _404: if Meteor.isServer then (http) ->\n    console.warn \"[FilesCollection] [download(#{http.request.originalUrl})] [_404] File not found\" if @debug\n    text = 'File Not Found :('\n    http.response.writeHead 404,\n      'Content-Length': text.length\n      'Content-Type':   'text/plain'\n    http.response.end text\n    return\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name download\n  @param {Object|Files} self - Instance of FilesCollection\n  @summary Initiates the HTTP response\n  @returns {undefined}\n  ###\n  download: if Meteor.isServer then (http, version = 'original') ->\n    console.info \"[FilesCollection] [download(#{http.request.originalUrl}, #{version})]\" if @debug\n    responseType = '200'\n    if @currentFile\n      if _.has(@currentFile, 'versions') and _.has @currentFile.versions, version\n        fileRef = @currentFile.versions[version]\n      else\n        fileRef = @currentFile\n    else\n      fileRef = false\n\n    if not fileRef or not _.isObject(fileRef)\n      return @_404 http\n    else if @currentFile\n      self = @\n\n      if @downloadCallback\n        unless @downloadCallback.call _.extend(http, @getUser(http)), @currentFile\n          return @_404 http\n\n      if @interceptDownload and _.isFunction @interceptDownload\n        if @interceptDownload(http, @currentFile, version) is true\n          return\n\n      fs.stat fileRef.path, (statErr, stats) -> bound ->\n        if statErr or not stats.isFile()\n          return self._404 http\n\n        fileRef.size = stats.size if stats.size isnt fileRef.size and not self.integrityCheck\n        responseType = '400' if stats.size isnt fileRef.size and self.integrityCheck\n        partiral     = false\n        reqRange     = false\n\n        if http.params.query.download and http.params.query.download == 'true'\n          dispositionType = 'attachment; '\n        else\n          dispositionType = 'inline; '\n\n        dispositionName     = \"filename=\\\"#{encodeURIComponent(self.currentFile.name)}\\\"; filename=*UTF-8\\\"#{encodeURIComponent(self.currentFile.name)}\\\"; \"\n        dispositionEncoding = 'charset=utf-8'\n\n        http.response.setHeader 'Content-Type', fileRef.type\n        http.response.setHeader 'Content-Disposition', dispositionType + dispositionName + dispositionEncoding\n        http.response.setHeader 'Accept-Ranges', 'bytes'\n        http.response.setHeader 'Last-Modified', self.currentFile?.updatedAt?.toUTCString() if self.currentFile?.updatedAt?.toUTCString()\n        http.response.setHeader 'Connection', 'keep-alive'\n\n        if http.request.headers.range\n          partiral = true\n          array    = http.request.headers.range.split /bytes=([0-9]*)-([0-9]*)/\n          start    = parseInt array[1]\n          end      = parseInt array[2]\n          if isNaN(end)\n            end    = fileRef.size - 1\n          take     = end - start\n        else\n          start    = 0\n          end      = fileRef.size - 1\n          take     = fileRef.size\n\n        if partiral or (http.params.query.play and http.params.query.play == 'true')\n          reqRange = {start, end}\n          if isNaN(start) and not isNaN end\n            reqRange.start = end - take\n            reqRange.end   = end\n          if not isNaN(start) and isNaN end\n            reqRange.start = start\n            reqRange.end   = start + take\n\n          reqRange.end = fileRef.size - 1 if ((start + take) >= fileRef.size)\n          http.response.setHeader 'Pragma', 'private'\n          http.response.setHeader 'Expires', new Date(+new Date + 1000*32400).toUTCString()\n          http.response.setHeader 'Cache-Control', 'private, maxage=10800, s-maxage=32400'\n\n          if self.strict and (reqRange.start >= (fileRef.size - 1) or reqRange.end > (fileRef.size - 1))\n            responseType = '416'\n          else\n            responseType = '206'\n        else\n          http.response.setHeader 'Cache-Control', self.cacheControl\n          responseType = '200'\n\n        streamErrorHandler = (error) ->\n          http.response.writeHead 500\n          http.response.end error.toString()\n\n        switch responseType\n          when '400'\n            console.warn \"[FilesCollection] [download(#{fileRef.path}, #{version})] [400] Content-Length mismatch!\" if self.debug\n            text = 'Content-Length mismatch!'\n            http.response.writeHead 400,\n              'Content-Type':   'text/plain'\n              'Cache-Control':  'no-cache'\n              'Content-Length': text.length\n            http.response.end text\n            break\n          when '404'\n            return self._404 http\n            break\n          when '416'\n            console.info \"[FilesCollection] [download(#{fileRef.path}, #{version})] [416] Content-Range is not specified!\" if self.debug\n            http.response.writeHead 416,\n              'Content-Range': \"bytes */#{fileRef.size}\"\n            http.response.end()\n            break\n          when '200'\n            console.info \"[FilesCollection] [download(#{fileRef.path}, #{version})] [200]\" if self.debug\n            stream = fs.createReadStream fileRef.path\n            stream.on('open', =>\n              http.response.writeHead 200\n              if self.throttle\n                stream.pipe( new Throttle {bps: self.throttle, chunksize: self.chunkSize}\n                ).pipe http.response\n              else\n                stream.pipe http.response\n            ).on 'error', streamErrorHandler\n            break\n          when '206'\n            console.info \"[FilesCollection] [download(#{fileRef.path}, #{version})] [206]\" if self.debug\n            http.response.setHeader 'Content-Range', \"bytes #{reqRange.start}-#{reqRange.end}/#{fileRef.size}\"\n            http.response.setHeader 'Trailer', 'expires'\n            http.response.setHeader 'Transfer-Encoding', 'chunked'\n            if self.throttle\n              stream = fs.createReadStream fileRef.path, {start: reqRange.start, end: reqRange.end}\n              stream.on('open', -> http.response.writeHead 206\n              ).on('error', streamErrorHandler\n              ).on('end', -> http.response.end()\n              ).pipe( new Throttle {bps: self.throttle, chunksize: self.chunkSize}\n              ).pipe http.response\n            else\n              stream = fs.createReadStream fileRef.path, {start: reqRange.start, end: reqRange.end}\n              stream.on('open', -> http.response.writeHead 206\n              ).on('error', streamErrorHandler\n              ).on('end', -> http.response.end()\n              ).pipe http.response\n            break\n      return\n    else\n      return @_404 http\n  else undefined\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name link\n  @param {Object}   fileRef - File reference object\n  @param {String}   version - [Optional] Version of file you would like to request\n  @summary Returns downloadable URL\n  @returns {String} Empty string returned in case if file not found in DB\n  ###\n  link: (fileRef, version = 'original') ->\n    console.info '[FilesCollection] [link()]' if @debug\n    if _.isString fileRef\n      version = fileRef\n      fileRef = null\n    return '' if not fileRef and not @currentFile\n    return formatFleURL (fileRef or @currentFile), version\n\n###\n@locus Anywhere\n@private\n@name formatFleURL\n@param {Object} fileRef - File reference object\n@param {String} version - [Optional] Version of file you would like build URL for\n@param {Boolean}  pub   - [Optional] is file located in publicity available folder?\n@summary Returns formatted URL for file\n@returns {String} Downloadable link\n###\nformatFleURL = (fileRef, version = 'original') ->\n  root = __meteor_runtime_config__.ROOT_URL.replace(/\\/+$/, '')\n\n  if fileRef?.extension?.length > 0\n    ext = '.' + fileRef.extension\n  else\n    ext = ''\n\n  if fileRef.public is true\n    return root + (if version is 'original' then \"#{fileRef._downloadRoute}/#{fileRef._id}#{ext}\" else \"#{fileRef._downloadRoute}/#{version}-#{fileRef._id}#{ext}\")\n  else\n    return root + \"#{fileRef._downloadRoute}/#{fileRef._collectionName}/#{fileRef._id}/#{version}/#{fileRef._id}#{ext}\"\n\nif Meteor.isClient\n  ###\n  @locus Client\n  @TemplateHelper\n  @name fileURL\n  @param {Object} fileRef - File reference object\n  @param {String} version - [Optional] Version of file you would like to request\n  @summary Get download URL for file by fileRef, even without subscription\n  @example {{fileURL fileRef}}\n  @returns {String}\n  ###\n  Template.registerHelper 'fileURL', (fileRef, version) ->\n    return undefined if not fileRef or not _.isObject fileRef\n    version = if not version or not _.isString(version) then 'original' else version\n    if fileRef._id\n      return formatFleURL fileRef, version\n    else\n      return ''\n\nMeteor.Files = FilesCollection"]}