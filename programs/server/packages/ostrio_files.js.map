{"version":3,"sources":["meteor://ðŸ’»app/packages/ostrio_files/files.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,IAAG,MAAM,CAAC,QAAV;AACE;AAAA;;KAAA;AAAA,EAGA,KAAW,GAAG,CAAC,OAAJ,CAAY,UAAZ,CAHX;AAAA,EAIA,UAAW,GAAG,CAAC,OAAJ,CAAY,SAAZ,CAJX;AAAA,EAKA,WAAW,GAAG,CAAC,OAAJ,CAAY,UAAZ,CALX;AAAA,EAMA,OAAW,GAAG,CAAC,OAAJ,CAAY,MAAZ,CANX;AAAA,EAOA,OAAW,aAPX;AASA;AAAA;;KATA;AAAA,EAYA,QAAQ,MAAM,CAAC,eAAP,CAAuB,SAAC,QAAD;AAAc,WAAO,UAAP,CAAd;EAAA,CAAvB,CAZR,CADF;CAAA;;AAeA;AAAA;;;;;GAfA;;AAAA,MAqBA,GAAS,EArBT;;AAuBA;AAAA;;;;;;GAvBA;;AAAA,GA8BA,GAAM,SAAC,GAAD;AACJ;AAAA,MACE;AAAA,iBAAgB,GAAG,CAAC,WAApB;AAAA,IACA,QAAgB,GAAG,CAAC,MADpB;AAAA,IAEA,aAAgB,GAAG,CAAC,WAFpB;AAAA,IAGA,gBAAgB,GAAG,CAAC,cAHpB;AAAA,IAIA,eAAgB,GAAG,CAAC,aAJpB;AAAA,IAKA,WAAgB,GAAG,CAAC,SALpB;AAAA,IAMA,OAAgB,GAAG,CAAC,KANpB;AAAA,IAOA,SAAgB,GAAG,CAAC,OAPpB;AAAA,IAQA,cAAgB,GAAG,CAAC,YARpB;AAAA,IASA,UAAgB,GAAG,CAAC,QATpB;GADF;AAWA,SAAO,CAAP,CAZI;AAAA,CA9BN;;AA4CA;AAAA;;;;;;;GA5CA;;AAAA,EAoDA,GAAK,SAAC,EAAD,EAAK,IAAL;AACH,IAAE,CAAC,WAAH,GAAoB,IAAI,CAAC,WAAzB;AAAA,EACA,EAAE,CAAC,MAAH,GAAoB,IAAI,CAAC,MADzB;AAAA,EAEA,EAAE,CAAC,WAAH,GAAoB,IAAI,CAAC,WAFzB;AAAA,EAGA,EAAE,CAAC,cAAH,GAAoB,IAAI,CAAC,cAHzB;AAAA,EAIA,EAAE,CAAC,aAAH,GAAoB,IAAI,CAAC,aAJzB;AAAA,EAKA,EAAE,CAAC,SAAH,GAAoB,IAAI,CAAC,SALzB;AAAA,EAMA,EAAE,CAAC,KAAH,GAAoB,IAAI,CAAC,KANzB;AAAA,EAOA,EAAE,CAAC,OAAH,GAAoB,IAAI,CAAC,OAPzB;AAAA,EAQA,EAAE,CAAC,YAAH,GAAoB,IAAI,CAAC,YARzB;AAAA,EASA,EAAE,CAAC,QAAH,GAAoB,IAAI,CAAC,QATzB;AAUA,SAAO,EAAP,CAXG;AAAA,CApDL;;AAiEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAjEA;;AAAA,MAmGY,CAAC;AACE,iBAAC,MAAD;AACX;AAAA,QAAmT,MAAnT;AAAA,MAAC,IAAC,iCAAF,EAAe,IAAC,uCAAhB,EAAgC,IAAC,qCAAjC,EAAgD,IAAC,uBAAjD,EAAyD,IAAC,6BAA1D,EAAqE,IAAC,uCAAtE,EAAsF,IAAC,qBAAvF,EAA8F,IAAC,qDAA/F,EAAsH,IAAC,iCAAvH,EAAoI,IAAC,yCAArI,EAAsJ,IAAC,uCAAvJ,EAAuK,IAAC,uCAAxK,EAAwL,IAAC,mCAAzL,EAAoM,IAAC,6BAArM,EAA6M,IAAC,uBAA9M,EAAsN,IAAC,2CAAvN,EAAyO,IAAC,mCAA1O,EAAwP,IAAC,2BAAzP,EAAmQ,IAAC,qCAApQ,EAAmR,IAAC,6CAApR;KAAA;AAAA,IAEA,OAAqB,IAFrB;AAAA,IAGA,SAAyB,aAHzB;;MAIA,IAAC,SAAoB;KAJrB;;MAKA,IAAC,aAAoB;KALrB;;MAMA,IAAC,gBAAoB;KANrB;;MAOA,IAAC,aAAoB,OAAK;KAP1B;AAAA,IAQA,IAAC,UAAD,GAAqB,IAAI,CAAC,KAAL,CAAW,IAAC,UAAD,GAAa,CAAxB,IAA6B,CARlD;;MASA,IAAC,iBAAuB,IAAC,UAAJ,GAAgB,cAAY,IAAC,eAA7B,GAAmD;KATxE;AAAA,IAUA,IAAC,cAAD,GAAqB,IAAC,cAAa,CAAC,OAAf,CAAuB,KAAvB,EAA8B,EAA9B,CAVrB;;MAWA,IAAC,kBAAoB;KAXrB;;MAYA,IAAC,kBAAoB;eAAG,MAAM,CAAC,EAAP,GAAH;MAAA;KAZrB;;MAaA,IAAC,kBAAoB;KAbrB;;MAcA,IAAC,mBAAoB;KAdrB;;MAeA,IAAC,qBAAoB;KAfrB;AAiBA,QAAG,MAAM,CAAC,QAAV;;QACE,IAAC,yBAAyB;OAA1B;AACA,UAAG,MAAH;AACE,YAAC,aAAD,GAAoB,WAAO,kCAAP,CAApB,CADF;OADA;AAAA,MAGA,WAAQ,OAHR;AAAA,MAIA,WAAQ,SAJR;AAAA,MAKA,WAAQ,YALR;AAAA,MAMA,WAAQ,YANR;AAAA,MAOA,WAAQ,aAPR;AAAA,MAQA,WAAQ,cARR;AAAA,MASA,WAAQ,eATR;AAAA,MAUA,WAAQ,iBAVR;AAAA,MAWA,WAAQ,kBAXR;AAYA,UAAG,IAAC,aAAJ;AACE,YAAG,OAAU,CAAC,GAAP,CAAW,oBAAX,CAAJ,IAAyC,MAAM,CAAC,aAAa,CAAC,OAArB,CAA6B,mBAA7B,CAA5C;AACE,gBAAM,CAAC,GAAP,CAAW,oBAAX,EAAiC,MAAM,CAAC,aAAa,CAAC,OAArB,CAA6B,mBAA7B,CAAjC,EAAoF,IAApF,EAA0F,GAA1F,EADF;SADF;OAZA;AAAA,MAgBA,MAAM,IAAC,sBAAP,EAA8B,KAAK,CAAC,KAAN,CAAY,MAAZ,EAAoB,QAApB,CAA9B,CAhBA,CADF;KAAA;;QAmBE,IAAC,UAAoB;OAArB;;QACA,IAAC,YAAoB;OADrB;;QAEA,IAAC,eAAoB;OAFrB;;QAGA,IAAC,gBAAoB;OAHrB;;QAIA,IAAC,iBAAoB;OAJrB;;QAKA,IAAC,kBAAoB;OALrB;;QAMA,IAAC,oBAAoB;OANrB;;QAOA,IAAC,eAAuB,IAAC,UAAJ,GAAgB,gCAA8B,IAAC,eAA/C,GAAqE,wBAAsB,IAAC;OAPjH;AAAA,MAQA,IAAC,YAAD,GAAqB,IAAC,YAAW,CAAC,OAAb,CAAqB,KAArB,EAA4B,EAA5B,CARrB;AAAA,MAUA,MAAM,IAAC,OAAP,EAAe,OAAf,CAVA;AAAA,MAWA,MAAM,IAAC,SAAP,EAAiB,KAAK,CAAC,KAAN,CAAY,KAAZ,EAAmB,MAAnB,CAAjB,CAXA;AAAA,MAYA,MAAM,IAAC,YAAP,EAAoB,MAApB,CAZA;AAAA,MAaA,MAAM,IAAC,YAAP,EAAoB,MAApB,CAbA;AAAA,MAcA,MAAM,IAAC,aAAP,EAAqB,MAArB,CAdA;AAAA,MAeA,MAAM,IAAC,cAAP,EAAsB,KAAK,CAAC,KAAN,CAAY,KAAZ,EAAmB,QAAnB,CAAtB,CAfA;AAAA,MAgBA,MAAM,IAAC,eAAP,EAAuB,OAAvB,CAhBA;AAAA,MAiBA,MAAM,IAAC,iBAAP,EAAyB,KAAK,CAAC,KAAN,CAAY,KAAZ,EAAmB,QAAnB,CAAzB,CAjBA;AAAA,MAkBA,MAAM,IAAC,kBAAP,EAA0B,KAAK,CAAC,KAAN,CAAY,KAAZ,EAAmB,QAAnB,CAA1B,CAlBA,CAnBF;KAjBA;AAwDA,QAAG,KAAK,OAAR;AACE,UAAC,OAAD,GACE;AAAA,cAAM;AAAA,gBAAM,MAAN;SAAN;AAAA,QACA,MAAM;AAAA,gBAAM,MAAN;SADN;AAAA,QAEA,MAAM;AAAA,gBAAM,MAAN;SAFN;AAAA,QAGA,MAAM;AAAA,gBAAM,MAAN;SAHN;AAAA,QAIA,SAAS;AAAA,gBAAM,OAAN;SAJT;AAAA,QAKA,SAAS;AAAA,gBAAM,OAAN;SALT;AAAA,QAMA,SAAS;AAAA,gBAAM,OAAN;SANT;AAAA,QAOA,SAAS;AAAA,gBAAM,MAAN;SAPT;AAAA,QAQA,WACE;AAAA,gBAAM,MAAN;AAAA,UACA,UAAU,IADV;SATF;AAAA,QAWA,cAAc;AAAA,gBAAM,MAAN;SAXd;AAAA,QAYA,gBAAgB;AAAA,gBAAM,MAAN;SAZhB;AAAA,QAaA,iBAAiB;AAAA,gBAAM,MAAN;SAbjB;AAAA,QAcA,MACE;AAAA,gBAAM,MAAN;AAAA,UACA,UAAU,IADV;AAAA,UAEA,UAAU,IAFV;SAfF;AAAA,QAkBA,QACE;AAAA,gBAAM,MAAN;AAAA,UACA,UAAU,IADV;SAnBF;AAAA,QAqBA,WACE;AAAA,gBAAM,IAAN;AAAA,UACA,WAAW;mBAAO,WAAP;UAAA,CADX;SAtBF;AAAA,QAwBA,UACE;AAAA,gBAAM,MAAN;AAAA,UACA,UAAU,IADV;SAzBF;OADF,CADF;KAxDA;AAAA,IAsFA,MAAM,IAAC,MAAP,EAAc,OAAd,CAtFA;AAAA,IAuFA,MAAM,IAAC,OAAP,EAAe,MAAf,CAvFA;AAAA,IAwFA,MAAM,IAAC,UAAP,EAAe,OAAf,CAxFA;AAAA,IAyFA,MAAM,IAAC,aAAP,EAAkB,KAAK,CAAC,KAAN,CAAY,OAAZ,EAAqB,QAArB,CAAlB,CAzFA;AAAA,IA0FA,MAAM,IAAC,UAAP,EAAkB,MAAlB,CA1FA;AAAA,IA2FA,MAAM,IAAC,cAAP,EAAsB,MAAtB,CA3FA;AAAA,IA4FA,MAAM,IAAC,eAAP,EAAuB,MAAvB,CA5FA;AAAA,IA6FA,MAAM,IAAC,eAAP,EAAuB,QAAvB,CA7FA;AAAA,IA8FA,MAAM,IAAC,eAAP,EAAuB,KAAK,CAAC,KAAN,CAAY,KAAZ,EAAmB,QAAnB,CAAvB,CA9FA;AAAA,IA+FA,MAAM,IAAC,gBAAP,EAAwB,OAAxB,CA/FA;AAiGA,QAAG,IAAC,UAAD,IAAY,IAAC,aAAhB;AACE,YAAU,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,mBAAiB,IAAC,eAAlB,GAAiC,4DAAnD,CAAV,CADF;KAjGA;AAAA,IAoGA,IAAC,OAAD,GAAiB,IApGjB;AAAA,IAqGA,IAAC,OAAD,GAAiB,EArGjB;AAAA,IAsGA,IAAC,WAAD,GAAqB,SAAK,CAAC,UAAN,CAAiB,IAAC,eAAlB,CAtGrB;AAAA,IAuGA,IAAC,YAAD,GAAiB,IAvGjB;AAAA,IAyGA,IAAC,WAAU,CAAC,YAAZ,CAAyB,IAAC,OAA1B,CAzGA;AAAA,IA0GA,IAAC,WAAU,CAAC,IAAZ,CACE;AAAA,cAAQ;eAAG,KAAH;MAAA,CAAR;AAAA,MACA,QAAQ;eAAG,KAAH;MAAA,CADR;AAAA,MAEA,QAAQ;eAAG,KAAH;MAAA,CAFR;KADF,CA1GA;AAAA,IA+GA,IAAC,QAAD,GAAW,OAAO,IAAC,eAAD,GAAkB,IAAC,cAA1B,CA/GX;AAAA,IAgHA,MAAO,KAAC,QAAD,CAAP,GAAmB,IAhHnB;AAAA,IAkHA,IAAC,YAAD,GAAe,SAAC,IAAD;AACb;AAAA,UAAG,IAAI,CAAC,WAAD,CAAP;AACE,eAAO,KAAP;AAAA,QACA,YAAY,IAAI,CAAC,OAAL,CAAa,IAAb,CADZ;AAAA,QAEC,qBAAD,EAAO,yBAFP;AAAA,QAGA,OAAO,MAHP;AAKA,YAAG,CAAC,CAAC,UAAF,CAAa,IAAI,CAAC,WAAD,CAAjB,CAAH;AACE,mBAAY,IAAH,GAAa,IAAI,CAAC,WAAD,CAAU,CAAC,IAAf,CAAoB,CAAC,CAAC,MAAF,CAAS,IAAT,EAAe,SAAf,CAApB,EAA+C,IAAI,CAAC,WAAL,IAAoB,IAAnE,CAAb,GAA2F,IAAI,CAAC,WAAD,CAAU,CAAC,IAAf,CAAoB,SAApB,EAA+B,IAAI,CAAC,WAAL,IAAoB,IAAnD,CAApG,CADF;SAAA;AAGE,mBAAS,EAAC,IAAV,CAHF;SALA;AAUA,YAAG,CAAC,QAAS,WAAU,IAApB,KAA6B,KAAhC;AACE,iBAAO,IAAP,CADF;SAAA;AAGE,eAAQ,CAAC,CAAC,QAAF,CAAW,MAAX,CAAH,GAA2B,MAA3B,GAAuC,GAA5C;AACA,cAAkE,IAAI,CAAC,KAAvE;AAAA,mBAAO,CAAC,IAAR,CAAa,iDAAb;WADA;AAEA,cAAG,IAAH;AACE,mBAAO,gBAAP;AAAA,YACA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,EAAxB,EACE;AAAA,gCAAkB,IAAI,CAAC,MAAvB;AAAA,cACA,gBAAkB,YADlB;aADF,CADA;AAAA,YAIA,IAAI,CAAC,QAAQ,CAAC,GAAd,CAAkB,IAAlB,CAJA,CADF;WAFA;AAQA,iBAAO,KAAP,CAXF;SAXF;OAAA;AAwBE,eAAO,IAAP,CAxBF;OADa;IAAA,CAlHf;AAAA,IA6IA,IAAC,YAAD,GACE;AAAA,uBAAkB,oBAAkB,IAAC,QAArC;AAAA,MACA,iBAAkB,oBAAkB,IAAC,QADrC;AAAA,MAEA,kBAAkB,qBAAmB,IAAC,QAFtC;KA9IF;AAkJA,QAAG,MAAM,CAAC,QAAV;AACE,YAAM,CAAC,eAAe,CAAC,GAAvB,CAA2B,SAAC,OAAD,EAAU,QAAV,EAAoB,IAApB;AACzB;AAAA,iBAAW,CAAC,QAAD,CAAX;AACE,cAAG,EAAC,CAAC,OAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAxB,CAAmC,IAAI,CAAC,aAAN,GAAoB,GAApB,GAAuB,IAAI,CAAC,cAA9D,CAAN;AACE,kBAAM,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,OAAxB,CAAmC,IAAI,CAAC,aAAN,GAAoB,GAApB,GAAuB,IAAI,CAAC,cAA9D,EAAgF,EAAhF,CAAN;AACA,gBAAG,GAAG,CAAC,OAAJ,CAAY,GAAZ,MAAoB,CAAvB;AACE,oBAAM,GAAG,CAAC,SAAJ,CAAc,CAAd,CAAN,CADF;aADA;AAAA,YAIA,OAAO,GAAG,CAAC,KAAJ,CAAU,GAAV,CAJP;AAKA,gBAAG,IAAI,CAAC,MAAL,KAAe,CAAlB;AACE,uBACE;AAAA,uBAAU,OAAO,CAAC,UAAU,CAAC,KAAtB,GAAiC,IAAI,CAAC,KAAL,CAAW,OAAO,UAAU,OAAO,CAAC,UAAU,CAAC,KAA7B,CAAmC,CAAC,OAApC,CAA4C,IAA5C,EAAkD,KAAlD,CAAwD,CAAC,OAAzD,CAAiE,IAAjE,EAAuE,KAAvE,CAA6E,CAAC,OAA9E,CAAsF,IAAtF,EAA2F,KAA3F,CAAP,GAA2G,IAAtH,CAAjC,GAAkK,EAAzK;AAAA,gBACA,KAAK,IAAK,GADV;AAAA,gBAEA,SAAS,IAAK,GAFd;AAAA,gBAGA,MAAM,IAAK,GAHX;eADF;AAAA,cAKA,OAAO;AAAA,gBAAC,gBAAD;AAAA,gBAAU,kBAAV;AAAA,gBAAoB,cAApB;eALP;AAMA,kBAA4D,IAAI,CAAC,WAAL,CAAiB,IAAjB,CAA5D;uBAAA,IAAI,CAAC,OAAL,CAAa,IAAK,GAAlB,CAAqB,CAAC,QAAQ,CAAC,IAA/B,CAAoC,IAApC,EAA0C,IAA1C,EAAgD,IAAK,GAArD;eAPF;aAAA;qBASE,OATF;aANF;WAAA;mBAiBE,OAjBF;WADF;SAAA;AAoBE,cAAG,EAAC,CAAC,OAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAxB,CAAgC,KAAG,IAAI,CAAC,aAAxC,CAAN;AACE,kBAAM,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,OAAxB,CAAgC,KAAG,IAAI,CAAC,aAAxC,EAAyD,EAAzD,CAAN;AACA,gBAAG,GAAG,CAAC,OAAJ,CAAY,GAAZ,MAAoB,CAAvB;AACE,oBAAM,GAAG,CAAC,SAAJ,CAAc,CAAd,CAAN,CADF;aADA;AAAA,YAIA,OAAO,GAAG,CAAC,KAAJ,CAAU,GAAV,CAJP;AAKA,gBAAG,IAAI,CAAC,MAAL,KAAe,CAAlB;AACE,uBACE;AAAA,uBAAU,OAAO,CAAC,UAAU,CAAC,KAAtB,GAAiC,IAAI,CAAC,KAAL,CAAW,OAAO,UAAU,OAAO,CAAC,UAAU,CAAC,KAA7B,CAAmC,CAAC,OAApC,CAA4C,IAA5C,EAAkD,KAAlD,CAAwD,CAAC,OAAzD,CAAiE,IAAjE,EAAuE,KAAvE,CAA6E,CAAC,OAA9E,CAAsF,IAAtF,EAA2F,KAA3F,CAAP,GAA2G,IAAtH,CAAjC,GAAkK,EAAzK;AAAA,gBACA,MAAM,IAAK,GADX;eADF;AAAA,cAGA,OAAO;AAAA,gBAAC,gBAAD;AAAA,gBAAU,kBAAV;AAAA,gBAAoB,cAApB;eAHP;AAKA,kBAAG,EAAC,CAAC,MAAO,CAAC,IAAI,CAAC,OAAZ,CAAoB,GAApB,CAAN;AACE,0BAAU,MAAM,CAAC,IAAI,CAAC,KAAZ,CAAkB,GAAlB,CAAuB,GAAjC;uBACA,IAAI,CAAC,QAAQ,CAAC,IAAd,CAAmB,IAAnB,EAAyB,IAAzB,EAA+B,OAA/B,EAFF;eAAA;uBAIE,IAAI,CAAC,IAAL,CAAU,IAAV,EAJF;eANF;aAAA;qBAYE,OAZF;aANF;WAAA;mBAoBE,OApBF;WApBF;SADyB;MAAA,CAA3B;AAAA,MA2CA,WAAW,EA3CX;AAAA,MA4CA,QAAS,KAAI,CAAC,WAAW,CAAC,gBAAjB,CAAT,GAA8C,SAAC,IAAD;AAC5C,cAAM,IAAN,EAAY,MAAZ;AACA,YAAiD,IAAI,CAAC,KAAtD;AAAA,iBAAO,CAAC,IAAR,CAAa,gCAAb;SADA;AAEA,YAAG,IAAI,CAAC,eAAR;iBACE,IAAI,CAAC,MAAM,CAAC,IAAZ,CAAiB,GAAG,MAAO,KAAI,CAAC,OAAL,CAAV,EAAyB,IAAzB,CAAjB,EAAiD,IAAI,CAAC,MAAtD,EADF;SAAA;AAGE,gBAAU,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,8DAAlB,CAAV,CAHF;SAH4C;MAAA,CA5C9C;AAAA,MAoDA,QAAS,KAAI,CAAC,WAAW,CAAC,eAAjB,CAAT,GAA6C,SAAC,IAAD;AAC3C;AAAA,YAAC,QAAD;AAAA,QACA,MAAM,IAAN,EAAY;AAAA,UACV,KAAY,KAAK,CAAC,QAAN,CAAe,OAAf,CADF;AAAA,UAEV,MAAY,KAAK,CAAC,QAAN,CAAe,MAAf,CAFF;AAAA,UAGV,MAAY,MAHF;AAAA,UAIV,QAAY,MAJF;AAAA,UAKV,SAAY,KAAK,CAAC,QAAN,CAAe,MAAf,CALF;AAAA,UAMV,SAAY,KAAK,CAAC,QAAN,CAAe,MAAf,CANF;AAAA,UAOV,YAAY,MAPF;SAAZ,CADA;;UAWA,IAAI,CAAC,MAAW;SAXhB;;UAYA,IAAI,CAAC,OAAW;SAZhB;;UAaA,IAAI,CAAC,UAAW;SAbhB;;UAcA,IAAI,CAAC,UAAW;SAdhB;AAgBA,YAA6I,IAAI,CAAC,KAAlJ;AAAA,iBAAO,CAAC,IAAR,CAAa,wCAAsC,IAAI,CAAC,OAA3C,GAAmD,GAAnD,GAAsD,IAAI,CAAC,UAA3D,GAAsE,gBAAtE,GAAqF,CAAC,IAAI,CAAC,IAAI,CAAC,IAAV,IAAkB,IAAI,CAAC,IAAI,CAAC,QAA7B,CAAlG;SAhBA;AAkBA,YAAG,IAAI,CAAC,cAAL,IAAwB,CAAC,CAAC,UAAF,CAAa,IAAI,CAAC,cAAlB,CAA3B;AACE,4BAAkB,IAAI,CAAC,cAAc,CAAC,IAApB,CAAyB;AAAA,YAAC,MAAM,IAAI,CAAC,IAAZ;WAAzB,EAA4C,IAAI,CAAC,IAAjD,CAAlB;AACA,cAAG,oBAAqB,IAAxB;AACE,kBAAU,UAAM,CAAC,KAAP,CAAa,GAAb,EAAqB,CAAC,CAAC,QAAF,CAAW,eAAX,CAAH,GAAoC,eAApC,GAAyD,kCAA3E,CAAV,CADF;WAFF;SAlBA;AAAA,QAuBA,WAAW,IAAI,CAAC,WAAL,CAAiB,IAAI,CAAC,IAAtB,CAvBX;AAAA,QAwBA,MAAgC,IAAI,CAAC,MAAL,CAAY,QAAZ,CAAhC,EAAC,yBAAD,EAAY,uCAxBZ;AAAA,QA0BA,WAAc,IAAI,CAAC,QAAD,CAAP,GAAuB,IAAI,CAAC,WAAN,GAAkB,YAAlB,GAA8B,IAAI,CAAC,MAAzD,GAA0E,IAAI,CAAC,WAAN,GAAkB,GAAlB,GAAqB,IAAI,CAAC,MA1B9G;AAAA,QA2BA,OAAc,IAAI,CAAC,QAAD,CAAP,GAAuB,IAAI,CAAC,WAAN,GAAkB,YAAlB,GAA8B,IAAI,CAAC,MAAnC,GAA4C,gBAAlE,GAA6F,IAAI,CAAC,WAAN,GAAkB,GAAlB,GAAqB,IAAI,CAAC,MAA1B,GAAmC,gBA3B1I;AAAA,QA4BA,WAAc,IAAI,CAAC,UAAL,GAAkB,CAArB,GAA+B,QAAD,GAAU,GAAV,GAAa,IAAI,CAAC,OAAlB,GAA4B,gBAA1D,GAAkF,IA5B7F;AAAA,QA8BA,SAAS,CAAC,CAAC,MAAF,CAAS,IAAI,CAAC,YAAL,CAAkB,CAAC,CAAC,MAAF,CAAS,IAAI,CAAC,IAAd,EAAoB;AAAA,UAAC,UAAD;AAAA,UAAO,oBAAP;AAAA,UAAkB,MAAM,QAAxB;AAAA,UAAkC,MAAM,IAAI,CAAC,IAA7C;SAApB,CAAlB,CAAT,EAAqG;AAAA,UAAC,KAAK,IAAI,CAAC,MAAX;SAArG,CA9BT;AAAA,QAgCA,SAAS,SAAC,EAAD;iBAAQ,MAAM,CAAC,KAAP,CAAa;AAC5B;AAAA,gBAAG,IAAI,CAAC,GAAR;AACE,uBAAS,IAAI,CAAC,OAAd,CADF;aAAA;AAGE,uBAAa,WAAO,IAAI,CAAC,OAAZ,EAAqB,QAArB,CAAb,CAHF;aAAA;AAAA,YAIA,QAAS,CAJT;AAAA,YAMA,eAAe,SAAC,GAAD,EAAM,KAAN,EAAa,EAAb;AACb;AAAA,uBAAS,KAAK,CAAC,OAAN,CAAiB,IAAI,CAAC,MAAN,GAAa,IAAb,GAAiB,gBAAjC,CAAT;AACA,kBAA0B,EAAC,CAAC,MAA5B;AAAA,qBAAK,CAAC,MAAN,CAAa,MAAb,EAAqB,CAArB;eADA;AAAA,cAEA,SAAS,KAAK,CAAC,OAAN,CAAiB,IAAI,CAAC,MAAN,GAAa,GAAb,GAAgB,GAAhB,GAAsB,gBAAtC,CAFT;AAGA,kBAAG,EAAC,CAAC,MAAL;AACE,qBAAK,CAAC,MAAN,CAAa,MAAb,EAAqB,CAArB,EADF;eAAA,MAEK,IAAG,KAAK,CAAC,MAAN,IAAgB,CAAnB;AACH,uBAAO,OAAO,EAAP,CAAP,CADG;eAAA;AAGH,uBAAO,aAAa,KAAb,EAAoB,KAApB,EAA2B,EAA3B,CAAP,CAHG;eALL;AAAA,cAUA,QAAa,QAAD,GAAU,GAAV,GAAa,GAAb,GAAmB,gBAV/B;AAAA,cAWA,UAAU,WAAW,IAAX,GAAkB,gBAX5B;qBAaA,EAAE,CAAC,IAAH,CAAQ,KAAR,EAAe,SAAC,KAAD,EAAQ,KAAR;uBAAkB,MAAM;AACrC,sBAAG,SAAS,MAAS,CAAC,MAAN,EAAhB;AACE,wBAAG,SAAS,EAAZ;6BACE,GAAO,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,YAAU,GAAV,GAAc,cAAhC,CAAP,EADF;qBAAA;AAGE;6BACA,MAAM,CAAC,UAAP,CAAkB;+BAChB,aAAa,GAAb,EAAkB,KAAlB,EAAyB,EAAzB,EADgB;sBAAA,CAAlB,EAEE,GAFF,EAJF;qBADF;mBAAA;2BASE,EAAE,CAAC,QAAH,CAAY,KAAZ,EAAmB,SAAC,KAAD,EAAQ,UAAR;6BAAuB,MAAM;AAC9C,4BAAG,KAAH;iCACE,GAAO,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,gBAAc,KAAhC,CAAP,EADF;yBAAA;iCAGE,EAAE,CAAC,UAAH,CAAc,OAAd,EAAuB,UAAvB,EAAmC,SAAC,KAAD;mCAAW,MAAM;AAClD,kCAAG,KAAH;uCACE,GAAO,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,kBAAgB,KAAhB,GAAsB,MAAtB,GAA4B,OAA9C,CAAP,EADF;+BAAA;AAGE,kCAAE,CAAC,MAAH,CAAU,KAAV,EAAiB,IAAjB;AACA,oCAAG,KAAK,CAAC,MAAN,IAAgB,CAAnB;yCACE,EAAE,CAAC,MAAH,CAAU,OAAV,EAAmB,IAAnB,EAAyB,SAAC,KAAD;2CAAW,MAAM;AACxC,0CAAG,KAAH;+CACE,GAAO,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,kBAAgB,OAAhB,GAAwB,MAAxB,GAA8B,IAAhD,CAAP,EADF;uCAAA;+CAGE,OAAO,EAAP,EAHF;uCADwC;oCAAA,CAAN,EAAX;kCAAA,CAAzB,EADF;iCAAA;yCAOE,aAAa,KAAb,EAAoB,KAApB,EAA2B,EAA3B,EAPF;iCAJF;+BADkD;4BAAA,CAAN,EAAX;0BAAA,CAAnC,EAHF;yBAD8C;sBAAA,CAAN,EAAvB;oBAAA,CAAnB,EATF;mBADqC;gBAAA,CAAN,EAAlB;cAAA,CAAf,EAda;YAAA,CANf;AAAA,YAgDA,SAAS,SAAC,EAAD;AACP,gBAAE,CAAC,KAAH,CAAS,IAAT,EAAe,IAAI,CAAC,WAApB,EAAiC,IAAjC;AAAA,cACA,MAAM,CAAC,IAAP,GAAc,IAAI,CAAC,WAAL,CAAiB,IAAI,CAAC,IAAtB,CADd;qBAGA,IAAI,CAAC,UAAU,CAAC,MAAhB,CAAuB,CAAC,CAAC,KAAF,CAAQ,MAAR,CAAvB,EAAwC,SAAC,KAAD,EAAQ,GAAR;AACtC,oBAAG,KAAH;yBACE,GAAO,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,KAAlB,CAAP,EADF;iBAAA;AAGE,wBAAM,CAAC,GAAP,GAAa,GAAb;AACA,sBAAgF,IAAI,CAAC,KAArF;AAAA,2BAAO,CAAC,IAAR,CAAa,4CAA0C,QAA1C,GAAmD,MAAnD,GAAyD,IAAtE;mBADA;AAAA,kBAEA,IAAI,CAAC,aAAL,IAAuB,IAAI,CAAC,aAAa,CAAC,IAAnB,CAAwB,IAAxB,EAA8B,MAA9B,CAFvB;yBAGA,GAAG,IAAH,EAAS,MAAT,EANF;iBADsC;cAAA,CAAxC,EAJO;YAAA,CAhDT;AA4DA;AACE,kBAAG,IAAI,CAAC,GAAR;AACE,oBAAG,IAAI,CAAC,UAAL,GAAkB,CAArB;AACE,oBAAE,CAAC,OAAH,CAAW,IAAI,CAAC,WAAhB,EAA6B,SAAC,KAAD,EAAQ,KAAR;2BAAkB,MAAM;AACnD,0BAAG,KAAH;+BACE,GAAO,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,KAAlB,CAAP,EADF;uBAAA;AAGE,gCAAQ,KAAK,CAAC,MAAN,CAAa,SAAC,CAAD;iCAAO,EAAC,CAAC,CAAE,CAAC,OAAF,CAAU,IAAI,CAAC,MAAf,EAAV;wBAAA,CAAb,CAAR;AACA,4BAAG,KAAK,CAAC,MAAN,KAAgB,CAAnB;iCACE,EAAE,CAAC,MAAH,CAAa,IAAI,CAAC,WAAN,GAAkB,GAAlB,GAAqB,KAAM,GAAvC,EAA6C,IAA7C,EAAmD,SAAC,KAAD;mCAAW,MAAM;AAClE,kCAAG,KAAH;uCACE,GAAO,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,kBAAgB,OAAhB,GAAwB,MAAxB,GAA8B,IAAhD,CAAP,EADF;+BAAA;uCAGE,OAAO,EAAP,EAHF;+BADkE;4BAAA,CAAN,EAAX;0BAAA,CAAnD,EADF;yBAAA;iCAOE,aAAa,CAAb,EAAgB,KAAhB,EAAuB,EAAvB,EAPF;yBAJF;uBADmD;oBAAA,CAAN,EAAlB;kBAAA,CAA7B,EADF;iBAAA;AAeE,yBAAO,EAAP,EAfF;iBADF;eAAA;AAkBE,oBAAG,QAAH;AACE,0BAAW,IAAI,CAAC,UAAL,GAAkB,CAArB,GAA+B,QAAD,GAAU,GAAV,GAAY,CAAC,IAAI,CAAC,OAAL,GAAe,CAAhB,CAAZ,GAAgC,gBAA9D,SAAR;AAAA,kBACA,EAAE,CAAC,IAAH,CAAQ,KAAR,EAAe,SAAC,KAAD,EAAQ,KAAR;2BAAkB,MAAM;AACrC,0BAAG,SAAS,MAAS,CAAC,MAAN,EAAhB;+BACE,EAAE,CAAC,UAAH,CAAe,YAAY,IAA3B,EAAkC,MAAlC,EAA0C,QAA1C,EAAoD,SAAC,KAAD;iCAAW,MAAM;mCACnE,GAAG,KAAH,EAAU,MAAV,EADmE;0BAAA,CAAN,EAAX;wBAAA,CAApD,EADF;uBAAA;+BAIE,EAAE,CAAC,UAAH,CAAc,KAAd,EAAqB,MAArB,EAA6B,SAAC,KAAD;iCAAW,MAAM;mCAC5C,EAAE,CAAC,MAAH,CAAU,KAAV,EAAoB,QAAD,GAAU,GAAV,GAAa,IAAI,CAAC,OAAlB,GAA4B,gBAA/C,EAAmE,SAAC,KAAD;qCAAW,MAAM;uCAClF,GAAG,KAAH,EAAU,MAAV,EADkF;8BAAA,CAAN,EAAX;4BAAA,CAAnE,EAD4C;0BAAA,CAAN,EAAX;wBAAA,CAA7B,EAJF;uBADqC;oBAAA,CAAN,EAAlB;kBAAA,CAAf,CADA,CADF;iBAAA;AAWE,oBAAE,CAAC,UAAH,CAAe,YAAY,IAA3B,EAAkC,MAAlC,EAA0C,QAA1C,EAAoD,SAAC,KAAD;2BAAW,MAAM;6BAAG,GAAG,KAAH,EAAU,MAAV,EAAH;oBAAA,CAAN,EAAX;kBAAA,CAApD,EAXF;iBAlBF;eADF;aAAA;AAgCE,cADI,UACJ;AAAA,iBAAG,CAAH,EAhCF;aA7D4B;UAAA,CAAb,EAAR;QAAA,CAhCT;AAgIA,YAAG,IAAI,CAAC,GAAR;AACE;AACE,mBAAO,MAAM,CAAC,SAAP,CAAiB,MAAjB,GAAP,CADF;WAAA;AAGE,YADI,UACJ;AAAA,gBAA8D,IAAI,CAAC,KAAnE;AAAA,qBAAO,CAAC,IAAR,CAAa,0CAAb,EAAyD,CAAzD;aAAA;AACA,kBAAM,CAAN,CAJF;WADF;SAAA;AAOE,iBAAO,IAAP;AACA,iBAAO,MAAP,CARF;SAjI2C;MAAA,CApD7C;AAAA,MA+LA,QAAS,KAAI,CAAC,WAAW,CAAC,eAAjB,CAAT,GAA6C,SAAC,IAAD;AAC3C;AAAA,cAAM,IAAN,EAAY;AAAA,UACV,QAAQ,MADE;AAAA,UAEV,UAAU,MAFA;AAAA,UAGV,YAAY,MAHF;SAAZ;AAAA,QAMA,MAAO,MAAI,IAAI,CAAC,QAAQ,CAAC,GANzB;AAAA,QAOA,OAAU,IAAI,CAAC,QAAD,CAAP,GAAuB,IAAI,CAAC,WAAN,GAAkB,YAAlB,GAA8B,IAAI,CAAC,MAAzD,GAA0E,IAAI,CAAC,WAAN,GAAkB,GAAlB,GAAqB,IAAI,CAAC,MAP1G;AASA,YAA6D,IAAI,CAAC,KAAlE;AAAA,iBAAO,CAAC,IAAR,CAAa,wCAAsC,IAAnD;SATA;AAUA,YAAG,IAAI,CAAC,UAAL,GAAkB,CAArB;AACE,cAAI,CAAJ;AACA,iBAAM,KAAK,IAAI,CAAC,UAAhB;AACE,oBAAW,IAAD,GAAM,GAAN,GAAS,CAAT,GAAa,GAAvB;AAAA,YACA,EAAE,CAAC,IAAH,CAAQ,KAAR,EAAe,CAAC,SAAC,KAAD,EAAQ,KAAR;qBAAkB,MAAM;uBAAA;AACtC,sBAAG,UAAc,KAAK,CAAC,MAAN,EAAjB;2BACE,EAAE,CAAC,MAAH,CAAU,KAAC,MAAX,EAAkB,IAAlB,EADF;mBADsC;gBAAA;cAAA,QAAN,EAAlB;YAAA,CAAD,CAGd,CAAC,IAHa,CAGR;AAAA,cAAC,YAAD;aAHQ,CAAf,CADA;AAAA,YAKA,GALA,CADF;UAAA,CAFF;SAVA;eAmBA,MAAM,CAAC,UAAP,CAAkB;iBAChB,IAAI,CAAC,MAAL,CAAY,IAAI,CAAC,MAAjB,EADgB;QAAA,CAAlB,EAEE,GAFF,EApB2C;MAAA,CA/L7C;AAAA,MAuNA,MAAM,CAAC,OAAP,CAAe,QAAf,CAvNA,CADF;KAnJW;EAAA,CAAb;;AA6WA;AAAA;;;;KA7WA;;AAoXA;AAAA;;;;;;;;KApXA;;AAAA,kBA6XA,cAAa,SAAC,QAAD;AACX;AAAA,UAAM,QAAN,EAAgB,MAAhB;AACA,2BAAwB,QAAQ,CAAE,aAAlC;AAAA,aAAO,QAAQ,CAAC,IAAhB;KADA;AAEA,QAAqC,SAAY,EAAK,CAAC,QAAF,CAAW,IAAX,CAArD;AAAA,aAAO,0BAAP;KAFA;WAGA,KAJW;EAAA,CA7Xb;;AAmYA;AAAA;;;;;;;;KAnYA;;AAAA,kBA4YA,cAAa,SAAC,QAAD;AACX;AAAA,eAAW,QAAQ,CAAC,IAAT,IAAiB,QAAQ,CAAC,QAArC;AACA,QAAG,CAAC,CAAC,QAAF,CAAW,QAAX,KAAyB,QAAQ,CAAC,MAAT,GAAkB,CAA9C;AACE,kBAAY,SAAC,GAAD;eAAS,GAAG,CAAC,OAAJ,CAAY,OAAZ,EAAqB,EAArB,CAAwB,CAAC,OAAzB,CAAiC,KAAjC,EAAwC,EAAxC,EAAT;MAAA,CAAZ;AACA,aAAO,UAAU,QAAQ,CAAC,IAAT,IAAiB,QAAQ,CAAC,QAApC,CAAP,CAFF;KAAA;AAIE,aAAO,EAAP,CAJF;KAFW;EAAA,CA5Yb;;AAoZA;AAAA;;;;;;;KApZA;;AAAA,kBA4ZA,UAAS,SAAC,IAAD;AACP;AAAA,aACE;AAAA,YAAM;AAAG,eAAO,IAAP,CAAH;MAAA,CAAN;AAAA,MACA,QAAQ,IADR;KADF;AAIA,QAAG,MAAM,CAAC,QAAV;AACE,UAAG,IAAH;AACE,iBAAS,IAAI,CAAC,OAAO,CAAC,OAAtB;AACA,YAAG,CAAC,CAAC,GAAF,CAAM,OAAN,EAAe,eAAf,KAAoC,MAAM,CAAC,GAAP,CAAW,oBAAX,CAAvC;AACE,iBAAO,MAAM,CAAC,KAAK,CAAC,OAAb,CAAqB;AAAA,uDAA2C,QAAQ,CAAC,eAAT,CAAyB,MAAM,CAAC,GAAP,CAAW,oBAAX,CAAzB,CAA3C;WAArB,CAAP;AACA,cAAG,IAAH;AACE,kBAAM,CAAC,IAAP,GAAc;AAAM,qBAAO,IAAP,CAAN;YAAA,CAAd;AAAA,YACA,MAAM,CAAC,MAAP,GAAgB,IAAI,CAAC,GADrB,CADF;WAFF;SAFF;OADF;KAAA;AASE,UAAG,CAAC,CAAC,GAAF,CAAM,OAAN,EAAe,eAAf,KAAoC,MAAM,CAAC,MAAP,EAAvC;AACE,cAAM,CAAC,IAAP,GAAc;AAAG,iBAAO,MAAM,CAAC,IAAP,EAAP,CAAH;QAAA,CAAd;AAAA,QACA,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,MAAP,EADhB,CADF;OATF;KAJA;AAiBA,WAAO,MAAP,CAlBO;EAAA,CA5ZT;;AAgbA;AAAA;;;;;;;;KAhbA;;AAAA,kBAybA,SAAQ,SAAC,QAAD;AACN;AAAA,QAAG,EAAC,CAAC,QAAS,CAAC,OAAT,CAAiB,GAAjB,CAAN;AACE,kBAAY,QAAQ,CAAC,KAAT,CAAe,GAAf,CAAmB,CAAC,GAApB,EAAZ;AACA,aAAO;AAAA,QAAE,KAAK,SAAP;AAAA,QAAkB,oBAAlB;AAAA,QAA6B,kBAAkB,MAAM,SAArD;OAAP,CAFF;KAAA;AAIE,aAAO;AAAA,QAAE,KAAK,EAAP;AAAA,QAAW,WAAW,EAAtB;AAAA,QAA0B,kBAAkB,EAA5C;OAAP,CAJF;KADM;EAAA,CAzbR;;AAgcA;AAAA;;;;;;;;KAhcA;;AAAA,kBAycA,eAAc,SAAC,IAAD;AACZ,WAAO;AAAA,MACL,MAAY,IAAI,CAAC,IADZ;AAAA,MAEL,WAAY,IAAI,CAAC,SAFZ;AAAA,MAGL,MAAY,IAAI,CAAC,IAHZ;AAAA,MAIL,MAAY,IAAI,CAAC,IAJZ;AAAA,MAKL,MAAY,IAAI,CAAC,IALZ;AAAA,MAML,MAAY,IAAI,CAAC,IANZ;AAAA,MAOL,UACE;AAAA,kBACE;AAAA,gBAAM,IAAI,CAAC,IAAX;AAAA,UACA,MAAM,IAAI,CAAC,IADX;AAAA,UAEA,MAAM,IAAI,CAAC,IAFX;AAAA,UAGA,WAAW,IAAI,CAAC,SAHhB;SADF;OARG;AAAA,MAaL,SAAS,EAAC,CAAC,IAAK,CAAC,IAAI,CAAC,WAAV,EAAuB,CAAC,OAAxB,CAAgC,OAAhC,CAbP;AAAA,MAcL,SAAS,EAAC,CAAC,IAAK,CAAC,IAAI,CAAC,WAAV,EAAuB,CAAC,OAAxB,CAAgC,OAAhC,CAdP;AAAA,MAeL,SAAS,EAAC,CAAC,IAAK,CAAC,IAAI,CAAC,WAAV,EAAuB,CAAC,OAAxB,CAAgC,OAAhC,CAfP;AAAA,MAgBL,SAAS,IAAI,CAAC,OAAL,IAAgB,IAAC,QAhBrB;AAAA,MAiBL,cAAiB,IAAI,CAAC,YAAL,IAAqB,IAAC,YAjBlC;AAAA,MAkBL,gBAAiB,IAAI,CAAC,cAAL,IAAuB,IAAC,cAlBpC;AAAA,MAmBL,iBAAiB,IAAI,CAAC,eAAL,IAAwB,IAAC,eAnBrC;KAAP,CADY;EAAA,CAzcd;;AAgeA;AAAA;;;;;;;;KAheA;;AAAA,kBAyeA,OAAM,SAAC,MAAD;AACJ,QAAG,UAAW,CAAC,CAAC,QAAF,CAAW,MAAX,CAAd;AACE,UAAC,OAAD,GACE;AAAA,aAAK,MAAL;OADF,CADF;KAAA;AAIE,UAAC,OAAD,GAAU,UAAU,EAApB,CAJF;KAAA;WAKA,IAAC,QANG;EAAA,CAzeN;;AAifA;AAAA;;;;;;;;;;KAjfA;;AAAA,kBA4fA,QAAU,MAAM,CAAC,QAAV,GAAwB,SAAC,MAAD,EAAS,IAAT,EAAoB,QAApB;AAC7B;;MADsC,OAAO;KAC7C;AAAA,QAA2C,IAAC,MAA5C;AAAA,aAAO,CAAC,IAAR,CAAa,0BAAb;KAAA;AAAA,IACA,MAAM,IAAN,EAAY,KAAK,CAAC,QAAN,CAAe,MAAf,CAAZ,CADA;AAAA,IAEA,MAAM,QAAN,EAAgB,KAAK,CAAC,QAAN,CAAe,QAAf,CAAhB,CAFA;AAIA,QAAG,IAAC,YAAD,EAAH;AACE,qBAAgB,IAAC,eAAD,EAAhB;AAAA,MACA,WAAmB,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,QAArB,GAAmC,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,QAArD,GAAmE,YADnF;AAAA,MAGA,MAAgC,IAAC,OAAD,CAAQ,QAAR,CAAhC,EAAC,yBAAD,EAAY,uCAHZ;AAAA,MAKA,OAAe,IAAC,UAAJ,GAAmB,IAAC,YAAF,GAAc,YAAd,GAA0B,YAA1B,GAAyC,gBAA3D,GAAsF,IAAC,YAAF,GAAc,GAAd,GAAiB,YAAjB,GAAgC,gBALjI;AAAA,MAOA,IAAI,CAAC,IAAL,GAAY,IAAC,YAAD,CAAa,IAAb,CAPZ;AAQA,UAAkB,KAAQ,CAAC,IAA3B;AAAA,YAAI,CAAC,IAAL,GAAY,EAAZ;OARA;AASA,UAA6B,KAAQ,CAAC,IAAtC;AAAA,YAAI,CAAC,IAAL,GAAY,MAAM,CAAC,MAAnB;OATA;AAAA,MAWA,SAAY,IAAC,aAAD,CACV;AAAA,cAAW,QAAX;AAAA,QACA,MAAW,IADX;AAAA,QAEA,MAAW,IAAI,CAAC,IAFhB;AAAA,QAGA,MAAW,IAAI,CAAC,IAHhB;AAAA,QAIA,MAAW,IAAI,CAAC,IAJhB;AAAA,QAKA,WAAW,SALX;OADU,CAXZ;AAmBA,UAA4E,IAAC,MAA7E;AAAA,eAAO,CAAC,IAAR,CAAa,6BAA2B,QAA3B,GAAoC,MAApC,GAA0C,IAAC,eAAxD;OAnBA;AAAA,MAqBA,EAAE,CAAC,UAAH,CAAc,IAAd,EAAoB,MAApB,EAA4B,QAA5B,EAAsC,SAAC,KAAD;eAAW,MAAM;AACrD,cAAG,KAAH;mBACE,YAAa,SAAS,KAAT,EADf;WAAA;AAGE,kBAAM,CAAC,GAAP,GAAa,IAAC,WAAU,CAAC,MAAZ,CAAmB,CAAC,CAAC,KAAF,CAAQ,MAAR,CAAnB,CAAb;mBACA,YAAa,SAAS,IAAT,EAAe,MAAf,EAJf;WADqD;QAAA,CAAN,EAAX;MAAA,CAAtC,CArBA;AA4BA,aAAO,IAAP,CA7BF;KAL6B;EAAA,CAAxB,GAoCL,MAhiBF;;AAkiBA;AAAA;;;;;;;;;;KAliBA;;AAAA,kBA6iBA,OAAS,MAAM,CAAC,QAAV,GAAwB,SAAC,GAAD,EAAM,IAAN,EAAiB,QAAjB;AAC5B;;MADkC,OAAO;KACzC;AAAA,QAAmF,IAAC,MAApF;AAAA,aAAO,CAAC,IAAR,CAAa,0BAAwB,GAAxB,GAA4B,IAA5B,GAA+B,CAAC,IAAI,CAAC,SAAL,CAAe,IAAf,CAAD,CAA/B,GAAqD,cAAlE;KAAA;AAAA,IACA,MAAM,GAAN,EAAW,MAAX,CADA;AAAA,IAEA,MAAM,IAAN,EAAY,KAAK,CAAC,QAAN,CAAe,MAAf,CAAZ,CAFA;AAAA,IAGA,MAAM,QAAN,EAAgB,KAAK,CAAC,QAAN,CAAe,QAAf,CAAhB,CAHA;AAAA,IAKA,OAAgB,IALhB;AAAA,IAMA,eAAe,IAAC,eAAD,EANf;AAAA,IAOA,WAAkB,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,QAArB,GAAmC,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,QAArD,GAAmE,YAPlF;AAAA,IASA,MAAgC,IAAC,OAAD,CAAQ,QAAR,CAAhC,EAAC,yBAAD,EAAY,uCATZ;AAAA,IAUA,OAAe,IAAC,UAAJ,GAAmB,IAAC,YAAF,GAAc,YAAd,GAA0B,YAA1B,GAAyC,gBAA3D,GAAsF,IAAC,YAAF,GAAc,GAAd,GAAiB,YAAjB,GAAgC,gBAVjI;AAWA,QAAkB,KAAQ,CAAC,IAA3B;AAAA,UAAI,CAAC,IAAL,GAAY,EAAZ;KAXA;AAAA,IAaA,OAAO,CAAC,GAAR,CAAY,GAAZ,CAAgB,CAAC,EAAjB,CAAoB,OAApB,EAA6B,SAAC,KAAD;aAAU,MAAM;AAC3C,cAAU,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,qBAAkB,GAAlB,GAAsB,KAAtB,IAA6B,IAAI,CAAC,SAAL,CAAe,KAAf,CAA/C,CAAV,CAD2C;MAAA,CAAN,EAAV;IAAA,CAA7B,CAEC,CAAC,EAFF,CAEK,UAFL,EAEiB,SAAC,QAAD;aAAc,MAAM;AAEnC;AAAA,YAAyD,IAAI,CAAC,KAA9D;AAAA,iBAAO,CAAC,IAAR,CAAa,qCAAmC,GAAhD;SAAA;AAAA,QAEA,SAAS,IAAI,CAAC,YAAL,CACP;AAAA,gBAAW,QAAX;AAAA,UACA,MAAW,IADX;AAAA,UAEA,MAAW,IAAI,CAAC,IAFhB;AAAA,UAGA,MAAW,IAAI,CAAC,IAAL,IAAa,QAAQ,CAAC,OAAQ,gBAHzC;AAAA,UAIA,MAAW,IAAI,CAAC,IAAL,IAAa,QAAQ,CAAC,OAAQ,kBAJzC;AAAA,UAKA,WAAW,SALX;SADO,CAFT;eAUA,IAAI,CAAC,UAAU,CAAC,MAAhB,CAAuB,CAAC,CAAC,KAAF,CAAQ,MAAR,CAAvB,EAAwC,SAAC,KAAD,EAAQ,OAAR;AACtC,cAAG,KAAH;AACE,gBAAqG,IAAI,CAAC,KAA1G;AAAA,qBAAO,CAAC,IAAR,CAAa,2CAAyC,QAAzC,GAAkD,MAAlD,GAAwD,IAAI,CAAC,cAA1E,EAA4F,KAA5F;aAAA;mBACA,YAAa,SAAS,KAAT,EAFf;WAAA;AAIE,gBAAuF,IAAI,CAAC,KAA5F;AAAA,qBAAO,CAAC,IAAR,CAAa,oCAAkC,QAAlC,GAA2C,MAA3C,GAAiD,IAAI,CAAC,cAAnE;aAAA;mBACA,YAAa,SAAS,IAAT,EAAe,OAAf,EALf;WADsC;QAAA,CAAxC,EAZmC;MAAA,CAAN,EAAd;IAAA,CAFjB,CAsBC,CAAC,IAtBF,CAsBO,EAAE,CAAC,kBAAH,CAAsB,IAAtB,CAtBP,CAbA;AAqCA,WAAO,IAAP,CAtC4B;EAAA,CAAxB,GAwCJ,MArlBF;;AAulBA;AAAA;;;;;;;;;KAvlBA;;AAAA,kBAimBA,UAAY,MAAM,CAAC,QAAV,GAAwB,SAAC,IAAD,EAAO,IAAP,EAAkB,QAAlB;AAC/B;;MADsC,OAAO;KAC7C;AAAA,QAAoD,IAAC,MAArD;AAAA,aAAO,CAAC,IAAR,CAAa,6BAA2B,IAA3B,GAAgC,IAA7C;KAAA;AAEA,QAA4E,IAAC,UAA7E;AAAA,YAAU,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,4CAAlB,CAAV;KAFA;AAAA,IAGA,MAAM,IAAN,EAAY,MAAZ,CAHA;AAAA,IAIA,MAAM,IAAN,EAAY,KAAK,CAAC,QAAN,CAAe,MAAf,CAAZ,CAJA;AAAA,IAKA,MAAM,QAAN,EAAgB,KAAK,CAAC,QAAN,CAAe,QAAf,CAAhB,CALA;AAAA,IAOA,OAAO,IAPP;AAAA,IAQA,EAAE,CAAC,IAAH,CAAQ,IAAR,EAAc,SAAC,KAAD,EAAQ,KAAR;aAAkB,MAAM;AACpC;AAAA,YAAG,KAAH;iBACE,YAAa,SAAS,KAAT,EADf;SAAA,MAEK,IAAG,KAAK,CAAC,MAAN,EAAH;AACH,sBAAY,IAAI,CAAC,OAAL,CAAa,KAAb,CAAZ;AAAA,UACA,WAAY,SAAS,CAAC,IADtB;AAAA,UAEA,YAAY,IAAI,CAAC,KAAL,CAAW,GAAX,CAFZ;AAAA,UAGA,WAAY,SAAU,UAAS,CAAC,MAAV,GAAmB,CAAnB,CAHtB;AAAA,UAKA,MAAgC,IAAI,CAAC,MAAL,CAAY,QAAZ,CAAhC,EAAC,yBAAD,EAAY,uCALZ;AAOA,cAA+B,KAAQ,CAAC,IAAxC;AAAA,gBAAI,CAAC,IAAL,GAAY,eAAZ;WAPA;AAQA,cAAkB,KAAQ,CAAC,IAA3B;AAAA,gBAAI,CAAC,IAAL,GAAY,EAAZ;WARA;AASA,cAAwB,KAAQ,CAAC,IAAjC;AAAA,gBAAI,CAAC,IAAL,GAAY,QAAZ;WATA;AAAA,UAWA,SAAS,IAAI,CAAC,YAAL,CACP;AAAA,kBAAc,QAAd;AAAA,YACA,MAAc,IADd;AAAA,YAEA,MAAc,IAAI,CAAC,IAFnB;AAAA,YAGA,MAAc,IAAI,CAAC,IAHnB;AAAA,YAIA,MAAc,IAAI,CAAC,IAJnB;AAAA,YAKA,WAAc,SALd;AAAA,YAMA,cAAc,IAAI,CAAC,OAAL,CAAa,MAAI,QAAjB,EAA6B,EAA7B,CANd;WADO,CAXT;AAAA,UAoBA,MAAM,IAAI,CAAC,cApBX;iBAqBA,IAAI,CAAC,UAAU,CAAC,MAAhB,CAAuB,CAAC,CAAC,KAAF,CAAQ,MAAR,CAAvB,EAAwC,SAAC,KAAD,EAAQ,MAAR;AACtC,gBAAG,KAAH;AACE,kBAAwF,IAAI,CAAC,KAA7F;AAAA,uBAAO,CAAC,IAAR,CAAa,8CAA4C,QAA5C,GAAqD,MAArD,GAA2D,GAAxE,EAA+E,KAA/E;eAAA;qBACA,YAAa,SAAS,KAAT,EAFf;aAAA;AAIE,kBAA2E,IAAI,CAAC,KAAhF;AAAA,uBAAO,CAAC,IAAR,CAAa,wCAAsC,QAAtC,GAA+C,MAA/C,GAAqD,GAAlE;eAAA;qBACA,YAAa,SAAS,IAAT,EAAe,MAAf,EALf;aADsC;UAAA,CAAxC,EAtBG;SAAA;iBA8BH,YAAa,SAAa,UAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,6BAA2B,IAA3B,GAAgC,yBAAlD,CAAb,EA9BV;SAH+B;MAAA,CAAN,EAAlB;IAAA,CAAd,CARA;AA2CA,WAAO,IAAP,CA5C+B;EAAA,CAAxB,GA8CP,MA/oBF;;AAipBA;AAAA;;;;;;;;KAjpBA;;AAAA,kBA0pBA,UAAS,SAAC,MAAD;AACP,QAAsE,IAAC,MAAvE;AAAA,aAAO,CAAC,IAAR,CAAa,6BAA0B,CAAC,IAAI,CAAC,SAAL,CAAe,MAAf,CAAD,CAA1B,GAAkD,IAA/D;KAAA;AAAA,IACA,MAAM,MAAN,EAAc,KAAK,CAAC,QAAN,CAAe,KAAK,CAAC,KAAN,CAAY,MAAZ,EAAoB,MAApB,CAAf,CAAd,CADA;AAAA,IAEA,IAAC,KAAD,CAAM,MAAN,CAFA;AAIA,QAAG,IAAC,YAAD,EAAH;AACE,UAAC,YAAD,GAAe,IAAC,WAAU,CAAC,OAAZ,CAAoB,IAAC,OAArB,CAAf;AAAA,MACA,IAAC,OAAD,GAAe,IADf,CADF;KAJA;AAOA,WAAO,IAAP,CARO;EAAA,CA1pBT;;AAoqBA;AAAA;;;;;;;;KApqBA;;AAAA,kBA6qBA,OAAM,SAAC,MAAD;AACJ,QAAmE,IAAC,MAApE;AAAA,aAAO,CAAC,IAAR,CAAa,0BAAuB,CAAC,IAAI,CAAC,SAAL,CAAe,MAAf,CAAD,CAAvB,GAA+C,IAA5D;KAAA;AAAA,IACA,MAAM,MAAN,EAAc,KAAK,CAAC,QAAN,CAAe,KAAK,CAAC,KAAN,CAAY,MAAZ,EAAoB,MAApB,CAAf,CAAd,CADA;AAAA,IAEA,IAAC,KAAD,CAAM,MAAN,CAFA;AAIA,QAAG,IAAC,YAAJ;AACE,UAAC,YAAD,GAAe,IAAf;AAAA,MACA,IAAC,OAAD,GAAU,IAAC,WAAU,CAAC,IAAZ,CAAiB,IAAC,OAAlB,CADV,CADF;KAJA;AAOA,WAAO,IAAP,CARI;EAAA,CA7qBN;;AAurBA;AAAA;;;;;;;KAvrBA;;AAAA,kBA+rBA,MAAK;AACH,QAAyC,IAAC,MAA1C;AAAA,aAAO,CAAC,IAAR,CAAa,wBAAb;KAAA;AACA,QAA0B,IAAC,OAA3B;AAAA,aAAO,IAAC,OAAM,CAAC,KAAR,EAAP;KADA;AAEA,WAAO,IAAC,YAAR,CAHG;EAAA,CA/rBL;;AAosBA;AAAA;;;;;;;KApsBA;;AAAA,kBA4sBA,QAAO;AACL;AAAA,QAA2C,IAAC,MAA5C;AAAA,aAAO,CAAC,IAAR,CAAa,0BAAb;KAAA;AAAA,IACA,OAAO,IAAC,IAAD,EADP;AAEA,QAAG,EAAK,CAAC,OAAF,CAAU,IAAV,CAAP;AACE,aAAO,CAAC,IAAD,CAAP,CADF;KAAA;aAGE,KAHF;KAHK;EAAA,CA5sBP;;AAotBA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAptBA;;AAAA,kBAivBA,SAAW,MAAM,CAAC,QAAV,GAAwB,SAAC,MAAD;AAC9B;AAAA,QAAG,IAAC,YAAD,EAAH;AACE,UAA4C,IAAC,MAA7C;AAAA,eAAO,CAAC,IAAR,CAAa,2BAAb;OAAA;;QACA,MAAM,CAAC,OAAmB;OAD1B;;QAEA,MAAM,CAAC,UAAmB;OAF1B;AAGA,UAA+B,MAAM,CAAC,OAAP,GAAiB,CAAhD;AAAA,cAAM,CAAC,OAAP,GAA0B,CAA1B;OAHA;;QAIA,MAAM,CAAC,YAAmB,IAAC;OAJ3B;;QAKA,MAAM,CAAC,kBAAmB;OAL1B;AAAA,MAOA,MAAM,MAAN,EAAc;AAAA,QACZ,MAAiB,KAAK,CAAC,GADX;AAAA,QAEZ,MAAiB,KAAK,CAAC,QAAN,CAAe,MAAf,CAFL;AAAA,QAGZ,SAAiB,KAAK,CAAC,QAAN,CAAe,QAAf,CAHL;AAAA,QAIZ,SAAiB,KAAK,CAAC,QAAN,CAAe,QAAf,CAJL;AAAA,QAKZ,SAAiB,KAAK,CAAC,KAAN,CAAY,SAAZ,EAAuB,MAAvB,CALL;AAAA,QAMZ,WAAiB,KAAK,CAAC,KAAN,CAAY,SAAZ,EAAuB,MAAvB,CANL;AAAA,QAOZ,YAAiB,KAAK,CAAC,QAAN,CAAe,QAAf,CAPL;AAAA,QAQZ,YAAiB,KAAK,CAAC,QAAN,CAAe,QAAf,CARL;AAAA,QASZ,gBAAiB,KAAK,CAAC,QAAN,CAAe,QAAf,CATL;AAAA,QAUZ,iBAAiB,OAVL;OAAd,CAPA;AAoBA,UAAG,MAAM,CAAC,IAAV;AACE,YAAG,UAAW,MAAM,CAAC,eAArB;AACE,mBAAW,IAAC,aAAZ,CADF;SAAA;AAGE,mBAAW,IAAX,CAHF;SAAA;AAIA,YAA0B,IAAC,MAA3B;AAAA,iBAAO,CAAC,IAAR,CAAa,QAAb;SAJA;AAKA,YAA4B,IAAC,MAA7B;AAAA,iBAAO,CAAC,IAAR,CAAa,UAAb;SALA;AAAA,QAMA,OAAa,IANb;AAAA,QAOA,aAAa,CAPb;AAAA,QAQA,SAAa,IAAC,eAAD,EARb;AAAA,QASA,WACE;AAAA,gBAAM,MAAM,CAAC,IAAI,CAAC,IAAlB;AAAA,UACA,MAAM,MAAM,CAAC,IAAI,CAAC,IADlB;AAAA,UAEA,MAAM,MAAM,CAAC,IAAI,CAAC,IAFlB;SAVF;AAAA,QAcA,WAAW,CAAC,CAAC,MAAF,CAAS,QAAT,EAAmB,IAAC,OAAD,CAAQ,MAAM,CAAC,IAAI,CAAC,IAApB,CAAnB,EAA8C;AAAA,UAAC,MAAM,IAAC,YAAD,CAAa,QAAb,CAAP;SAA9C,CAdX;AAAA,QAeA,QAAS,aAAT,GAAwB,QAAQ,CAAC,IAfjC;AAAA,QAiBA,SACE;AAAA,gBAAe,CAAC,CAAC,MAAF,CAAS,MAAM,CAAC,IAAhB,EAAsB,QAAtB,CAAf;AAAA,UACA,OAAmB,gBAAY,QAAZ,CADnB;AAAA,UAEA,SAAmB,gBAAY,KAAZ,CAFnB;AAAA,UAGA,UAAmB,gBAAY,CAAZ,CAHnB;AAAA,UAIA,cAAmB,gBAAY,IAAZ,CAJnB;AAAA,UAKA,eAAmB,gBAAY,CAAZ,CALnB;AAAA,UAMA,cAAe,aANf;AAAA,UAOA,OAAO;AACL,qBAAQ,QAAO,CAAC,GAAT,EAAP;AACE,kBAAC,QAAO,CAAC,GAAT,CAAa,IAAb;AAAA,cACA,IAAC,MAAK,CAAC,GAAP,CAAW,QAAX,CADA,CADF;aADK;UAAA,CAPP;AAAA,UAYA,YAAU;AACR,gBAAG,IAAC,QAAO,CAAC,GAAT,EAAH;AACE,kBAAC,QAAO,CAAC,GAAT,CAAa,KAAb;AAAA,cACA,IAAC,MAAK,CAAC,GAAP,CAAW,QAAX,CADA;AAAA,cAEA,IAAC,aAAY,CAAC,IAAd,EAFA;AAAA,cAGA,IAAC,aAAD,GAAgB,aAHhB,CADF;aADQ;UAAA,CAZV;AAAA,UAmBA,QAAQ;AACN,gBAAG,IAAC,QAAO,CAAC,GAAT,EAAH;AAAuB,kBAAC,YAAD,GAAvB;aAAA;AAAwC,kBAAC,MAAD,GAAxC;aADM;UAAA,CAnBR;AAAA,UAsBA,OAAO;AACL,kBAAM,CAAC,mBAAP,CAA2B,cAA3B,EAA2C,YAA3C,EAAyD,KAAzD;AAAA,YACA,MAAM,CAAC,OAAP,IAAmB,MAAM,CAAC,OAAO,CAAC,IAAf,CAAoB,IAApB,EAAuB,QAAvB,CADnB;AAAA,YAEA,IAAC,MAAD,EAFA;AAAA,YAGA,IAAC,MAAK,CAAC,GAAP,CAAW,SAAX,CAHA;AAIA,gBAA6B,IAAI,CAAC,KAAlC;AAAA,qBAAO,CAAC,OAAR,CAAgB,QAAhB;aAJA;AAAA,YAKA,MAAM,CAAC,IAAP,CAAY,IAAI,CAAC,WAAW,CAAC,eAA7B,EAA8C;AAAA,cAAC,cAAD;AAAA,cAAS,sBAAT;AAAA,cAAqB,kBAArB;aAA9C,CALA;AAAA,YAMA,aANA,CADK;UAAA,CAtBP;SAlBF;AAAA,QAkDA,eAAe,SAAC,CAAD;AACb;AAAA,oBAAa,CAAC,CAAC,UAAF,CAAa,IAAI,CAAC,qBAAlB,CAAH,GAAiD,IAAI,CAAC,qBAAqB,CAAC,IAA3B,CAAgC,MAAhC,EAAwC,QAAxC,CAAjD,GAAwG,IAAI,CAAC,qBAAvH;AACA,cAA2B,CAA3B;AAAA,aAAC,CAAC,WAAF,GAAgB,OAAhB;WADA;AAEA,iBAAO,OAAP,CAHa;QAAA,CAlDf;AAAA,QAsDA,MAAM,CAAC,gBAAP,CAAwB,cAAxB,EAAwC,YAAxC,EAAsD,KAAtD,CAtDA;AAAA,QAwDA,OAAO,CAAC,OAAR,CAAgB;AACd,qBAAa,CAAC,OAAO,CAAC,GAAf,EAAP;AACE,gBAAG,MAAM,CAAC,MAAP,EAAe,CAAC,SAAnB;AACE,oBAAM,CAAC,UAAD,CAAN;AACA,kBAA+D,IAAI,CAAC,KAApE;AAAA,uBAAO,CAAC,IAAR,CAAa,8CAAb;eAFF;aAAA;AAIE,oBAAM,CAAC,KAAP;AACA,kBAA4D,IAAI,CAAC,KAAjE;AAAA,uBAAO,CAAC,IAAR,CAAa,2CAAb;eALF;aADF;WADc;QAAA,CAAhB,CAxDA;AAAA,QAkEA,MAAM,SAAC,KAAD,EAAQ,IAAR;AACJ,cAA6B,IAAI,CAAC,KAAlC;AAAA,mBAAO,CAAC,OAAR,CAAgB,QAAhB;WAAA;AAAA,UACA,MAAM,CAAC,mBAAP,CAA2B,cAA3B,EAA2C,YAA3C,EAAyD,KAAzD,CADA;AAAA,UAEA,MAAM,CAAC,QAAQ,CAAC,GAAhB,CAAoB,CAApB,CAFA;AAAA,UAGA,MAAM,CAAC,UAAP,IAAsB,MAAM,CAAC,UAAU,CAAC,IAAlB,CAAuB,MAAvB,EAA+B,KAA/B,EAAsC,IAAtC,CAHtB;AAIA,cAAG,KAAH;AACE,gBAA+D,IAAI,CAAC,KAApE;AAAA,qBAAO,CAAC,IAAR,CAAa,uCAAb,EAAsD,KAAtD;aAAA;AAAA,YACA,MAAM,CAAC,KAAK,CAAC,GAAb,CAAiB,SAAjB,CADA;AAAA,YAEA,MAAM,CAAC,OAAP,IAAmB,MAAM,CAAC,OAAO,CAAC,IAAf,CAAoB,MAApB,EAA4B,KAA5B,EAAmC,QAAnC,CAFnB,CADF;WAAA;AAKE,kBAAM,CAAC,KAAK,CAAC,GAAb,CAAiB,WAAjB,EALF;WALI;QAAA,CAlEN;AA+EA,YAAG,MAAM,CAAC,cAAP,IAA0B,CAAC,CAAC,UAAF,CAAa,MAAM,CAAC,cAApB,CAA7B;AACE,4BAAkB,MAAM,CAAC,cAAc,CAAC,IAAtB,CAA2B,MAA3B,EAAmC,QAAnC,CAAlB;AACA,cAAG,oBAAqB,IAAxB;AACE,gBAAQ,UAAM,CAAC,KAAP,CAAa,GAAb,EAAqB,CAAC,CAAC,QAAF,CAAW,eAAX,CAAH,GAAoC,eAApC,GAAyD,wCAA3E,CAAR,EAA8H,IAA9H;AACA,mBAAO,KAAP,CAFF;WAFF;SA/EA;AAqFA,YAAG,IAAC,eAAD,IAAoB,CAAC,CAAC,UAAF,CAAa,IAAC,eAAd,CAAvB;AACE,4BAAkB,IAAC,eAAc,CAAC,IAAhB,CAAqB,MAArB,EAA6B,QAA7B,CAAlB;AACA,cAAG,oBAAqB,IAAxB;AACE,gBAAQ,UAAM,CAAC,KAAP,CAAa,GAAb,EAAqB,CAAC,CAAC,QAAF,CAAW,eAAX,CAAH,GAAoC,eAApC,GAAyD,sCAA3E,CAAR,EAA4H,IAA5H;AACA,mBAAO,KAAP,CAFF;WAFF;SArFA;AAAA,QA2FA,eAAe,CA3Ff;AAAA,QA4FA,aAAe,CA5Ff;AAAA,QA6FA,UAAe,KA7Ff;AAAA,QA8FA,eAAe,CA9Ff;AAAA,QAgGA,iBAAiB,CAAC,CAAC,QAAF,CAAW;AAC1B;AAAA,eAAK,CAAC,eAAe,UAAhB,IAA8B,MAAM,CAAC,OAA1C;AAAA,UACA,MAAM,CAAC,YAAY,CAAC,GAApB,CAAyB,KAAK,CAAC,aAAa,UAAd,CAA9B,CADA;AAAA,UAEA,MAAM,CAAC,aAAa,CAAC,GAArB,CAA0B,MAAM,CAAC,SAAP,GAAmB,CAAC,KAAK,IAAN,CAA7C,CAFA;AAAA,UAGA,WAAW,IAAI,CAAC,KAAL,CAAW,CAAC,aAAa,UAAd,IAA4B,GAAvC,CAHX;AAAA,UAIA,MAAM,CAAC,QAAQ,CAAC,GAAhB,CAAoB,QAApB,CAJA;AAAA,UAKA,MAAM,CAAC,UAAP,IAAsB,MAAM,CAAC,UAAU,CAAC,IAAlB,CAAuB,MAAvB,EAA+B,QAA/B,EAAyC,QAAzC,CALtB,CAD0B;QAAA,CAAX,EAQf,GARe,CAhGjB;AAAA,QA0GA,aAAa,SAAC,GAAD;iBAAS,MAAM,CAAC,KAAP,CAAa;AACjC;AAAA,gBAA+B,IAAI,CAAC,KAApC;AAAA,qBAAO,CAAC,OAAR,CAAgB,UAAhB;aAAA;AAAA,YACA,OACE;AAAA,oBAAY,QAAZ;AAAA,cACA,QAAY,MADZ;AAAA,cAEA,SAAY,GAAG,CAAC,IAAI,CAAC,GAFrB;AAAA,cAGA,SAAY,GAAG,CAAC,IAAI,CAAC,OAHrB;AAAA,cAIA,YAAY,UAJZ;aAFF;AAQA,gBAAG,IAAI,CAAC,OAAL,IAAiB,IAAI,CAAC,OAAO,CAAC,MAAjC;AACE,oBAAM,CAAC,IAAP,CAAY,IAAI,CAAC,WAAW,CAAC,eAA7B,EAA8C,IAA9C,EAAoD,SAAC,KAAD;AAClD;AAAA,gBACA,gBAAgB,CAAC,EAAC,SAAF,IAAc,GAAG,CAAC,IAAI,CAAC,KADvC;AAEA,oBAAG,KAAH;AACE,sBAAI,KAAJ,EADF;iBAAA;AAGE,sBAAG,cAAc,UAAjB;AACE,4BAAQ,IAAR,EADF;mBAAA,MAEK,IAAG,eAAe,UAAlB;AACH,6BADG;mBAFL;AAAA,kBAIA,gBAJA,CAHF;iBAHkD;cAAA,CAApD,EADF;aAAA;AAcE,sBAAQ,IAAR,EAdF;aATiC;UAAA,CAAb,EAAT;QAAA,CA1Gb;AAAA,QAoIA,UAAU,SAAC,IAAD;iBAAU,MAAM,CAAC,KAAP,CAAa;AAC/B;AACE,wBAAU,IAAV;AAAA,cACA,OACE;AAAA,qBAAY,IAAZ;AAAA,gBACA,MAAY,MAAM,CAAC,IADnB;AAAA,gBAEA,MAAY,QAFZ;AAAA,gBAGA,QAAY,MAHZ;AAAA,gBAIA,YAAY,UAJZ;eAFF;AAAA,cAOA,MAAM,CAAC,IAAP,CAAY,IAAI,CAAC,WAAW,CAAC,eAA7B,EAA8C,IAA9C,EAAoD,GAApD,CAPA,CADF;aAD+B;UAAA,CAAb,EAAV;QAAA,CApIV;AAgJA,YAAG,MAAH;AACE,gBAAM,CAAC,SAAP,GAAmB,UAAnB;AAAA,UACA,MAAM,CAAC,OAAP,GAAmB,SAAC,CAAD;AACjB,gBAAI,CAAC,CAAC,OAAN,EADiB;UAAA,CADnB,CADF;SAhJA;AAsJA,YAAG,IAAI,CAAC,KAAR;AACE,cAAG,MAAH;AACE,mBAAO,CAAC,IAAR,CAAa,0CAAb,EADF;WAAA;AAGE,mBAAO,CAAC,IAAR,CAAa,0CAAb,EAHF;WADF;SAtJA;AAAA,QA4JA,SAAS;iBAAG,MAAM,CAAC,KAAP,CAAa;AACvB;AAAA,oBAAQ,EAAC,SAAT;AACA,gBAAG,MAAM,CAAC,OAAO,CAAC,GAAf,EAAH;AACE,oBAAM,CAAC,YAAP,GAAsB;uBAAG,gBAAH;cAAA,CAAtB;AACA,qBAFF;aADA;AAAA,YAKA,cALA;AAMA,gBAAG,MAAH;AACE,oBAAM,CAAC,WAAP,CAAmB;AAAA,gBAAC,sBAAD;AAAA,gBAAa,YAAb;AAAA,gBAAoB,0BAApB;AAAA,gBAAkC,WAAW,MAAM,CAAC,SAApD;AAAA,gBAA+D,MAAM,MAAM,CAAC,IAA5E;eAAnB,EADF;aAAA;AAGE,eAAC,SAAC,OAAD;AACC;AAAA,6BAAa,cAAb;AAAA,gBACA,QAAQ,MAAM,CAAC,IAAI,CAAC,KAAZ,CAAmB,MAAM,CAAC,SAAP,GAAmB,CAAC,UAAU,CAAX,CAAtC,EAAuD,MAAM,CAAC,SAAP,GAAmB,OAA1E,CADR;AAAA,gBAEA,cAAc,SAAC,GAAD;AACZ;AAAA,6BAAW;AAAA,0BACT;AAAA,2BAAK,uBAAC,UAAU,CAAE,gBAAZ,yCAAoC,CAAE,gBAAtC,uCAA0D,CAAE,gBAA7D,CAAoE,CAAC,KAArE,CAA2E,GAA3E,CAAgF,GAArF;AAAA,sBACA,SAAS,OADT;AAAA,sBAEA,OAAO,KAFP;qBADS;mBAAX,EADY;gBAAA,CAFd;AAAA,gBASA,UAAU,CAAC,SAAX,GAAuB,WATvB;AAAA,gBAUA,UAAU,CAAC,OAAX,GAAqB,SAAC,CAAD;AACnB,wBAAM,CAAC,KAAP;AAAA,kBACA,WAAY,OAAO,CAAC,IAAR,CAAa,MAAb,EAAqB,CAAC,CAAC,CAAC,MAAF,IAAY,CAAC,CAAC,UAAf,CAA0B,CAAC,KAAhD,EAAuD,QAAvD,CADZ,CADmB;gBAAA,CAVrB;AAAA,gBAeA,UAAU,CAAC,aAAX,CAAyB,KAAzB,CAfA,CADD;cAAA,CAAD,EAkBE,YAlBF,EAHF;aAPuB;UAAA,CAAb,EAAH;QAAA,CA5JT;AAAA,QA2LA,gBAAgB;AACd;AAAA,cAAI,CAAJ;AACA,iBAAM,KAAK,MAAM,CAAC,OAAlB;AACE;AAAA,YACA,GADA,CADF;UAAA,CAFc;QAAA,CA3LhB;AAAA,QAkMA,UAAU;AACR;AAAA,cAAG,MAAM,CAAC,SAAP,KAAoB,SAAvB;AACE,gBAAG,MAAM,CAAC,IAAI,CAAC,IAAZ,IAAoB,SAAvB;AACE,oBAAM,CAAC,SAAP,GAAmB,OAAnB,CADF;aAAA,MAEK,IAAG,MAAM,CAAC,IAAI,CAAC,IAAZ,IAAoB,QAAvB;AACH,oBAAM,CAAC,SAAP,GAAmB,MAAnB,CADG;aAAA;AAGH,oBAAM,CAAC,SAAP,GAAmB,MAAnB,CAHG;aAHP;WAAA;AAAA,UAQA,OAAO,IAAI,CAAC,IAAL,CAAU,MAAM,CAAC,IAAI,CAAC,IAAZ,GAAmB,MAAM,CAAC,SAApC,CARP;AASA,cAAG,MAAM,CAAC,OAAP,KAAkB,SAArB;AACE,kBAAM,CAAC,OAAP,GAAiB,CAAC,CAAC,KAAF,CAAQ,IAAR,CAAjB;AACA,gBAAuB,MAAM,CAAC,OAAP,GAAiB,EAAxC;AAAA,oBAAM,CAAC,OAAP,GAAiB,EAAjB;aAFF;WATA;AAAA,UAaA,aAAoB,QAAQ,CAAX,GAAkB,CAAlB,GAAyB,IAb1C;AAcA,cAA+B,MAAM,CAAC,OAAP,GAAiB,UAAhD;AAAA,kBAAM,CAAC,OAAP,GAAiB,UAAjB;WAdA;AAAA,UAeA,eAfA,CADQ;QAAA,CAlMV;AAAA,QAoNA,SApNA;AAqNA,eAAO,MAAP,CAtNF;OAAA;eAwNE,OAAO,CAAC,IAAR,CAAa,gEAAb,EAxNF;OArBF;KAD8B;EAAA,CAAxB,GAgPN,MAj+BF;;AAm+BA;AAAA;;;;;;;;KAn+BA;;AAAA,kBA4+BA,SAAQ,SAAC,MAAD;AACN;AAAA,QAAqE,IAAC,MAAtE;AAAA,aAAO,CAAC,IAAR,CAAa,4BAAyB,CAAC,IAAI,CAAC,SAAL,CAAe,MAAf,CAAD,CAAzB,GAAiD,IAA9D;KAAA;AAAA,IACA,MAAM,MAAN,EAAc,KAAK,CAAC,QAAN,CAAe,KAAK,CAAC,KAAN,CAAY,MAAZ,EAAoB,MAApB,CAAf,CAAd,CADA;AAGA,QAAG,IAAC,YAAD,EAAH;AACE,UAAC,KAAD,CAAM,MAAN;AACA,UAAG,MAAM,CAAC,QAAV;AACE,cAAM,CAAC,IAAP,CAAY,IAAC,YAAW,CAAC,gBAAzB,EAA2C,IAAI,IAAJ,CAA3C,EADF;OADA;AAIA,UAAG,MAAM,CAAC,QAAV;AACE,gBAAQ,IAAC,WAAU,CAAC,IAAZ,CAAiB,IAAC,OAAlB,CAAR;AACA,YAAG,KAAK,CAAC,KAAN,KAAgB,CAAnB;AACE,iBAAO,IAAP;AAAA,UACA,KAAK,CAAC,OAAN,CAAc,SAAC,IAAD;mBAAU,IAAI,CAAC,MAAL,CAAY,IAAZ,EAAV;UAAA,CAAd,CADA,CADF;SADA;AAAA,QAIA,IAAC,WAAU,CAAC,MAAZ,CAAmB,IAAC,OAApB,CAJA,CADF;OALF;KAHA;AAcA,WAAO,IAAP,CAfM;EAAA,CA5+BR;;AA6/BA;AAAA;;;;;;;;KA7/BA;;AAAA,kBAsgCA,SAAW,MAAM,CAAC,QAAV,GAAwB,SAAC,IAAD;AAC9B,QAAsD,IAAC,MAAvD;AAAA,aAAO,CAAC,GAAR,CAAY,4BAA0B,IAAI,CAAC,GAA/B,GAAmC,IAA/C;KAAA;AACA,QAAG,IAAI,CAAC,QAAL,IAAkB,EAAK,CAAC,OAAF,CAAU,IAAI,CAAC,QAAf,CAAzB;AACE,OAAC,CAAC,IAAF,CAAO,IAAI,CAAC,QAAZ,EAAsB,SAAC,OAAD;eAAa,MAAM;iBACvC,EAAE,CAAC,MAAH,CAAU,OAAO,CAAC,IAAlB,EAAwB,IAAxB,EADuC;QAAA,CAAN,EAAb;MAAA,CAAtB,EADF;KADA;AAAA,IAIA,EAAE,CAAC,MAAH,CAAU,IAAI,CAAC,IAAf,EAAqB,IAArB,CAJA;AAKA,WAAO,IAAP,CAN8B;EAAA,CAAxB,GAOH,MA7gCL;;AAAA,kBAghCA,OAAS,MAAM,CAAC,QAAV,GAAwB,SAAC,IAAD;AAC5B;AAAA,QAA+F,IAAC,MAAhG;AAAA,aAAO,CAAC,IAAR,CAAa,8BAA4B,IAAI,CAAC,OAAO,CAAC,WAAzC,GAAqD,0BAAlE;KAAA;AAAA,IACA,OAAO,mBADP;AAAA,IAEA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,GAAxB,EACE;AAAA,wBAAkB,IAAI,CAAC,MAAvB;AAAA,MACA,gBAAkB,YADlB;KADF,CAFA;WAKA,IAAI,CAAC,QAAQ,CAAC,GAAd,CAAkB,IAAlB,EAN4B;EAAA,CAAxB,GAOD,MAvhCL;;AAyhCA;AAAA;;;;;;;;KAzhCA;;AAAA,kBAkiCA,WAAa,MAAM,CAAC,QAAV,GAAwB,SAAC,IAAD,EAAO,OAAP;AAChC;;MADuC,UAAU;KACjD;AAAA,QAAqF,IAAC,MAAtF;AAAA,aAAO,CAAC,IAAR,CAAa,8BAA4B,IAAI,CAAC,OAAO,CAAC,WAAzC,GAAqD,IAArD,GAAyD,OAAzD,GAAiE,IAA9E;KAAA;AAAA,IACA,eAAe,KADf;AAEA,QAAG,KAAK,UAAR;AACE,UAAG,IAAC,YAAJ;AACE,YAAG,CAAC,CAAC,GAAF,CAAM,IAAC,YAAP,EAAoB,UAApB,KAAoC,CAAC,CAAC,GAAF,CAAM,IAAC,YAAW,CAAC,QAAnB,EAA6B,OAA7B,CAAvC;AACE,oBAAU,IAAC,YAAW,CAAC,QAAS,SAAhC,CADF;SAAA;AAGE,oBAAU,IAAC,YAAX,CAHF;SADF;OAAA;AAME,kBAAU,KAAV,CANF;OADF;KAFA;AAWA,QAAG,IAAC,UAAJ;AACE,gBACE;AAAA,cAAS,IAAC,YAAF,GAAc,GAAd,GAAiB,IAAI,CAAC,MAAM,CAAC,IAArC;OADF,CADF;KAXA;AAeA,QAAG,YAAe,EAAK,CAAC,QAAF,CAAW,OAAX,CAAtB;AACE,aAAO,IAAC,KAAD,CAAM,IAAN,CAAP,CADF;KAAA,MAEK,IAAG,IAAC,YAAJ;AACH,aAAO,IAAP;AAEA,UAAG,IAAC,kBAAD,IAAuB,CAAC,CAAC,UAAF,CAAa,IAAC,kBAAd,CAA1B;AACE,iBAAS,IAAC,kBAAD,CAAmB,IAAnB,EAAyB,IAAC,YAA1B,CAAT;AACA,YAAG,WAAU,IAAb;AACE,iBADF;SAFF;OAFA;AAOA,UAAG,IAAC,iBAAJ;AACE,iBAAQ,iBAAgB,CAAC,IAAlB,CAAuB,CAAC,CAAC,MAAF,CAAS,IAAT,EAAe,IAAC,QAAD,CAAS,IAAT,CAAf,CAAvB,EAAuD,IAAC,YAAxD,CAAP;AACE,iBAAO,IAAC,KAAD,CAAM,IAAN,CAAP,CADF;SADF;OAPA;aAWA,EAAE,CAAC,IAAH,CAAQ,OAAO,CAAC,IAAhB,EAAsB,SAAC,OAAD,EAAU,KAAV;eAAoB,MAAM;AAC9C;AAAA,cAAG,WAAW,MAAS,CAAC,MAAN,EAAlB;AACE,mBAAO,IAAI,CAAC,IAAL,CAAU,IAAV,CAAP,CADF;WAAA;AAAA,UAGA,YAAe,IAAI,CAAC,OAAL,CAAa,KAAb,CAHf;AAIA,cAAiC,SAAS,CAAC,IAAV,KAAoB,OAAO,CAAC,IAA5B,IAAqC,KAAQ,CAAC,cAA/E;AAAA,mBAAO,CAAC,IAAR,GAAe,SAAS,CAAC,IAAzB;WAJA;AAKA,cAAwB,SAAS,CAAC,IAAV,KAAoB,OAAO,CAAC,IAA5B,IAAqC,IAAI,CAAC,cAAlE;AAAA,2BAAe,KAAf;WALA;AAAA,UAMA,WAAe,KANf;AAAA,UAOA,WAAe,KAPf;AASA,cAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAlB,IAA+B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAlB,KAA8B,MAAhE;AACE,8BAAkB,cAAlB,CADF;WAAA;AAGE,8BAAkB,UAAlB,CAHF;WATA;AAAA,UAcA,kBAAsB,gBAAa,CAAC,mBAAmB,IAAI,CAAC,WAAW,CAAC,IAApC,CAAD,CAAb,GAAwD,uBAAxD,GAA8E,CAAC,mBAAmB,IAAI,CAAC,WAAW,CAAC,IAApC,CAAD,CAA9E,GAAyH,MAd/I;AAAA,UAeA,sBAAsB,eAftB;AAAA,UAiBA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,cAAxB,EAAwC,OAAO,CAAC,IAAhD,CAjBA;AAAA,UAkBA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,qBAAxB,EAA+C,kBAAkB,eAAlB,GAAoC,mBAAnF,CAlBA;AAAA,UAmBA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,eAAxB,EAAyC,OAAzC,CAnBA;AAoBA,sFAAkH,CAAE,WAA7B,oBAAvF;AAAA,gBAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,eAAxB,4EAAoE,CAAE,WAA7B,oBAAzC;WApBA;AAAA,UAqBA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,YAAxB,EAAsC,YAAtC,CArBA;AAuBA,cAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAxB;AACE,uBAAW,IAAX;AAAA,YACA,QAAW,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,KAA3B,CAAiC,yBAAjC,CADX;AAAA,YAEA,QAAW,SAAS,KAAM,GAAf,CAFX;AAAA,YAGA,MAAW,SAAS,KAAM,GAAf,CAHX;AAIA,gBAAG,MAAM,GAAN,CAAH;AACE,oBAAS,OAAO,CAAC,IAAR,GAAe,CAAxB,CADF;aAJA;AAAA,YAMA,OAAW,MAAM,KANjB,CADF;WAAA;AASE,oBAAW,CAAX;AAAA,YACA,MAAW,OAAO,CAAC,IAAR,GAAe,CAD1B;AAAA,YAEA,OAAW,OAAO,CAAC,IAFnB,CATF;WAvBA;AAoCA,cAAG,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAlB,IAA2B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAlB,KAA0B,MAAtD,CAAf;AACE,uBAAW;AAAA,cAAC,YAAD;AAAA,cAAQ,QAAR;aAAX;AACA,gBAAG,MAAM,KAAN,KAAiB,MAAI,CAAM,GAAN,CAAxB;AACE,sBAAQ,CAAC,KAAT,GAAiB,MAAM,IAAvB;AAAA,cACA,QAAQ,CAAC,GAAT,GAAiB,GADjB,CADF;aADA;AAIA,gBAAG,MAAI,CAAM,KAAN,CAAJ,IAAqB,MAAM,GAAN,CAAxB;AACE,sBAAQ,CAAC,KAAT,GAAiB,KAAjB;AAAA,cACA,QAAQ,CAAC,GAAT,GAAiB,QAAQ,IADzB,CADF;aAJA;AAQA,gBAAoC,CAAC,QAAQ,IAAT,KAAkB,OAAO,CAAC,IAA9D;AAAA,sBAAQ,CAAC,GAAT,GAAe,OAAO,CAAC,IAAR,GAAe,CAA9B;aARA;AAAA,YASA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,QAAxB,EAAkC,SAAlC,CATA;AAAA,YAUA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,SAAxB,EAAuC,SAAK,EAAC,SAAD,GAAY,OAAK,KAAtB,CAA4B,CAAC,WAA7B,EAAvC,CAVA;AAAA,YAWA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,eAAxB,EAAyC,uCAAzC,CAXA;AAaA,gBAAG,IAAI,CAAC,MAAL,IAAgB,CAAC,QAAQ,CAAC,KAAT,IAAkB,CAAC,OAAO,CAAC,IAAR,GAAe,CAAhB,CAAlB,IAAwC,QAAQ,CAAC,GAAT,GAAe,CAAC,OAAO,CAAC,IAAR,GAAe,CAAhB,CAAxD,CAAnB;AACE,6BAAe,KAAf,CADF;aAAA;AAGE,6BAAe,KAAf,CAHF;aAdF;WAAA;AAmBE,gBAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,eAAxB,EAAyC,IAAI,CAAC,YAA9C;AAAA,YACA,eAAe,KADf,CAnBF;WApCA;AAAA,UA0DA,qBAAqB,SAAC,KAAD;AACnB,gBAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,GAAxB;mBACA,IAAI,CAAC,QAAQ,CAAC,GAAd,CAAkB,KAAK,CAAC,QAAN,EAAlB,EAFmB;UAAA,CA1DrB;AA8DA,kBAAO,YAAP;AAAA,iBACO,KADP;AAEI,kBAAwG,IAAI,CAAC,KAA7G;AAAA,uBAAO,CAAC,IAAR,CAAa,8BAA4B,OAAO,CAAC,IAApC,GAAyC,IAAzC,GAA6C,OAA7C,GAAqD,mCAAlE;eAAA;AAAA,cACA,OAAO,0BADP;AAAA,cAEA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,GAAxB,EACE;AAAA,gCAAkB,YAAlB;AAAA,gBACA,iBAAkB,UADlB;AAAA,gBAEA,kBAAkB,IAAI,CAAC,MAFvB;eADF,CAFA;AAAA,cAMA,IAAI,CAAC,QAAQ,CAAC,GAAd,CAAkB,IAAlB,CANA;AAOA,oBATJ;AAAA,iBAUO,KAVP;AAWI,qBAAO,IAAI,CAAC,IAAL,CAAU,IAAV,CAAP;AACA,oBAZJ;AAAA,iBAaO,KAbP;AAcI,kBAA+G,IAAI,CAAC,KAApH;AAAA,uBAAO,CAAC,IAAR,CAAa,8BAA4B,OAAO,CAAC,IAApC,GAAyC,IAAzC,GAA6C,OAA7C,GAAqD,0CAAlE;eAAA;AAAA,cACA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,GAAxB,EACE;AAAA,iCAAiB,aAAW,OAAO,CAAC,IAApC;eADF,CADA;AAAA,cAGA,IAAI,CAAC,QAAQ,CAAC,GAAd,EAHA;AAIA,oBAlBJ;AAAA,iBAmBO,KAnBP;AAoBI,kBAA+E,IAAI,CAAC,KAApF;AAAA,uBAAO,CAAC,IAAR,CAAa,8BAA4B,OAAO,CAAC,IAApC,GAAyC,IAAzC,GAA6C,OAA7C,GAAqD,UAAlE;eAAA;AAAA,cACA,SAAS,EAAE,CAAC,gBAAH,CAAoB,OAAO,CAAC,IAA5B,CADT;AAAA,cAEA,MAAM,CAAC,EAAP,CAAU,MAAV,EAAkB;uBAAA;AAChB,sBAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,GAAxB;AACA,sBAAG,IAAI,CAAC,QAAR;2BACE,MAAM,CAAC,IAAP,CAAiB,aAAS;AAAA,sBAAC,KAAK,IAAI,CAAC,QAAX;AAAA,sBAAqB,WAAW,IAAI,CAAC,SAArC;qBAAT,CAAjB,CACC,CAAC,IADF,CACO,IAAI,CAAC,QADZ,EADF;mBAAA;2BAIE,MAAM,CAAC,IAAP,CAAY,IAAI,CAAC,QAAjB,EAJF;mBAFgB;gBAAA;cAAA,QAAlB,CAOC,CAAC,EAPF,CAOK,OAPL,EAOc,kBAPd,CAFA;AAUA,oBA9BJ;AAAA,iBA+BO,KA/BP;AAgCI,kBAA+E,IAAI,CAAC,KAApF;AAAA,uBAAO,CAAC,IAAR,CAAa,8BAA4B,OAAO,CAAC,IAApC,GAAyC,IAAzC,GAA6C,OAA7C,GAAqD,UAAlE;eAAA;AAAA,cACA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,eAAxB,EAAyC,WAAS,QAAQ,CAAC,KAAlB,GAAwB,GAAxB,GAA2B,QAAQ,CAAC,GAApC,GAAwC,GAAxC,GAA2C,OAAO,CAAC,IAA5F,CADA;AAAA,cAEA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,SAAxB,EAAmC,SAAnC,CAFA;AAAA,cAGA,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,mBAAxB,EAA6C,SAA7C,CAHA;AAIA,kBAAG,IAAI,CAAC,QAAR;AACE,yBAAS,EAAE,CAAC,gBAAH,CAAoB,OAAO,CAAC,IAA5B,EAAkC;AAAA,kBAAC,OAAO,QAAQ,CAAC,KAAjB;AAAA,kBAAwB,KAAK,QAAQ,CAAC,GAAtC;iBAAlC,CAAT;AAAA,gBACA,MAAM,CAAC,EAAP,CAAU,MAAV,EAAkB;yBAAG,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,GAAxB,EAAH;gBAAA,CAAlB,CACC,CAAC,EADF,CACK,OADL,EACc,kBADd,CAEC,CAAC,EAFF,CAEK,KAFL,EAEY;yBAAG,IAAI,CAAC,QAAQ,CAAC,GAAd,GAAH;gBAAA,CAFZ,CAGC,CAAC,IAHF,CAGY,aAAS;AAAA,kBAAC,KAAK,IAAI,CAAC,QAAX;AAAA,kBAAqB,WAAW,IAAI,CAAC,SAArC;iBAAT,CAHZ,CAIC,CAAC,IAJF,CAIO,IAAI,CAAC,QAJZ,CADA,CADF;eAAA;AAQE,yBAAS,EAAE,CAAC,gBAAH,CAAoB,OAAO,CAAC,IAA5B,EAAkC;AAAA,kBAAC,OAAO,QAAQ,CAAC,KAAjB;AAAA,kBAAwB,KAAK,QAAQ,CAAC,GAAtC;iBAAlC,CAAT;AAAA,gBACA,MAAM,CAAC,EAAP,CAAU,MAAV,EAAkB;yBAAG,IAAI,CAAC,QAAQ,CAAC,SAAd,CAAwB,GAAxB,EAAH;gBAAA,CAAlB,CACC,CAAC,EADF,CACK,OADL,EACc,kBADd,CAEC,CAAC,EAFF,CAEK,KAFL,EAEY;yBAAG,IAAI,CAAC,QAAQ,CAAC,GAAd,GAAH;gBAAA,CAFZ,CAGC,CAAC,IAHF,CAGO,IAAI,CAAC,QAHZ,CADA,CARF;eAJA;AAiBA,oBAjDJ;AAAA,WA/D8C;QAAA,CAAN,EAApB;MAAA,CAAtB,EAZG;KAAA;AA8HH,aAAO,IAAC,KAAD,CAAM,IAAN,CAAP,CA9HG;KAlB2B;EAAA,CAAxB,GAiJL,MAnrCL;;AAqrCA;AAAA;;;;;;;;;;KArrCA;;AAAA,kBAgsCA,OAAM,SAAC,OAAD,EAAU,OAAV,EAAgC,GAAhC;;MAAU,UAAU;KACxB;;MADoC,MAAM;KAC1C;AAAA,QAA0C,IAAC,MAA3C;AAAA,aAAO,CAAC,IAAR,CAAa,yBAAb;KAAA;AACA,QAAG,CAAC,CAAC,QAAF,CAAW,OAAX,CAAH;AACE,gBAAU,OAAV;AAAA,MACA,UAAU,IADV,CADF;KADA;AAIA,QAAa,YAAgB,KAAK,YAAlC;AAAA,aAAO,EAAP;KAJA;AAKA,WAAO,aAAc,WAAW,IAAC,YAA1B,EAAwC,OAAxC,EAAiD,IAAC,UAAlD,CAAP,CANI;EAAA,CAhsCN;;eAAA;;IApGF;;AA4yCA;AAAA;;;;;;;;;;GA5yCA;;AAAA,YAuzCA,GAAe,SAAC,OAAD,EAAU,OAAV,EAAgC,GAAhC;AACb;;IADuB,UAAU;GACjC;;IAD6C,MAAM;GACnD;AAAA,SAAO,yBAAyB,CAAC,QAAQ,CAAC,OAAnC,CAA2C,MAA3C,EAAmD,EAAnD,CAAP;AAEA,gEAAqB,CAAE,yBAApB,GAA6B,CAAhC;AACE,UAAM,MAAM,OAAO,CAAC,SAApB,CADF;GAAA;AAGE,UAAM,EAAN,CAHF;GAFA;AAOA,MAAG,GAAH;AACE,WAAO,OAAO,CAAG,OAAO,CAAC,cAAT,GAAwB,GAAxB,GAA2B,OAA3B,GAAmC,GAAnC,GAAsC,OAAO,CAAC,GAA9C,GAAoD,GAAtD,CAAd,CADF;GAAA;AAGE,WAAO,OAAO,CAAG,OAAO,CAAC,cAAT,GAAwB,GAAxB,GAA2B,OAAO,CAAC,eAAnC,GAAmD,GAAnD,GAAsD,OAAO,CAAC,GAA9D,GAAkE,GAAlE,GAAqE,OAArE,GAA6E,GAA7E,GAAgF,OAAO,CAAC,GAAxF,GAA8F,GAAhG,CAAd,CAHF;GARa;AAAA,CAvzCf;;AAo0CA,IAAG,MAAM,CAAC,QAAV;AACE;AAAA;;;;;;;;;KAAA;AAAA,EAUA,QAAQ,CAAC,cAAT,CAAwB,SAAxB,EAAmC,SAAC,OAAD,EAAU,OAAV;AACjC;AAAA,QAAoB,YAAe,EAAK,CAAC,QAAF,CAAW,OAAX,CAAvC;AAAA,aAAO,MAAP;KAAA;AAAA,IACA,UAAa,YAAe,EAAK,CAAC,QAAF,CAAW,OAAX,CAAtB,GAA+C,UAA/C,GAA+D,OADzE;AAEA,QAAG,OAAO,CAAC,GAAX;AACE,aAAO,aAAa,OAAb,EAAsB,OAAtB,EAA+B,EAAC,CAAC,+EAAqB,CAAE,QAAS,oCAAjE,CAAP,CADF;KAAA;AAGE,aAAO,EAAP,CAHF;KAHiC;EAAA,CAAnC,CAVA,CADF;CAp0CA","file":"/packages/ostrio_files.js","sourcesContent":["if Meteor.isServer\n  ###\n  @description Require \"fs-extra\" npm package\n  ###\n  fs       = Npm.require 'fs-extra'\n  request  = Npm.require 'request'\n  Throttle = Npm.require 'throttle'\n  util     = Npm.require 'util'\n  NOOP     = -> return\n\n  ###\n  @var {object} bound - Meteor.bindEnvironment aka Fiber wrapper\n  ###\n  bound = Meteor.bindEnvironment (callback) -> return callback()\n\n###\n@private\n@object\n@name _insts\n@description Object of Meteor.Files instances\n###\n_insts = {}\n\n###\n@private\n@function\n@name rcp\n@param {Object} obj - Initial object\n@description Create object with only needed props\n###\nrcp = (obj) ->\n  o =\n    currentFile:    obj.currentFile\n    search:         obj.search\n    storagePath:    obj.storagePath\n    collectionName: obj.collectionName\n    downloadRoute:  obj.downloadRoute\n    chunkSize:      obj.chunkSize\n    debug:          obj.debug\n    _prefix:        obj._prefix\n    cacheControl:   obj.cacheControl\n    versions:       obj.versions\n  return o\n\n###\n@private\n@function\n@name cp\n@param {Object} to   - Destanation\n@param {Object} from - Source\n@description Copy-Paste only needed props from one to another object\n###\ncp = (to, from) ->\n  to.currentFile    = from.currentFile\n  to.search         = from.search\n  to.storagePath    = from.storagePath\n  to.collectionName = from.collectionName\n  to.downloadRoute  = from.downloadRoute\n  to.chunkSize      = from.chunkSize\n  to.debug          = from.debug\n  to._prefix        = from._prefix\n  to.cacheControl   = from.cacheControl\n  to.versions       = from.versions\n  return to\n\n###\n@isomorphic\n@class\n@namespace Meteor\n@name Files\n@param config           {Object}   - [Both]   Configuration object with next properties:\n@param config.debug     {Boolean}  - [Both]   Turn on/of debugging and extra logging\n@param config.schema    {Object}   - [Both]   Collection Schema\n@param config.public    {Boolean}  - [Both]   Store files in folder accessible for proxy servers, for limits, and more - read docs\n@param config.strict    {Boolean}  - [Server] Strict mode for partial content, if is `true` server will return `416` response code, when `range` is not specified, otherwise server return `206`\n@param config.protected {Function} - [Both]   If `true` - files will be served only to authorized users, if `function()` - you're able to check visitor's permissions in your own way function's context has:\n  - `request` - On server only\n  - `response` - On server only\n  - `user()`\n  - `userId`\n@param config.chunkSize      {Number}  - [Both] Upload chunk size, default: 524288 bytes (0,5 Mb)\n@param config.permissions    {Number}  - [Server] Permissions which will be set to uploaded files, like: `511` or `0o755`\n@param config.storagePath    {String}  - [Server] Storage path on file system\n@param config.cacheControl   {String}  - [Server] Default `Cache-Control` header\n@param config.throttle       {Number}  - [Server] bps throttle threshold\n@param config.downloadRoute  {String}  - [Both]   Server Route used to retrieve files\n@param config.collectionName {String}  - [Both]   Collection name\n@param config.namingFunction {Function}- [Both]   Function which returns `String`\n@param config.integrityCheck {Boolean} - [Server] Check file's integrity before serving to users\n@param config.onAfterUpload  {Function}- [Server] Called right after file is ready on FS. Use to transfer file somewhere else, or do other thing with file directly\n@param config.onBeforeUpload {Function}- [Both]   Function which executes on server after receiving each chunk and on client right before beginning upload. Function context is `File` - so you are able to check for extension, mime-type, size and etc.\nreturn `true` to continue\nreturn `false` or `String` to abort upload\n@param config.allowClientCode  {Boolean}  - [Both]   Allow to run `remove` from client\n@param config.downloadCallback {Function} - [Server] Callback triggered each time file is requested, return truthy value to continue download, or falsy to abort\n@param config.interceptDownload {Function} - [Server] Intercept download request, so you can serve file from third-party resource, arguments {http: {request: {...}, response: {...}}, fileRef: {...}}\n@param config.onbeforeunloadMessage {String|Function} - [Client] Message shown to user when closing browser's window or tab while upload process is running\n@description Create new instance of Meteor.Files\n###\nclass Meteor.Files\n  constructor: (config) ->\n    {@storagePath, @collectionName, @downloadRoute, @schema, @chunkSize, @namingFunction, @debug, @onbeforeunloadMessage, @permissions, @allowClientCode, @onBeforeUpload, @integrityCheck, @protected, @public, @strict, @downloadCallback, @cacheControl, @throttle, @onAfterUpload, @interceptDownload} = config if config\n\n    self               = @\n    cookie             = new Cookies()\n    @debug            ?= false\n    @public           ?= false\n    @protected        ?= false\n    @chunkSize        ?= 1024*512\n    @chunkSize         = Math.floor(@chunkSize / 8) * 8\n    @downloadRoute    ?= if @public then \"/uploads/#{@collectionName}\" else '/cdn/storage'\n    @downloadRoute     = @downloadRoute.replace /\\/$/, ''\n    @collectionName   ?= 'MeteorUploadFiles'\n    @namingFunction   ?= -> Random.id()\n    @onBeforeUpload   ?= false\n    @allowClientCode  ?= true\n    @interceptDownload?= false\n\n    if Meteor.isClient\n      @onbeforeunloadMessage ?= 'Upload in a progress... Do you want to abort?'\n      if Worker\n        @ReaderWorker = new Worker '/packages/ostrio_files/worker.js'\n      delete @strict\n      delete @throttle\n      delete @storagePath\n      delete @permissions\n      delete @cacheControl\n      delete @onAfterUpload\n      delete @integrityCheck\n      delete @downloadCallback\n      delete @interceptDownload\n      if @protected\n        if not cookie.has('meteor_login_token') and Meteor._localStorage.getItem('Meteor.loginToken')\n          cookie.set 'meteor_login_token', Meteor._localStorage.getItem('Meteor.loginToken'), null, '/'\n\n      check @onbeforeunloadMessage, Match.OneOf String, Function\n    else\n      @strict           ?= true\n      @throttle         ?= false\n      @permissions      ?= 0o755\n      @cacheControl     ?= 'public, max-age=31536000, s-maxage=31536000'\n      @onAfterUpload    ?= false\n      @integrityCheck   ?= true\n      @downloadCallback ?= false\n      @storagePath      ?= if @public then \"../web.browser/app/uploads/#{@collectionName}\" else \"assets/app/uploads/#{@collectionName}\"\n      @storagePath       = @storagePath.replace /\\/$/, ''\n\n      check @strict, Boolean\n      check @throttle, Match.OneOf false, Number\n      check @permissions, Number\n      check @storagePath, String\n      check @cacheControl, String\n      check @onAfterUpload, Match.OneOf false, Function\n      check @integrityCheck, Boolean\n      check @downloadCallback, Match.OneOf false, Function\n      check @interceptDownload, Match.OneOf false, Function\n\n    if not @schema\n      @schema =\n        size: type: Number\n        name: type: String\n        type: type: String\n        path: type: String\n        isVideo: type: Boolean\n        isAudio: type: Boolean\n        isImage: type: Boolean\n        _prefix: type: String\n        extension:\n          type: String\n          optional: true\n        _storagePath: type: String\n        _downloadRoute: type: String\n        _collectionName: type: String\n        meta:\n          type: Object\n          blackbox: true\n          optional: true\n        userId:\n          type: String\n          optional: true\n        updatedAt: \n          type: Date\n          autoValue: -> new Date()\n        versions:\n          type: Object\n          blackbox: true\n\n    check @debug, Boolean\n    check @schema, Object\n    check @public, Boolean\n    check @protected, Match.OneOf Boolean, Function\n    check @chunkSize, Number\n    check @downloadRoute, String\n    check @collectionName, String\n    check @namingFunction, Function\n    check @onBeforeUpload, Match.OneOf false, Function\n    check @allowClientCode, Boolean\n\n    if @public and @protected\n      throw new Meteor.Error 500, \"[Meteor.Files.#{@collectionName}]: Files can not be public and protected at the same time!\"\n    \n    @cursor        = null\n    @search        = {}\n    @collection    = new Mongo.Collection @collectionName\n    @currentFile   = null\n\n    @collection.attachSchema @schema\n    @collection.deny\n      insert: -> true\n      update: -> true\n      remove: -> true\n    \n    @_prefix = SHA256 @collectionName + @downloadRoute\n    _insts[@_prefix] = @\n\n    @checkAccess = (http) ->\n      if self.protected\n        user = false\n        userFuncs = self.getUser http\n        {user, userId} = userFuncs\n        user = user()\n\n        if _.isFunction self.protected\n          result = if http then self.protected.call(_.extend(http, userFuncs), self.currentFile or null) else self.protected.call userFuncs, self.currentFile or null\n        else\n          result = !!user\n\n        if (http and result is true) or not http\n          return true\n        else\n          rc = if _.isNumber(result) then result else 401\n          console.warn '[Meteor.Files.checkAccess] WARN: Access denied!' if self.debug\n          if http\n            text = 'Access denied!'\n            http.response.writeHead rc,\n              'Content-Length': text.length\n              'Content-Type':   'text/plain'\n            http.response.end text\n          return false\n      else\n        return true\n\n    @methodNames =\n      MeteorFileAbort:  \"MeteorFileAbort#{@_prefix}\"\n      MeteorFileWrite:  \"MeteorFileWrite#{@_prefix}\"\n      MeteorFileUnlink: \"MeteorFileUnlink#{@_prefix}\"\n\n    if Meteor.isServer\n      WebApp.connectHandlers.use (request, response, next) ->\n        unless self.public\n          if !!~request._parsedUrl.path.indexOf \"#{self.downloadRoute}/#{self.collectionName}\"\n            uri = request._parsedUrl.path.replace \"#{self.downloadRoute}/#{self.collectionName}\", ''\n            if uri.indexOf('/') is 0\n              uri = uri.substring 1\n\n            uris = uri.split '/'\n            if uris.length is 3\n              params = \n                query: if request._parsedUrl.query then JSON.parse('{\"' + decodeURI(request._parsedUrl.query).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g,'\":\"') + '\"}') else {}\n                _id: uris[0]\n                version: uris[1]\n                name: uris[2]\n              http = {request, response, params}\n              self.findOne(uris[0]).download.call(self, http, uris[1]) if self.checkAccess http\n            else\n              next()\n          else\n            next()\n        else\n          if !!~request._parsedUrl.path.indexOf \"#{self.downloadRoute}\"\n            uri = request._parsedUrl.path.replace \"#{self.downloadRoute}\", ''\n            if uri.indexOf('/') is 0\n              uri = uri.substring 1\n\n            uris = uri.split '/'\n            if uris.length is 1\n              params = \n                query: if request._parsedUrl.query then JSON.parse('{\"' + decodeURI(request._parsedUrl.query).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g,'\":\"') + '\"}') else {}\n                file: uris[0]\n              http = {request, response, params}\n\n              if !!~params.file.indexOf '-'\n                version = params.file.split('-')[0]\n                self.download.call self, http, version\n              else\n                self._404 http\n            else\n              next()\n          else\n            next()\n\n      _methods = {}\n      _methods[self.methodNames.MeteorFileUnlink] = (inst) ->\n        check inst, Object\n        console.info '[Meteor.Files] [Unlink Method]' if self.debug\n        if self.allowClientCode\n          self.remove.call cp(_insts[inst._prefix], inst), inst.search\n        else\n          throw new Meteor.Error 401, '[Meteor.Files] [remove] Run code from client is not allowed!'\n\n      _methods[self.methodNames.MeteorFileWrite] = (opts) ->\n        @unblock()\n        check opts, {\n          eof:        Match.Optional Boolean\n          meta:       Match.Optional Object\n          file:       Object\n          fileId:     String\n          binData:    Match.Optional String\n          chunkId:    Match.Optional Number\n          fileLength: Number\n        }\n\n        opts.eof     ?= false\n        opts.meta    ?= {}\n        opts.binData ?= 'EOF'\n        opts.chunkId ?= -1\n\n        console.info \"[Meteor.Files] [Write Method] Got ##{opts.chunkId}/#{opts.fileLength} chunks, dst: #{opts.file.name or opts.file.fileName}\" if self.debug\n\n        if self.onBeforeUpload and _.isFunction self.onBeforeUpload\n          isUploadAllowed = self.onBeforeUpload.call {file: opts.file}, opts.file\n          if isUploadAllowed isnt true\n            throw new Meteor.Error(403, if _.isString(isUploadAllowed) then isUploadAllowed else '@onBeforeUpload() returned false')\n\n        fileName = self.getFileName opts.file\n        {extension, extensionWithDot} = self.getExt fileName\n\n        pathName = if self.public then \"#{self.storagePath}/original-#{opts.fileId}\" else \"#{self.storagePath}/#{opts.fileId}\"\n        path     = if self.public then \"#{self.storagePath}/original-#{opts.fileId}#{extensionWithDot}\" else \"#{self.storagePath}/#{opts.fileId}#{extensionWithDot}\"\n        pathPart = if opts.fileLength > 1 then \"#{pathName}_#{opts.chunkId}#{extensionWithDot}\" else null\n\n        result = _.extend self.dataToSchema(_.extend(opts.file, {path, extension, name: fileName, meta: opts.meta})), {_id: opts.fileId}\n\n        action = (cb) -> Meteor.defer ->\n          if opts.eof\n            binary = opts.binData\n          else\n            binary = new Buffer opts.binData, 'base64'\n          tries  = 0\n\n          concatChunks = (num, files, cb) ->\n            sindex = files.indexOf \"#{opts.fileId}_1#{extensionWithDot}\"\n            files.splice sindex, 1 if !!~sindex\n            findex = files.indexOf \"#{opts.fileId}_#{num}#{extensionWithDot}\"\n            if !!~findex\n              files.splice findex, 1\n            else if files.length <= 0\n              return finish cb\n            else\n              return concatChunks ++num, files, cb\n\n            _path   = \"#{pathName}_#{num}#{extensionWithDot}\"\n            _source = pathName + '_1' + extensionWithDot\n\n            fs.stat _path, (error, stats) -> bound ->\n              if error or not stats.isFile()\n                if tries >= 10\n                  cb new Meteor.Error 500, \"Chunk ##{num} is missing!\"\n                else\n                  tries++\n                  Meteor.setTimeout ->\n                    concatChunks num, files, cb\n                  , 100\n              else\n                fs.readFile _path, (error, _chunkData) -> bound ->\n                  if error\n                    cb new Meteor.Error 500, \"Can't read #{_path}\"\n                  else\n                    fs.appendFile _source, _chunkData, (error) -> bound ->\n                      if error\n                        cb new Meteor.Error 500, \"Can't append #{_path} to #{_source}\"\n                      else\n                        fs.unlink _path, NOOP\n                        if files.length <= 0\n                          fs.rename _source, path, (error) -> bound ->\n                            if error\n                              cb new Meteor.Error 500, \"Can't rename #{_source} to #{path}\"\n                            else\n                              finish cb\n                        else\n                          concatChunks ++num, files, cb\n\n          finish = (cb) ->\n            fs.chmod path, self.permissions, NOOP\n            result.type = self.getMimeType opts.file\n\n            self.collection.insert _.clone(result), (error, _id) ->\n              if error\n                cb new Meteor.Error 500, error\n              else\n                result._id = _id\n                console.info \"[Meteor.Files] [Write Method] [finish] #{fileName} -> #{path}\" if self.debug\n                self.onAfterUpload and self.onAfterUpload.call self, result\n                cb null, result\n          try\n            if opts.eof\n              if opts.fileLength > 1\n                fs.readdir self.storagePath, (error, files) -> bound ->\n                  if error\n                    cb new Meteor.Error 500, error\n                  else\n                    files = files.filter((f) -> !!~f.indexOf opts.fileId)\n                    if files.length is 1\n                      fs.rename \"#{self.storagePath}/#{files[0]}\", path, (error) -> bound ->\n                        if error\n                          cb new Meteor.Error 500, \"Can't rename #{_source} to #{path}\"\n                        else\n                          finish cb\n                    else\n                      concatChunks 2, files, cb\n              else\n                finish cb\n            else\n              if pathPart\n                _path = if opts.fileLength > 1 then \"#{pathName}_#{opts.chunkId - 1}#{extensionWithDot}\"\n                fs.stat _path, (error, stats) -> bound ->\n                  if error or not stats.isFile()\n                    fs.outputFile (pathPart or path), binary, 'binary', (error) -> bound -> \n                      cb error, result\n                  else\n                    fs.appendFile _path, binary, (error) -> bound -> \n                      fs.rename _path, \"#{pathName}_#{opts.chunkId}#{extensionWithDot}\", (error) -> bound -> \n                        cb error, result\n              else\n                fs.outputFile (pathPart or path), binary, 'binary', (error) -> bound -> cb error, result\n          catch e\n            cb e\n          return\n\n        if opts.eof\n          try\n            return Meteor.wrapAsync(action)()\n          catch e\n            console.warn \"[Meteor.Files] [Write Method] Exception:\", e if self.debug\n            throw e\n        else\n          action NOOP\n          return result\n\n      _methods[self.methodNames.MeteorFileAbort] = (opts) ->\n        check opts, {\n          fileId: String\n          fileData: Object\n          fileLength: Number\n        }\n\n        ext  = \".#{opts.fileData.ext}\"\n        path = if self.public then \"#{self.storagePath}/original-#{opts.fileId}\" else \"#{self.storagePath}/#{opts.fileId}\"\n\n        console.info \"[Meteor.Files] [Abort Method]: For #{path}\" if self.debug\n        if opts.fileLength > 1\n          i = 0\n          while i <= opts.fileLength\n            _path = \"#{path}_#{i}#{ext}\"\n            fs.stat _path, ((error, stats) -> bound =>\n              if not error and stats.isFile()\n                fs.unlink @_path, NOOP\n            ).bind({_path})\n            i++\n        Meteor.setTimeout -> \n          self.remove opts.fileId\n        , 250\n\n      Meteor.methods _methods\n\n  ###\n  Extend Meteor.Files with mime library\n  @url https://github.com/broofa/node-mime\n  @description Temporary removed from package due to unstability\n  ###\n  # fileType: if Meteor.isServer then Npm.require \"file-type\" else undefined\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name getMimeType\n  @param {Object} fileData - File Object\n  @description Returns file's mime-type\n  @returns {String}\n  ###\n  getMimeType: (fileData) ->\n    check fileData, Object\n    mime = fileData.type if fileData?.type\n    mime = 'application/octet-stream' if not mime or not _.isString mime\n    mime\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name getFileName\n  @param {Object} fileData - File Object\n  @description Returns file's name\n  @returns {String}\n  ###\n  getFileName: (fileData) ->\n    fileName = fileData.name or fileData.fileName\n    if _.isString(fileName) and fileName.length > 0\n      cleanName = (str) -> str.replace(/\\.\\./g, '').replace /\\//g, ''\n      return cleanName(fileData.name or fileData.fileName)\n    else\n      return ''\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name getUser\n  @description Returns object with `userId` and `user()` method which return user's object\n  @returns {Object}\n  ###\n  getUser: (http) ->\n    result = \n      user: -> return null\n      userId: null\n      \n    if Meteor.isServer\n      if http\n        cookie = http.request.Cookies\n        if _.has(Package, 'accounts-base') and cookie.has 'meteor_login_token'\n          user = Meteor.users.findOne 'services.resume.loginTokens.hashedToken': Accounts._hashLoginToken cookie.get 'meteor_login_token'\n          if user\n            result.user = () -> return user\n            result.userId = user._id\n    else\n      if _.has(Package, 'accounts-base') and Meteor.userId()\n        result.user = -> return Meteor.user()\n        result.userId = Meteor.userId()\n\n    return result\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name getExt\n  @param {String} FileName - File name\n  @description Get extension from FileName\n  @returns {Object}\n  ###\n  getExt: (fileName) ->\n    if !!~fileName.indexOf('.')\n      extension = fileName.split('.').pop()\n      return { ext: extension, extension, extensionWithDot: '.' + extension }\n    else\n      return { ext: '', extension: '', extensionWithDot: '' }\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name dataToSchema\n  @param {Object} data - File data\n  @description Build object in accordance with schema from File data\n  @returns {Object}\n  ###\n  dataToSchema: (data) ->\n    return {\n      name:       data.name\n      extension:  data.extension\n      path:       data.path\n      meta:       data.meta\n      type:       data.type\n      size:       data.size\n      versions:\n        original:\n          path: data.path\n          size: data.size\n          type: data.type\n          extension: data.extension\n      isVideo: !!~data.type.toLowerCase().indexOf('video')\n      isAudio: !!~data.type.toLowerCase().indexOf('audio')\n      isImage: !!~data.type.toLowerCase().indexOf('image')\n      _prefix: data._prefix or @_prefix\n      _storagePath:    data._storagePath or @storagePath\n      _downloadRoute:  data._downloadRoute or @downloadRoute\n      _collectionName: data._collectionName or @collectionName\n    }\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name srch\n  @param {String|Object} search - Search data\n  @description Build search object\n  @returns {Object}\n  ###\n  srch: (search) ->\n    if search and _.isString search\n      @search =\n        _id: search\n    else\n      @search = search or {}\n    @search\n\n  ###\n  @server\n  @function\n  @class Meteor.Files\n  @name write\n  @param {Buffer} buffer - Binary File's Buffer\n  @param {Object} opts - {fileName: '', type: '', size: 0, meta: {...}}\n  @param {Function} callback - function(error, fileObj){...}\n  @description Write buffer to FS and add to Meteor.Files Collection\n  @returns {Files} - Returns current Meteor.Files instance\n  ###\n  write: if Meteor.isServer then (buffer, opts = {}, callback) ->\n    console.info \"[Meteor.Files] [write()]\" if @debug\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n\n    if @checkAccess()\n      randFileName  = @namingFunction()\n      fileName      = if opts.name or opts.fileName then opts.name or opts.fileName else randFileName\n\n      {extension, extensionWithDot} = @getExt fileName\n\n      path      = if @public then \"#{@storagePath}/original-#{randFileName}#{extensionWithDot}\" else \"#{@storagePath}/#{randFileName}#{extensionWithDot}\"\n      \n      opts.type = @getMimeType opts\n      opts.meta = {} if not opts.meta\n      opts.size = buffer.length if not opts.size\n\n      result    = @dataToSchema\n        name:      fileName\n        path:      path\n        meta:      opts.meta\n        type:      opts.type\n        size:      opts.size\n        extension: extension\n\n      console.info \"[Meteor.Files] [write]: #{fileName} -> #{@collectionName}\" if @debug\n\n      fs.outputFile path, buffer, 'binary', (error) -> bound ->\n        if error\n          callback and callback error\n        else\n          result._id = @collection.insert _.clone result\n          callback and callback null, result\n      \n      return @\n  else\n    undefined\n\n  ###\n  @server\n  @function\n  @class Meteor.Files\n  @name load\n  @param {String} url - URL to file\n  @param {Object} opts - {fileName: '', meta: {...}}\n  @param {Function} callback - function(error, fileObj){...}\n  @description Download file, write stream to FS and add to Meteor.Files Collection\n  @returns {Files} - Return this\n  ###\n  load: if Meteor.isServer then (url, opts = {}, callback) ->\n    console.info \"[Meteor.Files] [load(#{url}, #{JSON.stringify(opts)}, callback)]\" if @debug\n    check url, String\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n\n    self          = @\n    randFileName = @namingFunction()\n    fileName     = if opts.name or opts.fileName then opts.name or opts.fileName else randFileName\n    \n    {extension, extensionWithDot} = @getExt fileName\n    path      = if @public then \"#{@storagePath}/original-#{randFileName}#{extensionWithDot}\" else \"#{@storagePath}/#{randFileName}#{extensionWithDot}\"\n    opts.meta = {} if not opts.meta\n\n    request.get(url).on('error', (error)-> bound ->\n      throw new Meteor.Error 500, \"Error on [load(#{url})]:\" + JSON.stringify error\n    ).on('response', (response) -> bound ->\n\n      console.info \"[Meteor.Files] [load] Received: #{url}\" if self.debug\n\n      result = self.dataToSchema\n        name:      fileName\n        path:      path\n        meta:      opts.meta\n        type:      opts.type or response.headers['content-type']\n        size:      opts.size or response.headers['content-length']\n        extension: extension\n\n      self.collection.insert _.clone(result), (error, fileRef) ->\n        if error\n          console.warn \"[Meteor.Files] [load] [insert] Error: #{fileName} -> #{self.collectionName}\", error if self.debug\n          callback and callback error\n        else\n          console.info \"[Meteor.Files] [load] [insert] #{fileName} -> #{self.collectionName}\" if self.debug\n          callback and callback null, fileRef\n\n    ).pipe fs.createOutputStream path\n\n    return @\n  else\n    undefined\n\n  ###\n  @server\n  @function\n  @class Meteor.Files\n  @name addFile\n  @param {String} path - Path to file\n  @param {String} path - Path to file\n  @description Add file from FS to Meteor.Files\n  @returns {Files} - Return this\n  ###\n  addFile: if Meteor.isServer then (path, opts = {}, callback) ->\n    console.info \"[Meteor.Files] [addFile(#{path})]\" if @debug\n\n    throw new Meteor.Error 403, 'Can not run [addFile] on public collection' if @public\n    check path, String\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n\n    self = @\n    fs.stat path, (error, stats) -> bound ->\n      if error\n        callback and callback error\n      else if stats.isFile()\n        fileStats = util.inspect stats\n        fileSize  = fileStats.size\n        pathParts = path.split '/'\n        fileName  = pathParts[pathParts.length - 1]\n\n        {extension, extensionWithDot} = self.getExt fileName\n\n        opts.type = 'application/*' if not opts.type\n        opts.meta = {} if not opts.meta\n        opts.size = fileSize if not opts.size\n\n        result = self.dataToSchema\n          name:         fileName\n          path:         path\n          meta:         opts.meta\n          type:         opts.type\n          size:         opts.size\n          extension:    extension\n          _storagePath: path.replace \"/#{fileName}\", ''\n\n        _cn = self.collectionName\n        self.collection.insert _.clone(result), (error, record) ->\n          if error\n            console.warn \"[Meteor.Files] [addFile] [insert] Error: #{fileName} -> #{_cn}\", error if self.debug\n            callback and callback error\n          else\n            console.info \"[Meteor.Files] [addFile] [insert]: #{fileName} -> #{_cn}\" if self.debug\n            callback and callback null, result\n      else\n        callback and callback new Meteor.Error 400, \"[Meteor.Files] [addFile(#{path})]: File does not exist\"\n\n    return @\n  else\n    undefined\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name findOne\n  @param {String|Object} search - `_id` of the file or `Object` like, {prop:'val'}\n  @description Load file\n  @returns {Files} - Return this\n  ###\n  findOne: (search) ->\n    console.info \"[Meteor.Files] [findOne(#{JSON.stringify(search)})]\" if @debug\n    check search, Match.Optional Match.OneOf Object, String\n    @srch search\n\n    if @checkAccess()\n      @currentFile = @collection.findOne @search\n      @cursor      = null\n    return @\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name find\n  @param {String|Object} search - `_id` of the file or `Object` like, {prop:'val'}\n  @description Load file or bunch of files\n  @returns {Files} - Return this\n  ###\n  find: (search) ->\n    console.info \"[Meteor.Files] [find(#{JSON.stringify(search)})]\" if @debug\n    check search, Match.Optional Match.OneOf Object, String\n    @srch search\n\n    if @checkAccess\n      @currentFile = null\n      @cursor = @collection.find @search\n    return @\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name get\n  @description Return value of current cursor or file\n  @returns {Object|[Object]}\n  ###\n  get: () ->\n    console.info '[Meteor.Files] [get()]' if @debug\n    return @cursor.fetch() if @cursor\n    return @currentFile\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name fetch\n  @description Alias for `get()` method\n  @returns {[Object]}\n  ###\n  fetch: () ->\n    console.info '[Meteor.Files] [fetch()]' if @debug\n    data = @get()\n    if not _.isArray data\n      return [data]\n    else\n      data\n\n  ###\n  @client\n  @function\n  @class Meteor.Files\n  @name insert\n  @param {Object} config - Configuration object with next properties:\n    {File|Object} file           - HTML5 `files` item, like in change event: `e.currentTarget.files[0]`\n    {Object}      meta           - Additional data as object, use later for search\n    {Boolean}     allowWebWorkers- Allow/Deny WebWorkers usage\n    {Number|dynamic} streams     - Quantity of parallel upload streams, default: 2\n    {Number|dynamic} chunkSize   - Chunk size for upload\n    {Function}    onUploaded     - Callback triggered when upload is finished, with two arguments `error` and `fileRef`\n    {Function}    onError        - Callback triggered on error in upload and/or FileReader, with two arguments `error` and `fileData`\n    {Function}    onProgress     - Callback triggered when chunk is sent, with only argument `progress`\n    {Function}    onBeforeUpload - Callback triggered right before upload is started:\n        return true to continue\n        return false to abort upload\n  @description Upload file to server over DDP\n  @url https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n  @returns {Object} with next properties:\n    {ReactiveVar} onPause  - Is upload process on the pause?\n    {ReactiveVar} state    - active|paused|aborted|completed\n    {ReactiveVar} progress - Current progress in percentage\n    {Function}    pause    - Pause upload process\n    {Function}    continue - Continue paused upload process\n    {Function}    toggle   - Toggle continue/pause if upload process\n    {Function}    abort    - Abort upload\n    {Function}    readAsDataURL - Current file as data URL, use to create image preview and etc. Be aware of big files, may lead to browser crash\n  ###\n  insert: if Meteor.isClient then (config) ->\n    if @checkAccess()\n      console.info '[Meteor.Files] [insert()]' if @debug\n      config.meta            ?= {}\n      config.streams         ?= 2\n      config.streams          = 2 if config.streams < 1\n      config.chunkSize       ?= @chunkSize\n      config.allowWebWorkers ?= true\n\n      check config, {\n        file:            Match.Any\n        meta:            Match.Optional Object\n        onError:         Match.Optional Function\n        onAbort:         Match.Optional Function\n        streams:         Match.OneOf 'dynamic', Number\n        chunkSize:       Match.OneOf 'dynamic', Number\n        onUploaded:      Match.Optional Function\n        onProgress:      Match.Optional Function\n        onBeforeUpload:  Match.Optional Function\n        allowWebWorkers: Boolean\n      }\n\n      if config.file\n        if Worker and config.allowWebWorkers\n          worker   = @ReaderWorker\n        else\n          worker   = null\n        console.time('insert') if @debug\n        console.time('loadFile') if @debug\n        self       = @\n        fileLength = 1\n        fileId     = @namingFunction()\n        fileData   =\n          size: config.file.size\n          type: config.file.type\n          name: config.file.name\n\n        fileData = _.extend fileData, @getExt(config.file.name), {mime: @getMimeType(fileData)}\n        fileData['mime-type'] = fileData.mime\n\n        result  =\n          file:          _.extend config.file, fileData\n          state:         new ReactiveVar 'active'\n          onPause:       new ReactiveVar false\n          progress:      new ReactiveVar 0\n          estimateTime:  new ReactiveVar 1000\n          estimateSpeed: new ReactiveVar 0\n          continueFunc:  -> return\n          pause: ->\n            unless @onPause.get()\n              @onPause.set true\n              @state.set 'paused'\n            return\n          continue: ->\n            if @onPause.get()\n              @onPause.set false\n              @state.set 'active'\n              @continueFunc.call()\n              @continueFunc = -> return\n            return\n          toggle: ->\n            if @onPause.get() then @continue() else @pause()\n            return\n          abort: ->\n            window.removeEventListener 'beforeunload', beforeunload, false\n            config.onAbort and config.onAbort.call @, fileData\n            @pause()\n            @state.set 'aborted'\n            console.timeEnd('insert') if self.debug\n            Meteor.call self.methodNames.MeteorFileAbort, {fileId, fileLength, fileData}\n            delete upload\n            return\n\n        beforeunload = (e) ->\n          message = if _.isFunction(self.onbeforeunloadMessage) then self.onbeforeunloadMessage.call(result, fileData) else self.onbeforeunloadMessage\n          e.returnValue = message if e\n          return message\n        window.addEventListener 'beforeunload', beforeunload, false\n\n        Tracker.autorun ->\n          unless result.onPause.get()\n            if Meteor.status().connected\n              result.continue()\n              console.info '[Meteor.Files] [insert] [Tracker] [continue]' if self.debug\n            else\n              result.pause()\n              console.info '[Meteor.Files] [insert] [Tracker] [pause]' if self.debug\n          return\n\n        end = (error, data) ->\n          console.timeEnd('insert') if self.debug\n          window.removeEventListener 'beforeunload', beforeunload, false\n          result.progress.set 0\n          config.onUploaded and config.onUploaded.call result, error, data\n          if error\n            console.warn \"[Meteor.Files] [insert] [end] Error: \", error if self.debug\n            result.state.set 'aborted'\n            config.onError and config.onError.call result, error, fileData\n          else\n            result.state.set 'completed'\n          return\n\n        if config.onBeforeUpload and _.isFunction config.onBeforeUpload\n          isUploadAllowed = config.onBeforeUpload.call result, fileData\n          if isUploadAllowed isnt true\n            end new Meteor.Error(403, if _.isString(isUploadAllowed) then isUploadAllowed else 'config.onBeforeUpload() returned false'), null\n            return false\n\n        if @onBeforeUpload and _.isFunction @onBeforeUpload\n          isUploadAllowed = @onBeforeUpload.call result, fileData\n          if isUploadAllowed isnt true\n            end new Meteor.Error(403, if _.isString(isUploadAllowed) then isUploadAllowed else 'this.onBeforeUpload() returned false'), null\n            return false\n\n        currentChunk = 0\n        sentChunks   = 0\n        EOFsent      = false\n        transferTime = 0\n\n        calculateStats = _.throttle ->\n          _t = (transferTime / sentChunks) / config.streams\n          result.estimateTime.set (_t * (fileLength - sentChunks))\n          result.estimateSpeed.set (config.chunkSize / (_t / 1000))\n          progress = Math.round((sentChunks / fileLength) * 100)\n          result.progress.set progress\n          config.onProgress and config.onProgress.call result, progress, fileData\n          return\n        , 250\n\n        sendViaDDP = (evt) -> Meteor.defer ->\n          console.timeEnd('loadFile') if self.debug\n          opts =\n            file:       fileData\n            fileId:     fileId\n            binData:    evt.data.bin\n            chunkId:    evt.data.chunkId\n            fileLength: fileLength\n\n          if opts.binData and opts.binData.length\n            Meteor.call self.methodNames.MeteorFileWrite, opts, (error) ->\n              ++sentChunks\n              transferTime += (+new Date) - evt.data.start\n              if error\n                end error\n              else\n                if sentChunks >= fileLength\n                  sendEOF opts\n                else if currentChunk < fileLength\n                  upload()\n                calculateStats()\n              return\n          else\n            sendEOF opts\n          return\n\n        sendEOF = (opts) -> Meteor.defer ->\n          unless EOFsent\n            EOFsent = true\n            opts =\n              eof:        true\n              meta:       config.meta\n              file:       fileData\n              fileId:     fileId\n              fileLength: fileLength\n            Meteor.call self.methodNames.MeteorFileWrite, opts, end\n          return\n\n        if worker\n          worker.onmessage = sendViaDDP\n          worker.onerror   = (e) -> \n            end e.message\n            return\n\n        if self.debug\n          if worker\n            console.info \"[Meteor.Files] [insert] using WebWorkers\"\n          else\n            console.info \"[Meteor.Files] [insert] using MainThread\"\n\n        upload = -> Meteor.defer ->\n          start = +new Date\n          if result.onPause.get()\n            result.continueFunc = -> createStreams()\n            return\n\n          ++currentChunk\n          if worker\n            worker.postMessage({sentChunks, start, currentChunk, chunkSize: config.chunkSize, file: config.file})\n          else\n            ((chunkId) ->\n              fileReader = new FileReader\n              chunk = config.file.slice (config.chunkSize * (chunkId - 1)), (config.chunkSize * chunkId)\n              readHandler = (evt) ->\n                sendViaDDP data: \n                  bin: (fileReader?.result or evt.srcElement?.result or evt.target?.result).split(',')[1]\n                  chunkId: chunkId\n                  start: start\n                return\n\n              fileReader.onloadend = readHandler\n              fileReader.onerror = (e) ->\n                result.abort()\n                onError and onError.call result, (e.target or e.srcElement).error, fileData\n                return\n\n              fileReader.readAsDataURL chunk\n              return\n            )(currentChunk)\n          return\n\n        createStreams = ->\n          i = 1\n          while i <= config.streams\n            upload()\n            i++\n          return\n\n        prepare = ->\n          if config.chunkSize is 'dynamic'\n            if config.file.size >= 104857600\n              config.chunkSize = 1048576\n            else if config.file.size >= 52428800\n              config.chunkSize = 524288\n            else\n              config.chunkSize = 262144\n          \n          _len = Math.ceil(config.file.size / config.chunkSize)\n          if config.streams is 'dynamic'\n            config.streams = _.clone _len\n            config.streams = 32 if config.streams > 32\n\n          fileLength     = if _len <= 0 then 1 else _len\n          config.streams = fileLength if config.streams > fileLength\n          createStreams()\n          return\n        prepare()\n        return result\n      else\n        console.warn \"[Meteor.Files] [insert] Have you forget to pass a File itself?\"\n  else\n    undefined\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name remove\n  @param {String|Object} search - `_id` of the file or `Object` like, {prop:'val'}\n  @description Remove file(s) on cursor or find and remove file(s) if search is set\n  @returns {undefined}\n  ###\n  remove: (search) ->\n    console.info \"[Meteor.Files] [remove(#{JSON.stringify(search)})]\" if @debug\n    check search, Match.Optional Match.OneOf Object, String\n\n    if @checkAccess()\n      @srch search\n      if Meteor.isClient\n        Meteor.call @methodNames.MeteorFileUnlink, rcp(@)\n\n      if Meteor.isServer\n        files = @collection.find @search\n        if files.count() > 0\n          self = @\n          files.forEach (file) -> self.unlink file\n        @collection.remove @search\n    return @\n\n  ###\n  @sever\n  @function\n  @class Meteor.Files\n  @name unlink\n  @param {Object} file - fileObj\n  @description Unlink files and it's versions from FS\n  @returns {undefined}\n  ###\n  unlink: if Meteor.isServer then (file) ->\n    console.log \"[Meteor.Files] [unlink(#{file._id})]\" if @debug\n    if file.versions and not _.isEmpty file.versions\n      _.each file.versions, (version) -> bound ->\n        fs.unlink version.path, NOOP\n    fs.unlink file.path, NOOP\n    return @\n  else undefined\n\n\n  _404: if Meteor.isServer then (http) ->\n    console.warn \"[Meteor.Files] [download(#{http.request.originalUrl})] [_404] File not found\" if @debug\n    text = 'File Not Found :('\n    http.response.writeHead 404,\n      'Content-Length': text.length\n      'Content-Type':   'text/plain'\n    http.response.end text\n  else undefined\n\n  ###\n  @server\n  @function\n  @class Meteor.Files\n  @name download\n  @param {Object|Files} self - Instance of MEteor.Files\n  @description Initiates the HTTP response\n  @returns {undefined}\n  ###\n  download: if Meteor.isServer then (http, version = 'original') ->\n    console.info \"[Meteor.Files] [download(#{http.request.originalUrl}, #{version})]\" if @debug\n    responseType = '200'\n    if not @public\n      if @currentFile\n        if _.has(@currentFile, 'versions') and _.has @currentFile.versions, version\n          fileRef = @currentFile.versions[version]\n        else\n          fileRef = @currentFile\n      else\n        fileRef = false\n\n    if @public\n      fileRef =\n        path: \"#{@storagePath}/#{http.params.file}\"\n\n    if not fileRef or not _.isObject(fileRef)\n      return @_404 http\n    else if @currentFile\n      self = @\n\n      if @interceptDownload and _.isFunction @interceptDownload\n        _idres = @interceptDownload http, @currentFile\n        if _idres is true\n          return\n\n      if @downloadCallback\n        unless @downloadCallback.call _.extend(http, @getUser(http)), @currentFile\n          return @_404 http\n\n      fs.stat fileRef.path, (statErr, stats) -> bound ->\n        if statErr or not stats.isFile()\n          return self._404 http\n\n        fileStats    = util.inspect stats\n        fileRef.size = fileStats.size if fileStats.size isnt fileRef.size and not self.integrityCheck\n        responseType = '400' if fileStats.size isnt fileRef.size and self.integrityCheck\n        partiral     = false\n        reqRange     = false\n\n        if http.params.query.download and http.params.query.download == 'true'\n          dispositionType = 'attachment; '\n        else\n          dispositionType = 'inline; '\n\n        dispositionName     = \"filename=\\\"#{encodeURIComponent(self.currentFile.name)}\\\"; filename=*UTF-8\\\"#{encodeURIComponent(self.currentFile.name)}\\\"; \"\n        dispositionEncoding = 'charset=utf-8'\n\n        http.response.setHeader 'Content-Type', fileRef.type\n        http.response.setHeader 'Content-Disposition', dispositionType + dispositionName + dispositionEncoding\n        http.response.setHeader 'Accept-Ranges', 'bytes'\n        http.response.setHeader 'Last-Modified', self.currentFile?.updatedAt?.toUTCString() if self.currentFile?.updatedAt?.toUTCString()\n        http.response.setHeader 'Connection', 'keep-alive'\n\n        if http.request.headers.range\n          partiral = true\n          array    = http.request.headers.range.split /bytes=([0-9]*)-([0-9]*)/\n          start    = parseInt array[1]\n          end      = parseInt array[2]\n          if isNaN(end)\n            end    = fileRef.size - 1\n          take     = end - start\n        else\n          start    = 0\n          end      = fileRef.size - 1\n          take     = fileRef.size\n\n        if partiral or (http.params.query.play and http.params.query.play == 'true')\n          reqRange = {start, end}\n          if isNaN(start) and not isNaN end\n            reqRange.start = end - take\n            reqRange.end   = end\n          if not isNaN(start) and isNaN end\n            reqRange.start = start\n            reqRange.end   = start + take\n\n          reqRange.end = fileRef.size - 1 if ((start + take) >= fileRef.size)\n          http.response.setHeader 'Pragma', 'private'\n          http.response.setHeader 'Expires', new Date(+new Date + 1000*32400).toUTCString()\n          http.response.setHeader 'Cache-Control', 'private, maxage=10800, s-maxage=32400'\n\n          if self.strict and (reqRange.start >= (fileRef.size - 1) or reqRange.end > (fileRef.size - 1))\n            responseType = '416'\n          else\n            responseType = '206'\n        else\n          http.response.setHeader 'Cache-Control', self.cacheControl\n          responseType = '200'\n\n        streamErrorHandler = (error) ->\n          http.response.writeHead 500\n          http.response.end error.toString()\n\n        switch responseType\n          when '400'\n            console.warn \"[Meteor.Files] [download(#{fileRef.path}, #{version})] [400] Content-Length mismatch!\" if self.debug\n            text = 'Content-Length mismatch!'\n            http.response.writeHead 400,\n              'Content-Type':   'text/plain'\n              'Cache-Control':  'no-cache'\n              'Content-Length': text.length\n            http.response.end text\n            break\n          when '404'\n            return self._404 http\n            break\n          when '416'\n            console.info \"[Meteor.Files] [download(#{fileRef.path}, #{version})] [416] Content-Range is not specified!\" if self.debug\n            http.response.writeHead 416,\n              'Content-Range': \"bytes */#{fileRef.size}\"\n            http.response.end()\n            break\n          when '200'\n            console.info \"[Meteor.Files] [download(#{fileRef.path}, #{version})] [200]\" if self.debug\n            stream = fs.createReadStream fileRef.path\n            stream.on('open', =>\n              http.response.writeHead 200\n              if self.throttle\n                stream.pipe( new Throttle {bps: self.throttle, chunksize: self.chunkSize}\n                ).pipe http.response\n              else\n                stream.pipe http.response\n            ).on 'error', streamErrorHandler\n            break\n          when '206'\n            console.info \"[Meteor.Files] [download(#{fileRef.path}, #{version})] [206]\" if self.debug\n            http.response.setHeader 'Content-Range', \"bytes #{reqRange.start}-#{reqRange.end}/#{fileRef.size}\"\n            http.response.setHeader 'Trailer', 'expires'\n            http.response.setHeader 'Transfer-Encoding', 'chunked'\n            if self.throttle\n              stream = fs.createReadStream fileRef.path, {start: reqRange.start, end: reqRange.end}\n              stream.on('open', -> http.response.writeHead 206\n              ).on('error', streamErrorHandler\n              ).on('end', -> http.response.end()\n              ).pipe( new Throttle {bps: self.throttle, chunksize: self.chunkSize}\n              ).pipe http.response\n            else\n              stream = fs.createReadStream fileRef.path, {start: reqRange.start, end: reqRange.end}\n              stream.on('open', -> http.response.writeHead 206\n              ).on('error', streamErrorHandler\n              ).on('end', -> http.response.end()\n              ).pipe http.response\n            break\n    else\n      return @_404 http\n  else undefined\n\n  ###\n  @isomorphic\n  @function\n  @class Meteor.Files\n  @name link\n  @param {Object}   fileRef - File reference object\n  @param {String}   version - [Optional] Version of file you would like to request\n  @param {Boolean}  pub     - [Optional] is file located in publicity available folder?\n  @description Returns URL to file\n  @returns {String} Empty string returned in case if file not found in DB\n  ###\n  link: (fileRef, version = 'original', pub = false) ->\n    console.info '[Meteor.Files] [link()]' if @debug\n    if _.isString fileRef\n      version = fileRef\n      fileRef = null\n    return '' if not fileRef and not @currentFile\n    return formatFleURL (fileRef or @currentFile), version, @public\n\n###\n@isomorphic\n@private\n@function\n@name formatFleURL\n@param {Object} fileRef - File reference object\n@param {String} version - [Optional] Version of file you would like build URL for\n@param {Boolean}  pub   - [Optional] is file located in publicity available folder?\n@description Returns formatted URL for file\n@returns {String}\n###\nformatFleURL = (fileRef, version = 'original', pub = false) ->\n  root = __meteor_runtime_config__.ROOT_URL.replace(/\\/+$/, '')\n\n  if fileRef?.extension?.length > 0\n    ext = '.' + fileRef.extension\n  else\n    ext = ''\n\n  if pub\n    return root + \"#{fileRef._downloadRoute}/#{version}-#{fileRef._id}#{ext}\"\n  else\n    return root + \"#{fileRef._downloadRoute}/#{fileRef._collectionName}/#{fileRef._id}/#{version}/#{fileRef._id}#{ext}\"\n\nif Meteor.isClient\n  ###\n  @client\n  @TemplateHelper\n  @name fileURL\n  @param {Object} fileRef - File reference object\n  @param {String} version - [Optional] Version of file you would like to request\n  @description Get download URL for file by fileRef, even without subscription\n  @example {{fileURL fileRef}}\n  @returns {String}\n  ###\n  Template.registerHelper 'fileURL', (fileRef, version) ->\n    return undefined if not fileRef or not _.isObject fileRef\n    version = if not version or not _.isString(version) then 'original' else version\n    if fileRef._id\n      return formatFleURL fileRef, version, !!~fileRef._storagePath?.indexOf?('../web.browser')\n    else\n      return ''"]}