{"version":3,"sources":["meteor://ðŸ’»app/packages/ostrio:flow-router-extra/server/_init.js","meteor://ðŸ’»app/packages/ostrio:flow-router-extra/server/group.js","meteor://ðŸ’»app/packages/ostrio:flow-router-extra/server/route.js","meteor://ðŸ’»app/packages/ostrio:flow-router-extra/server/router.js"],"names":["module","export","FlowRouter","Router","Route","Group","Triggers","BlazeRenderer","Meteor","watch","require","v","Package","_debug","_","makeTrigger","trigger","isFunction","isArray","makeTriggers","_base","_triggers","concat","router","options","parent","prefix","test","Error","_router","name","_triggersEnter","triggersEnter","_triggersExit","triggersExit","_subscriptions","subscriptions","Function","prototype","route","_pathDef","_group","group","pathDef","exportDefault","path","action","_subsMap","register","sub","subscription","middleware","qs","pathRegExp","_routes","_routesMap","_onRouteCallbacks","triggers","enter","exit","push","_triggerRouteRegister","fields","queryParams","replace","key","firstRegexpChar","indexOf","substring","undefined","match","strQueryParams","stringify","onRouteRegister","cb","currentRoute","routePublicApi","pick","omit","each","go","current","getState","getAllStates","setState","removeState","clearStates","ready","initialize","wait","url","absoluteUrl","apply","arguments","RegExp","_basePath"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,cAAW;AAAA,WAAIA,UAAJ;AAAA,GAAZ;AAA2BC,UAAO;AAAA,WAAIA,MAAJ;AAAA,GAAlC;AAA6CC,SAAM;AAAA,WAAIA,KAAJ;AAAA,GAAnD;AAA6DC,SAAM;AAAA,WAAIA,KAAJ;AAAA,GAAnE;AAA6EC,YAAS;AAAA,WAAIA,QAAJ;AAAA,GAAtF;AAAmGC,iBAAc;AAAA,WAAIA,aAAJ;AAAA;AAAjH,CAAd;AAAmJ,IAAIC,eAAJ;AAAWR,OAAOS,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACF,QAAD,YAAQG,CAAR,EAAU;AAACH,aAAOG,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIR,eAAJ;AAAWH,OAAOS,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAAA,uBAASC,CAAT,EAAW;AAACR,aAAOQ,CAAP;AAAS;AAArB,CAApC,EAA2D,CAA3D;AAA8D,IAAIP,cAAJ;AAAUJ,OAAOS,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA,uBAASC,CAAT,EAAW;AAACP,YAAMO,CAAN;AAAQ;AAApB,CAAnC,EAAyD,CAAzD;AAA4D,IAAIN,cAAJ;AAAUL,OAAOS,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA,uBAASC,CAAT,EAAW;AAACN,YAAMM,CAAN;AAAQ;AAApB,CAAnC,EAAyD,CAAzD;;AAKtX,IAAIC,QAAQ,yBAAR,CAAJ,EAAwC;AACtCJ,SAAOK,MAAP,CAAc,qHAAd;;AACAL,SAAOK,MAAP,CAAc,uCAAd;;AACAL,SAAOK,MAAP,CAAc,wCAAd;AACD;;AAED,IAAID,QAAQ,yBAAR,CAAJ,EAAwC;AACtCJ,SAAOK,MAAP,CAAc,qHAAd;;AACAL,SAAOK,MAAP,CAAc,uCAAd;;AACAL,SAAOK,MAAP,CAAc,wCAAd;AACD;;AAED,IAAMP,WAAW,EAAjB;AACA,IAAMC,gBAAgB,EAAtB;AAEA,IAAML,aAAa,IAAIC,MAAJ,EAAnB;AACAD,WAAWC,MAAX,GAAoBA,MAApB;AACAD,WAAWE,KAAX,GAAmBA,KAAnB,+E;;;;;;;;;;;;;;;;;ACtBA,IAAIU,UAAJ;;AAAMd,OAAOS,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACI,GAAD,YAAGH,CAAH,EAAK;AAACG,QAAEH,CAAF;AAAI;AAAV,CAA1C,EAAsD,CAAtD;;AAEN,IAAMI,cAAc,UAACC,OAAD,EAAa;AAC/B,MAAIF,EAAEG,UAAF,CAAaD,OAAb,CAAJ,EAA2B;AACzB,WAAO,CAACA,OAAD,CAAP;AACD,GAFD,MAEO,IAAI,CAACF,EAAEI,OAAF,CAAUF,OAAV,CAAL,EAAyB;AAC9B,WAAO,EAAP;AACD;;AAED,SAAOA,OAAP;AACD,CARD;;AAUA,IAAMG,eAAe,UAACC,KAAD,EAAQC,SAAR,EAAsB;AACzC,MAAK,CAACD,KAAD,IAAU,CAACC,SAAhB,EAA4B;AAC1B,WAAO,EAAP;AACD;;AACD,SAAON,YAAYK,KAAZ,EAAmBE,MAAnB,CAA0BP,YAAYM,SAAZ,CAA1B,CAAP;AACD,CALD;;IAOMhB,K;AACJ,iBAAYkB,MAAZ,EAA0C;AAAA,QAAtBC,OAAsB,uEAAZ,EAAY;AAAA,QAARC,MAAQ;AAAA;;AACxC,QAAID,QAAQE,MAAR,IAAkB,CAAC,MAAMC,IAAN,CAAWH,QAAQE,MAAnB,CAAvB,EAAmD;AACjD,YAAM,IAAIE,KAAJ,CAAU,qCAAV,CAAN;AACD;;AAED,SAAKC,OAAL,GAAeN,MAAf;AACA,SAAKG,MAAL,GAAcF,QAAQE,MAAR,IAAkB,EAAhC;AACA,SAAKI,IAAL,GAAYN,QAAQM,IAApB;AACA,SAAKN,OAAL,GAAeA,OAAf;AAEA,SAAKO,cAAL,GAAsBZ,aAAaK,QAAQQ,aAArB,EAAoC,KAAKD,cAAzC,CAAtB;AACA,SAAKE,aAAL,GAAsBd,aAAa,KAAKc,aAAlB,EAAiCT,QAAQU,YAAzC,CAAtB;AAEA,SAAKC,cAAL,GAAsBX,QAAQY,aAAR,IAAyBC,SAASC,SAAxD;AAEA,SAAKb,MAAL,GAAcA,MAAd;;AACA,QAAI,KAAKA,MAAT,EAAiB;AACf,WAAKC,MAAL,GAAcD,OAAOC,MAAP,GAAgB,KAAKA,MAAnC;AACA,WAAKK,cAAL,GAAsBZ,aAAaM,OAAOM,cAApB,EAAoC,KAAKA,cAAzC,CAAtB;AACA,WAAKE,aAAL,GAAsBd,aAAa,KAAKc,aAAlB,EAAiCR,OAAOQ,aAAxC,CAAtB;AACD;AACF;;kBAEDM,K;mBAAMC,Q,EAAgC;AAAA,UAAtBhB,OAAsB,uEAAZ,EAAY;AAAA,UAARiB,MAAQ;;AACpC,UAAI,CAAC,MAAMd,IAAN,CAAWa,QAAX,CAAL,EAA2B;AACzB,cAAM,IAAIZ,KAAJ,CAAU,mCAAV,CAAN;AACD;;AAED,UAAMc,QAAUD,UAAU,IAA1B;AACA,UAAME,UAAU,KAAKjB,MAAL,GAAcc,QAA9B;AAEAhB,cAAQQ,aAAR,GAAwBb,aAAa,KAAKY,cAAlB,EAAkCP,QAAQQ,aAA1C,CAAxB;AACAR,cAAQU,YAAR,GAAwBf,aAAaK,QAAQU,YAArB,EAAmC,KAAKD,aAAxC,CAAxB;AAEA,aAAO,KAAKJ,OAAL,CAAaU,KAAb,CAAmBI,OAAnB,EAA4BnB,OAA5B,EAAqCkB,KAArC,CAAP;AACD;;;;;kBAEDA,K;mBAAMlB,O,EAAS;AACb,aAAO,IAAInB,KAAJ,CAAU,KAAKwB,OAAf,EAAwBL,OAAxB,EAAiC,IAAjC,CAAP;AACD;;;;;;;;AA3DHxB,OAAO4C,aAAP,CA8DevC,KA9Df,4E;;;;;;;;;;;;;;;;;ICAMD,K;AACJ,iBAAYmB,MAAZ,EAAoBoB,OAApB,EAA2C;AAAA,QAAdnB,OAAc,uEAAJ,EAAI;AAAA;AACzC,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKM,IAAL,GAAYN,QAAQM,IAApB;AACA,SAAKa,OAAL,GAAeA,OAAf,CAHyC,CAKzC;;AACA,SAAKE,IAAL,GAAYF,OAAZ;AAEA,SAAKG,MAAL,GAActB,QAAQsB,MAAR,IAAkBT,SAASC,SAAzC;AACA,SAAKF,aAAL,GAAqBZ,QAAQY,aAAR,IAAyBC,SAASC,SAAvD;AACA,SAAKS,QAAL,GAAgB,EAAhB;AACD;;kBAGDC,Q;sBAASlB,I,EAAMmB,G,EAAK;AAClB,WAAKF,QAAL,CAAcjB,IAAd,IAAsBmB,GAAtB;AACD;;;;;kBAGDC,Y;0BAAapB,I,EAAM;AACjB,aAAO,KAAKiB,QAAL,CAAcjB,IAAd,CAAP;AACD;;;;;kBAGDqB,U;0BAAa,CACX;AACD;;;;;;;;AA3BHnD,OAAO4C,aAAP,CA8BexC,KA9Bf,4E;;;;;;;;;;;;;;;;;ACAA,IAAIU,UAAJ;;AAAMd,OAAOS,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACI,GAAD,YAAGH,CAAH,EAAK;AAACG,QAAEH,CAAF;AAAI;AAAV,CAA1C,EAAsD,CAAtD;AAAyD,IAAIP,cAAJ;AAAUJ,OAAOS,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA,uBAASC,CAAT,EAAW;AAACP,YAAMO,CAAN;AAAQ;AAApB,CAAnC,EAAyD,CAAzD;AAA4D,IAAIN,cAAJ;AAAUL,OAAOS,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA,uBAASC,CAAT,EAAW;AAACN,YAAMM,CAAN;AAAQ;AAApB,CAAnC,EAAyD,CAAzD;AAA4D,IAAIH,eAAJ;AAAWR,OAAOS,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACF,QAAD,YAAQG,CAAR,EAAU;AAACH,aAAOG,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;;AAKtN,IAAMyC,KAAK1C,QAAQ,IAAR,CAAX;;IAEMP,M;AACJ,oBAAc;AAAA;AACZ,SAAKkD,UAAL,GAAkB,gCAAlB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKnB,aAAL,GAAqBC,SAASC,SAA9B,CAJY,CAMZ;;AACA,SAAKkB,iBAAL,GAAyB,EAAzB;AAEA,SAAKC,QAAL,GAAgB;AACdC,WADc,cACN,CACN;AACD,OAHa;AAIdC,UAJc,cAIP,CACL;AACD;AANa,KAAhB;AAQD;;mBAEDpB,K;mBAAMI,O,EAAuB;AAAA,UAAdnB,OAAc,uEAAJ,EAAI;;AAC3B,UAAI,CAAC,QAAQG,IAAR,CAAagB,OAAb,CAAD,IAA0BA,YAAY,GAA1C,EAA+C;AAC7C,cAAM,IAAIf,KAAJ,CAAU,mCAAV,CAAN;AACD;;AAED,UAAMW,QAAQ,IAAInC,KAAJ,CAAU,IAAV,EAAgBuC,OAAhB,EAAyBnB,OAAzB,CAAd;;AACA,WAAK8B,OAAL,CAAaM,IAAb,CAAkBrB,KAAlB;;AAEA,UAAIf,QAAQM,IAAZ,EAAkB;AAChB,aAAKyB,UAAL,CAAgB/B,QAAQM,IAAxB,IAAgCS,KAAhC;AACD;;AAED,WAAKsB,qBAAL,CAA2BtB,KAA3B;;AACA,aAAOA,KAAP;AACD;;;;;mBAEDG,K;mBAAMlB,O,EAAS;AACb,aAAO,IAAInB,KAAJ,CAAU,IAAV,EAAgBmB,OAAhB,CAAP;AACD;;;;;mBAEDqB,I;kBAAKF,O,EAAmC;AAAA,UAA1BmB,MAA0B,uEAAjB,EAAiB;AAAA,UAAbC,WAAa;;AACtC,UAAI,KAAKR,UAAL,CAAgBZ,OAAhB,CAAJ,EAA8B;AAC5BA,kBAAU,KAAKY,UAAL,CAAgBZ,OAAhB,EAAyBE,IAAnC;AACD;;AAED,UAAIA,OAAOF,QAAQqB,OAAR,CAAgB,KAAKX,UAArB,EAAiC,UAACY,GAAD,EAAS;AACnD,YAAMC,kBAAkBD,IAAIE,OAAJ,CAAY,GAAZ,CAAxB,CADmD,CAEnD;;AACAF,cAAMA,IAAIG,SAAJ,CAAc,CAAd,EAAkBF,kBAAkB,CAAnB,GAAwBA,eAAxB,GAA0CG,SAA3D,CAAN,CAHmD,CAInD;;AACAJ,cAAMA,IAAID,OAAJ,CAAY,YAAZ,EAA0B,EAA1B,CAAN;AAEA,eAAOF,OAAOG,GAAP,KAAe,EAAtB;AACD,OARU,CAAX;AAUApB,aAAOA,KAAKmB,OAAL,CAAa,QAAb,EAAuB,GAAvB,CAAP,CAfsC,CAeF;AAEpC;AACA;;AACAnB,aAAOA,KAAKyB,KAAL,CAAW,SAAX,IAAwBzB,IAAxB,GAA+BA,KAAKmB,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAtC;AAEA,UAAMO,iBAAiBnB,GAAGoB,SAAH,CAAaT,eAAe,EAA5B,CAAvB;;AACA,UAAGQ,cAAH,EAAmB;AACjB1B,gBAAQ,MAAM0B,cAAd;AACD;;AAED,aAAO1B,IAAP;AACD;;;;;mBAED4B,e;6BAAgBC,E,EAAI;AAClB,WAAKlB,iBAAL,CAAuBI,IAAvB,CAA4Bc,EAA5B;AACD;;;;;mBAEDb,qB;mCAAsBc,Y,EAAc;AAClC;AACA;AACA;AACA;AACA,UAAMC,iBAAiB9D,EAAE+D,IAAF,CAAOF,YAAP,EAAqB,MAArB,EAA6B,SAA7B,EAAwC,MAAxC,CAAvB;;AACAC,qBAAepD,OAAf,GAAyBV,EAAEgE,IAAF,CAAOH,aAAanD,OAApB,EAA6B,CAAC,eAAD,EAAkB,cAAlB,EAAkC,QAAlC,EAA4C,eAA5C,EAA6D,MAA7D,CAA7B,CAAzB;;AAEAV,QAAEiE,IAAF,CAAO,KAAKvB,iBAAZ,EAA+B,UAASkB,EAAT,EAAa;AAC1CA,WAAGE,cAAH;AACD,OAFD;AAGD;;;;;mBAGDI,E;kBAAK,CACH;AACD;;;;;mBAGDC,O;uBAAU,CACR;AACD;;;;;mBAED9B,U;0BAAa,CACX;AACD;;;;;mBAGD+B,Q;wBAAW,CACT;AACD;;;;;mBAGDC,Y;4BAAe,CACb;AACD;;;;;mBAGDC,Q;wBAAW,CACT;AACD;;;;;mBAGDC,W;2BAAc,CACZ;AACD;;;;;mBAGDC,W;2BAAc,CACZ;AACD;;;;;mBAGDC,K;qBAAQ,CACN;AACD;;;;;mBAGDC,U;0BAAa,CACX;AACD;;;;;mBAEDC,I;oBAAO,CACL;AACD;;;;;mBAEDC,G;mBAAM;AACJ;AACA;AACA;AACA,aAAOlF,OAAOmF,WAAP,CAAmB,KAAK9C,IAAL,CAAU+C,KAAV,CAAgB,IAAhB,EAAsBC,SAAtB,EAAiC7B,OAAjC,CAAyC,IAAI8B,MAAJ,CAAW,MAAM,CAAC,OAAO,KAAKC,SAAL,IAAkB,EAAzB,IAA+B,GAAhC,EAAqC/B,OAArC,CAA6C,QAA7C,EAAuD,GAAvD,CAAjB,CAAzC,EAAwH,EAAxH,CAAnB,CAAP;AACD;;;;;;;;AAvJHhE,OAAO4C,aAAP,CA0JezC,MA1Jf,2E","file":"/packages/ostrio_flow-router-extra.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport Router     from './router.js';\nimport Route      from './route.js';\nimport Group      from './group.js';\n\nif (Package['meteorhacks:inject-data']) {\n  Meteor._debug('`meteorhacks:inject-data` is deprecated, please remove it and install its successor - `staringatlights:inject-data`');\n  Meteor._debug('meteor remove meteorhacks:inject-data');\n  Meteor._debug('meteor add staringatlights:inject-data');\n}\n\nif (Package['meteorhacks:fast-render']) {\n  Meteor._debug('`meteorhacks:fast-render` is deprecated, please remove it and install its successor - `staringatlights:fast-render`');\n  Meteor._debug('meteor remove meteorhacks:fast-render');\n  Meteor._debug('meteor add staringatlights:fast-render');\n}\n\nconst Triggers = {};\nconst BlazeRenderer = {};\n\nconst FlowRouter = new Router();\nFlowRouter.Router = Router;\nFlowRouter.Route = Route;\n\nexport { FlowRouter, Router, Route, Group, Triggers, BlazeRenderer };\n","import { _ } from 'meteor/underscore';\n\nconst makeTrigger = (trigger) => {\n  if (_.isFunction(trigger)) {\n    return [trigger];\n  } else if (!_.isArray(trigger)) {\n    return [];\n  }\n\n  return trigger;\n};\n\nconst makeTriggers = (_base, _triggers) => {\n  if ((!_base && !_triggers)) {\n    return [];\n  }\n  return makeTrigger(_base).concat(makeTrigger(_triggers));\n};\n\nclass Group {\n  constructor(router, options = {}, parent) {\n    if (options.prefix && !/^\\//.test(options.prefix)) {\n      throw new Error('group\\'s prefix must start with \"/\"');\n    }\n\n    this._router = router;\n    this.prefix = options.prefix || '';\n    this.name = options.name;\n    this.options = options;\n\n    this._triggersEnter = makeTriggers(options.triggersEnter, this._triggersEnter);\n    this._triggersExit  = makeTriggers(this._triggersExit, options.triggersExit);\n\n    this._subscriptions = options.subscriptions || Function.prototype;\n\n    this.parent = parent;\n    if (this.parent) {\n      this.prefix = parent.prefix + this.prefix;\n      this._triggersEnter = makeTriggers(parent._triggersEnter, this._triggersEnter);\n      this._triggersExit  = makeTriggers(this._triggersExit, parent._triggersExit);\n    }\n  }\n\n  route(_pathDef, options = {}, _group) {\n    if (!/^\\//.test(_pathDef)) {\n      throw new Error('route\\'s path must start with \"/\"');\n    }\n\n    const group   = _group || this;\n    const pathDef = this.prefix + _pathDef;\n\n    options.triggersEnter = makeTriggers(this._triggersEnter, options.triggersEnter);\n    options.triggersExit  = makeTriggers(options.triggersExit, this._triggersExit);\n\n    return this._router.route(pathDef, options, group);\n  }\n\n  group(options) {\n    return new Group(this._router, options, this);\n  }\n}\n\nexport default Group;\n","class Route {\n  constructor(router, pathDef, options = {}) {\n    this.options = options;\n    this.name = options.name;\n    this.pathDef = pathDef;\n\n    // Route.path is deprecated and will be removed in 3.0\n    this.path = pathDef;\n\n    this.action = options.action || Function.prototype;\n    this.subscriptions = options.subscriptions || Function.prototype;\n    this._subsMap = {};\n  }\n\n\n  register(name, sub) {\n    this._subsMap[name] = sub;\n  }\n\n\n  subscription(name) {\n    return this._subsMap[name];\n  }\n\n\n  middleware() {\n    // ?\n  }\n}\n\nexport default Route;\n","import { _ }      from 'meteor/underscore';\nimport Route      from './route.js';\nimport Group      from './group.js';\nimport { Meteor } from 'meteor/meteor';\n\nconst qs = require('qs');\n\nclass Router {\n  constructor() {\n    this.pathRegExp = /(:[\\w\\(\\)\\\\\\+\\*\\.\\?\\[\\]\\-]+)+/g;\n    this._routes = [];\n    this._routesMap = {};\n    this.subscriptions = Function.prototype;\n\n    // holds onRoute callbacks\n    this._onRouteCallbacks = [];\n\n    this.triggers = {\n      enter() {\n        // client only\n      },\n      exit() {\n        // client only\n      }\n    };\n  }\n\n  route(pathDef, options = {}) {\n    if (!/^\\/.*/.test(pathDef) && pathDef !== '*') {\n      throw new Error('route\\'s path must start with \"/\"');\n    }\n\n    const route = new Route(this, pathDef, options);\n    this._routes.push(route);\n\n    if (options.name) {\n      this._routesMap[options.name] = route;\n    }\n\n    this._triggerRouteRegister(route);\n    return route;\n  }\n\n  group(options) {\n    return new Group(this, options);\n  }\n\n  path(pathDef, fields = {}, queryParams) {\n    if (this._routesMap[pathDef]) {\n      pathDef = this._routesMap[pathDef].path;\n    }\n\n    let path = pathDef.replace(this.pathRegExp, (key) => {\n      const firstRegexpChar = key.indexOf('(');\n      // get the content behind : and (\\\\d+/)\n      key = key.substring(1, (firstRegexpChar > 0) ? firstRegexpChar : undefined);\n      // remove +?*\n      key = key.replace(/[\\+\\*\\?]+/g, '');\n\n      return fields[key] || '';\n    });\n\n    path = path.replace(/\\/\\/+/g, '/'); // Replace multiple slashes with single slash\n\n    // remove trailing slash\n    // but keep the root slash if it's the only one\n    path = path.match(/^\\/{1}$/) ? path : path.replace(/\\/$/, '');\n\n    const strQueryParams = qs.stringify(queryParams || {});\n    if(strQueryParams) {\n      path += '?' + strQueryParams;\n    }\n\n    return path;\n  }\n\n  onRouteRegister(cb) {\n    this._onRouteCallbacks.push(cb);\n  }\n\n  _triggerRouteRegister(currentRoute) {\n    // We should only need to send a safe set of fields on the route\n    // object.\n    // This is not to hide what's inside the route object, but to show\n    // these are the public APIs\n    const routePublicApi = _.pick(currentRoute, 'name', 'pathDef', 'path');\n    routePublicApi.options = _.omit(currentRoute.options, ['triggersEnter', 'triggersExit', 'action', 'subscriptions', 'name']);\n\n    _.each(this._onRouteCallbacks, function(cb) {\n      cb(routePublicApi);\n    });\n  }\n\n\n  go() {\n    // client only\n  }\n\n\n  current() {\n    // client only\n  }\n\n  middleware() {\n    // client only\n  }\n\n\n  getState() {\n    // client only\n  }\n\n\n  getAllStates() {\n    // client only\n  }\n\n\n  setState() {\n    // client only\n  }\n\n\n  removeState() {\n    // client only\n  }\n\n\n  clearStates() {\n    // client only\n  }\n\n\n  ready() {\n    // client only\n  }\n\n\n  initialize() {\n    // client only\n  }\n\n  wait() {\n    // client only\n  }\n\n  url() {\n    // We need to remove the leading base path, or \"/\", as it will be inserted\n    // automatically by `Meteor.absoluteUrl` as documented in:\n    // http://docs.meteor.com/#/full/meteor_absoluteurl\n    return Meteor.absoluteUrl(this.path.apply(this, arguments).replace(new RegExp('^' + ('/' + (this._basePath || '') + '/').replace(/\\/\\/+/g, '/')), ''));\n  }\n}\n\nexport default Router;\n"]}