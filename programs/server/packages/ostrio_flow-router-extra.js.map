{"version":3,"sources":["meteor://ðŸ’»app/packages/ostrio:flow-router-extra/server/_init.js","meteor://ðŸ’»app/packages/ostrio:flow-router-extra/server/group.js","meteor://ðŸ’»app/packages/ostrio:flow-router-extra/server/route.js","meteor://ðŸ’»app/packages/ostrio:flow-router-extra/server/router.js"],"names":["module","export","FlowRouter","Router","Route","Group","Triggers","BlazeRenderer","importSync","v","_","makeTriggers","base","_triggers","triggers","isArray","concat","router","options","parent","prefix","test","Error","_router","name","_triggersEnter","triggersEnter","_triggersExit","triggersExit","route","_pathDef","_group","group","pathDef","exports","default","path","action","Function","prototype","subscriptions","_subsMap","register","sub","subscription","middleware","Meteor","qs","require","pathRegExp","_routes","_routesMap","_onRouteCallbacks","enter","exit","push","_triggerRouteRegister","fields","queryParams","replace","key","firstRegexpChar","indexOf","substring","undefined","match","strQueryParams","stringify","onRouteRegister","cb","currentRoute","routePublicApi","pick","omit","each","go","current","getState","getAllStates","setState","removeState","clearStates","ready","initialize","wait","url","absoluteUrl","apply","arguments","RegExp","_basePath"],"mappings":"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","file":"/packages/ostrio_flow-router-extra.js","sourcesContent":["import Router from './router.js';\nimport Route  from './route.js';\nimport Group  from './group.js';\n\nconst Triggers = {};\nconst BlazeRenderer = {};\n\nconst FlowRouter = new Router();\nFlowRouter.Router = Router;\nFlowRouter.Route = Route;\n\nexport { FlowRouter, Router, Route, Group, Triggers, BlazeRenderer };\n","import { _ } from 'meteor/underscore';\n\nconst makeTriggers = (base, _triggers) => {\n  let triggers = _triggers || [];\n  if (triggers) {\n    if (!_.isArray(triggers)) {\n      triggers = [triggers];\n    }\n  }\n\n  return (base || []).concat(triggers);\n};\n\nclass Group {\n  constructor(router, options = {}, parent) {\n    if (options.prefix && !/^\\/.*/.test(options.prefix)) {\n      throw new Error('group\\'s prefix must start with \"/\"');\n    }\n\n    this._router = router;\n    this.prefix = options.prefix || '';\n    this.name = options.name;\n    this.options = options;\n\n    this._triggersEnter = makeTriggers(this._triggersEnter, options.triggersEnter);\n    this._triggersExit = makeTriggers(this._triggersExit, options.triggersExit);\n\n    this.parent = parent;\n    if (this.parent) {\n      this.prefix = parent.prefix + this.prefix;\n\n      this._triggersEnter = makeTriggers(this._triggersEnter, parent.triggersEnter);\n      this._triggersExit = makeTriggers(this._triggersExit, parent.triggersExit);\n    }\n  }\n\n  route(_pathDef, options = {}, _group) {\n    if (!/^\\/.*/.test(_pathDef)) {\n      throw new Error('route\\'s path must start with \"/\"');\n    }\n\n    const group = _group || this;\n    const pathDef = this.prefix + _pathDef;\n\n    options.triggersEnter = makeTriggers(this._triggersEnter, options.triggersEnter);\n    options.triggersExit = makeTriggers(this._triggersExit, options.triggersExit);\n\n    return this._router.route(pathDef, options, group);\n  }\n\n  group(options) {\n    const group = new Group(this._router, options, this);\n    group.parent = this;\n\n    return group;\n  }\n}\n\nexport default Group;\n","class Route {\n  constructor(router, pathDef, options = {}) {\n    this.options = options;\n    this.name = options.name;\n    this.pathDef = pathDef;\n\n    // Route.path is deprecated and will be removed in 3.0\n    this.path = pathDef;\n\n    this.action = options.action || Function.prototype;\n    this.subscriptions = options.subscriptions || Function.prototype;\n    this._subsMap = {};\n  }\n\n\n  register(name, sub) {\n    this._subsMap[name] = sub;\n  }\n\n\n  subscription(name) {\n    return this._subsMap[name];\n  }\n\n\n  middleware() {\n    // ?\n  }\n}\n\nexport default Route;\n","import { _ }      from 'meteor/underscore';\nimport Route      from './route.js';\nimport Group      from './group.js';\nimport { Meteor } from 'meteor/meteor';\n\nconst qs = require('qs');\nconst pathRegExp = /(:[\\w\\(\\)\\\\\\+\\*\\.\\?\\[\\]\\-]+)+/g;\n\nclass Router {\n  constructor() {\n    this._routes = [];\n    this._routesMap = {};\n    this.subscriptions = Function.prototype;\n\n    // holds onRoute callbacks\n    this._onRouteCallbacks = [];\n\n    this.triggers = {\n      enter() {\n        // client only\n      },\n      exit() {\n        // client only\n      }\n    };\n  }\n\n  route(pathDef, options = {}) {\n    if (!/^\\/.*/.test(pathDef)) {\n      throw new Error('route\\'s path must start with \"/\"');\n    }\n\n    const route = new Route(this, pathDef, options);\n    this._routes.push(route);\n\n    if (options.name) {\n      this._routesMap[options.name] = route;\n    }\n\n    this._triggerRouteRegister(route);\n    return route;\n  }\n\n  group(options) {\n    return new Group(this, options);\n  }\n\n  path(pathDef, fields = {}, queryParams) {\n    if (this._routesMap[pathDef]) {\n      pathDef = this._routesMap[pathDef].path;\n    }\n\n    let path = pathDef.replace(pathRegExp, (key) => {\n      const firstRegexpChar = key.indexOf('(');\n      // get the content behind : and (\\\\d+/)\n      key = key.substring(1, (firstRegexpChar > 0) ? firstRegexpChar : undefined);\n      // remove +?*\n      key = key.replace(/[\\+\\*\\?]+/g, '');\n\n      return fields[key] || '';\n    });\n\n    path = path.replace(/\\/\\/+/g, '/'); // Replace multiple slashes with single slash\n\n    // remove trailing slash\n    // but keep the root slash if it's the only one\n    path = path.match(/^\\/{1}$/) ? path : path.replace(/\\/$/, '');\n\n    const strQueryParams = qs.stringify(queryParams || {});\n    if(strQueryParams) {\n      path += '?' + strQueryParams;\n    }\n\n    return path;\n  }\n\n  onRouteRegister(cb) {\n    this._onRouteCallbacks.push(cb);\n  }\n\n  _triggerRouteRegister(currentRoute) {\n    // We should only need to send a safe set of fields on the route\n    // object.\n    // This is not to hide what's inside the route object, but to show\n    // these are the public APIs\n    const routePublicApi = _.pick(currentRoute, 'name', 'pathDef', 'path');\n    routePublicApi.options = _.omit(currentRoute.options, ['triggersEnter', 'triggersExit', 'action', 'subscriptions', 'name']);\n\n    _.each(this._onRouteCallbacks, function(cb) {\n      cb(routePublicApi);\n    });\n  }\n\n\n  go() {\n    // client only\n  }\n\n\n  current() {\n    // client only\n  }\n\n  middleware() {\n    // client only\n  }\n\n\n  getState() {\n    // client only\n  }\n\n\n  getAllStates() {\n    // client only\n  }\n\n\n  setState() {\n    // client only\n  }\n\n\n  removeState() {\n    // client only\n  }\n\n\n  clearStates() {\n    // client only\n  }\n\n\n  ready() {\n    // client only\n  }\n\n\n  initialize() {\n    // client only\n  }\n\n  wait() {\n    // client only\n  }\n\n  url() {\n    // We need to remove the leading base path, or \"/\", as it will be inserted\n    // automatically by `Meteor.absoluteUrl` as documented in:\n    // http://docs.meteor.com/#/full/meteor_absoluteurl\n    return Meteor.absoluteUrl(this.path.apply(this, arguments).replace(new RegExp('^' + ('/' + (this._basePath || '') + '/').replace(/\\/\\/+/g, '/')), ''));\n  }\n}\n\nexport default Router;\n"]}